{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/utils/index.js","webpack:///./demo/index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/basic/index.js","webpack:///./demo/src/basic/AnimateContainer.js","webpack:///./src/Provider.js","webpack:///./src/Model/index.js","webpack:///./src/ModelContext.js","webpack:///./src/DropContainer/index.js","webpack:///./src/DropItem/index.js","webpack:///./src/WidgetItem/index.js","webpack:///./src/DragLayer/index.js","webpack:///./src/hooks/index.js","webpack:///./src/DropEmptyContainer.js","webpack:///./demo/src/basic/DropContainerDemo.js","webpack:///./demo/src/basic/DropContainerWithChildDemo.js","webpack:///./demo/src/basic/widgets/index.js","webpack:///./demo/src/basic/widgets/TextField/index.js","webpack:///./demo/src/basic/widgets/TextareaField/index.js","webpack:///./demo/src/basic/widgets/SelectField/index.js","webpack:///./demo/src/basic/widgets/CheckboxField/index.js","webpack:///./demo/src/basic/widgets/RadioField/index.js","webpack:///./demo/src/sort-list/index.js","webpack:///./demo/src/sort-list-animation/index.js","webpack:///./demo/src/drag-layer/index.js","webpack:///./demo/src/todo-list/index.js","webpack:///./demo/src/pivot-table-01/index.js","webpack:///./demo/src/pivot-table-01/fields.js","webpack:///./demo/src/pivot-table-01/ItemDragLayer.js","webpack:///./demo/src/pivot-table-02/index.js","webpack:///./demo/src/pivot-table-02/fields.js","webpack:///./demo/src/pivot-table-02/ItemDragLayer.js","webpack:///./src/constants.js","webpack:///./src/Model/DragState.js"],"names":["_reactDndHtml5Backend","__webpack_require__","_Provider","_interopRequireDefault","_DropContainer","_DropItem","_WidgetItem","_DragLayer","_hooks","_DropEmptyContainer","constants","_interopRequireWildcard","_ModelContext","useModel","ModelContext","Provider","WidgetItem","DropContainer","DropItem","DragLayer","getEmptyImage","DropEmptyContainer","getRectDirection","x","y","width","height","px","py","y_ac","y_bd","middle_x","middle_y","ret","apply","arguments","dir","node","document","body","contains","_react","_reactDom","_src","ReactDOM","render","default","createElement","getElementById","_reactRouterDom","_basic","_sortList","_sortListAnimation","_dragLayer","_todoList","_pivotTable","_pivotTable2","HashRouter","className","NavLink","to","Switch","Route","path","exact","Redirect","component","Basic","SortList","TodoList","SortListAnimation","PivotTable1","PivotTable2","_React$useState","React","useState","items","_React$useState2","_slicedToArray2","metadata","onMetadataChange","value","onChange","onDragStart","ev","console","log","onDragEnd","onDrop","style","display","flex","widgets","map","widget","key","xtype","getInstance","_objectSpread2","id","Math","random","toString","slice","pid","index","idx","_ref2","connectDragTarget","ref","lineHeight","padding","title","_DropContainerDemo","_AnimateContainer","_DropContainerWithChildDemo","canDrop","item","DragLayerDemo","_widgets","_ref","isDragging","background","position","top","right","monitor","connectDropTarget","list","_toConsumableArray2","sort","a","b","border","pos","i","length","getPositionIndex","connectDragAndDrop","isOver","isHover","isTmp","transition","left","transform","concat","zIndex","opacity","_reactDnd","_Model","PageDesignCoreProvider","model","_this","this","_this$props","props","backend","_objectWithoutProperties2","DndProvider","_extends2","saveModel","Component","HTML5Backend","_propTypes","_find","_last","_findIndex","_DragState","_constants","randomStr","undefined","normalizeItem","idField","pidField","WebDesignModel","createContext","isRootContainer","axis","AXIS_VERTICAL","scope","defaultValue","DragState","getState","setState","state","eventName","handler","getAllItems","filter","_this$props2","pids","getItem","pNode","currentFieldId","push","getItemIndex","s1","s2","__tmp__","addItem","_this2","shouldRemove","getPids","indexOf","bItem","isSameItem","_this$props3","_idx","prevItem","oIdx","splice","_this$props4","nextItem","hasTmp","newItems","_this$props5","_this3","dragState","dragItem","hoverPid","hoverItem","hoverDirection","isNew","reset","moveItem","DRAG_DIR_UP","DRAG_DIR_LEFT","insertBefore","insertAfter","_addItem","childs","getItems","updateItemPid","_create","children","getModel","forEach","propTypes","array","oneOf","AXIS_BOTH","AXIS_HORIZONTAL","commitAction","COMMIT_ACTION_AUTO","COMMIT_ACTION_DROP","func","onDragHoverContainer","onDragHoverItem","_withComponentHooks","_invariant","dom","findDOMNode","_connectDropTarget","_this$props$pid","hover","drop","collect","targetDOM","context","accept","getScope","dragResult","shallow","DRAG_DIR_NONE","fireEvent","target","didDrop","commitItem","commitDragStateItem","type","EVENT_TYPE_ADD","EVENT_TYPE_SORT","ext","isStrictlyOver","_this$props2$pid","DropContainerContext","useContext","_useDrop","useDrop","getDropOptions","_useDrop2","collectedProps","isTmpItem","child","oneOfType","any","_utils","targetOffset","getBoundingClientRect","dragOffset","getClientOffset","middleX","middleY","bottom","result","DRAG_DIR_DOWN","DRAG_DIR_RIGHT","getHoverDirection","pAxis","_model$props","mAxis","currentDirection","lastHoverDirection","_lastHoverDirection","forceUpdate","canDrag","beginDrag","endDrag","begin","dragDOM","_connectDragDOM","dragDOMIsRemove","end","_DragState$getState2","parentNode","removeChild","_connectDragTarget","setTimeout","isNodeInDocument","overflow","appendChild","_connectDragPreview","_this4","collectedDropProps","_useDrag","useDrag","getDragOptions","_useDrag2","collectedDragProps","connectDragPreview","useCallback","object","isRequired","addTmpItem","_DragState$getState","clearTmpItems","collectProps","useDragLayer","getItemType","initialClientOffset","getInitialClientOffset","initialSourceClientOffset","getInitialSourceClientOffset","clientOffset","differenceFromInitialOffset","getDifferenceFromInitialOffset","sourceClientOffset","getSourceClientOffset","_ref$pid","_ref3","margin","_ref4","_ref5","_TextField","_TextareaField","_SelectField","_CheckboxField","_RadioField","TextField","TextareaField","SelectField","CheckboxField","RadioField","dataset","ListItem","borderRadius","renderList","getItemPosition","ItemDragLayer","initData","useEffect","cloneNode","rect","pointerEvents","boxSizing","_React$useState3","_React$useState4","_ref6","memo","borderColor","borderTop","borderBottom","flexDirection","backgroundColor","_ref7","_classnames","_fields","_ItemDragLayer","fid","FieldItem","field","DropFieldContainer","_canDrop","names","name","field-drop-list","can-drop","is-over","onClick","removeItem","fields","_stringify","fontSize","cursor","E_VALUE_ITEM","handleChange","shouldShowEValue","EVI","currentDragDOM","newState"],"mappings":"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","file":"js/index.29c1a22e.chunk.js","sourcesContent":["import { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport Provider from \"./Provider\";\r\nimport DropContainer from \"./DropContainer\";\r\nimport DropItem from \"./DropItem\";\r\nimport WidgetItem from \"./WidgetItem\";\r\nimport DragLayer from \"./DragLayer\";\r\nimport { useModel } from \"./hooks\";\r\nimport DropEmptyContainer from \"./DropEmptyContainer\";\r\nimport * as constants from \"./constants\";\r\nimport ModelContext from \"./ModelContext\";\r\n\r\nexport {\r\n    useModel,\r\n    constants,\r\n    ModelContext,\r\n    Provider,\r\n    WidgetItem,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n};\r\n\r\nexport default {\r\n    useModel,\r\n    constants,\r\n    ModelContext,\r\n    Provider,\r\n    WidgetItem,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n};\r\n","/**\r\n * 判断指定坐标在指定矩形上的位置\r\n *\r\n * @param {number} x 矩形x坐标\r\n * @param {number} y 矩形y坐标\r\n * @param {number} width 矩形宽度\r\n * @param {number} height 矩形高度\r\n * @param {number} px 待检测坐标x(一般位鼠标x坐标)\r\n * @param {number} py 待检测坐标y(一般位鼠标y坐标)\r\n * @returns {number} 1:up 2:down 3:left 4:right -1:center(对角线上)\r\n */\r\nexport function getRectDirection(x, y, width, height, px, py) {\r\n    const y_ac =\r\n        ((y + height) * px - y * px + y * (x + width) - (y + height) * x) /\r\n        (x + width - x);\r\n    const y_bd =\r\n        (y * px - (y + height) * px + (y + height) * (x + width) - y * x) /\r\n        (x + width - x);\r\n\r\n    if (py < y_ac && py < y_bd) {\r\n        return 1;\r\n    } else if (py > y_ac && py > y_bd) {\r\n        return 2;\r\n    } else if (py > y_ac && py < y_bd) {\r\n        return 3;\r\n    } else if (py < y_ac && py > y_bd) {\r\n        return 4;\r\n    } else {\r\n        //处在对角线上\r\n        const middle_x = x + width / 2;\r\n        const middle_y = y + height / 2;\r\n\r\n        if (px > middle_x && py < middle_y) {\r\n            //右上对角线\r\n            return 1;\r\n        } else if (px > middle_x && py > middle_y) {\r\n            //右下对角线\r\n            return 2;\r\n        } else if (px < middle_x && py < middle_y) {\r\n            //左上对角线\r\n            return 1;\r\n        } else if (px < middle_x && py > middle_y) {\r\n            //左下对角线\r\n            return 2;\r\n        } else {\r\n            //中心点\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isBeforeRect(...a) {\r\n    const ret = getRectDirection(...a);\r\n\r\n    return ret === 1 || ret === 3;\r\n}\r\n\r\nexport function getHoverDirection(...a) {\r\n    const ret = getRectDirection(...a);\r\n\r\n    let dir = \"down\";\r\n\r\n    if (ret === 1) {\r\n        dir = \"up\";\r\n    } else if (ret === 2) {\r\n        dir = \"down\";\r\n    } else if (ret === 3) {\r\n        dir = \"left\";\r\n    } else if (ret === 4) {\r\n        dir = \"right\";\r\n    }\r\n\r\n    return dir;\r\n}\r\n\r\nexport function isNodeInDocument(node) {\r\n    return document.body.contains(node);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./src\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\n\r\nimport { HashRouter, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Basic from \"./basic\";\r\nimport SortList from \"./sort-list\";\r\nimport SortListAnimation from \"./sort-list-animation\";\r\nimport DragLayer from \"./drag-layer\";\r\nimport TodoList from \"./todo-list\";\r\nimport PivotTable1 from \"./pivot-table-01\";\r\nimport PivotTable2 from \"./pivot-table-02\";\r\n\r\nimport \"./style/index.scss\";\r\n\r\nexport default () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app-demo\">\r\n                <div className=\"left-nav\">\r\n                    <NavLink to=\"/basic\">基本功能</NavLink>\r\n                    <NavLink to=\"/sort-list\">列表排序</NavLink>\r\n                    <NavLink to=\"/sort-list-animation\">\r\n                        列表排序(动画效果)\r\n                    </NavLink>\r\n                    <NavLink to=\"/drag-layer\">自定义推拽层</NavLink>\r\n                    <NavLink to=\"/todo-list\">TodoList</NavLink>\r\n                    <NavLink to=\"/pivot-table-01\">多维分析</NavLink>\r\n                    <NavLink to=\"/pivot-table-02\">数据透视</NavLink>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/\"\r\n                            exact\r\n                            render={() => <Redirect to=\"/basic\" />}\r\n                        />\r\n                        <Route path=\"/basic\" component={Basic} />\r\n                        <Route path=\"/sort-list\" component={SortList} />\r\n                        <Route path=\"/todo-list\" component={TodoList} />\r\n                        <Route\r\n                            path=\"/sort-list-animation\"\r\n                            component={SortListAnimation}\r\n                        />\r\n                        <Route path=\"/drag-layer\" component={DragLayer} />\r\n                        <Route path=\"/pivot-table-01\" component={PivotTable1} />\r\n                        <Route path=\"/pivot-table-02\" component={PivotTable2} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport AnimateContainer from \"./AnimateContainer\";\r\n\r\nimport DropContainerDemo from \"./DropContainerDemo\";\r\nimport DropContainerWithChildDemo from \"./DropContainerWithChildDemo\";\r\n\r\nimport { Provider, WidgetItem, DragLayer } from \"@/src\";\r\n\r\nimport widgets from \"./widgets\";\r\n\r\nfunction randomStr() {\r\n    return Math.random()\r\n        .toString(16)\r\n        .slice(2, 8);\r\n}\r\n\r\nlet idx = 1;\r\n\r\nfunction DragLayerDemo() {\r\n    return (\r\n        <DragLayer>\r\n            {({ isDragging }) =>\r\n                !isDragging ? null : (\r\n                    <div\r\n                        style={{\r\n                            padding: 5,\r\n                            background: \"rgba(0,0,0,.2)\",\r\n                            position: \"fixed\",\r\n                            top: 0,\r\n                            right: 0\r\n                        }}\r\n                    >\r\n                        dragLayer: isDragging...\r\n                    </div>\r\n                )\r\n            }\r\n        </DragLayer>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const [metadata, onMetadataChange] = React.useState({\r\n        items: []\r\n    });\r\n\r\n    function onChange(items) {\r\n        onMetadataChange({\r\n            items\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Provider\r\n            // 受控\r\n            value={metadata.items}\r\n            onChange={onChange}\r\n            onDragStart={ev => {\r\n                console.log(\"onDragStart\", ev);\r\n            }}\r\n            onDragEnd={ev => {\r\n                console.log(\"onDragEnd\", ev);\r\n            }}\r\n            onDrop={ev => {\r\n                console.log(\"onDrop\", ev);\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    height: \"100%\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: 240,\r\n                        flex: \"none\"\r\n                    }}\r\n                >\r\n                    {widgets.map(widget => {\r\n                        return (\r\n                            <WidgetItem\r\n                                key={widget.xtype}\r\n                                // disabled={widget.xtype === \"EX_URL_FIELD\"}\r\n                                getInstance={() => ({\r\n                                    ...widget,\r\n                                    id: randomStr(),\r\n                                    pid: null,\r\n                                    index: idx++\r\n                                })}\r\n                            >\r\n                                {({ connectDragTarget }) => (\r\n                                    <div\r\n                                        ref={connectDragTarget}\r\n                                        style={{\r\n                                            height: 32,\r\n                                            lineHeight: `32px`,\r\n                                            padding: \"0 20px\"\r\n                                        }}\r\n                                    >\r\n                                        {widget.title}\r\n                                    </div>\r\n                                )}\r\n                            </WidgetItem>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <DropContainerDemo title=\"A\" />\r\n                <DropContainerDemo pid=\"b\" title=\"B\" />\r\n                <AnimateContainer />\r\n\r\n                <DropContainerWithChildDemo title=\"Parent\" />\r\n                <DropContainerDemo\r\n                    pid=\"d\"\r\n                    title=\"D\"\r\n                    canDrop={item => {\r\n                        return item.xtype === \"EX_TEXTAREA_FIELD\";\r\n                    }}\r\n                />\r\n                <DragLayerDemo />\r\n            </div>\r\n        </Provider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function AnimateContainer() {\r\n    return (\r\n        <DropContainer pid=\"Animate\">\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                const list = [...items];\r\n                list.sort((a, b) => a.index - b.index);\r\n\r\n                function getPositionIndex(index) {\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i];\r\n                        if (item.index === index) return i;\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>Animate</h3>\r\n                        <hr />\r\n                        <div\r\n                            style={{\r\n                                position: \"relative\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    position: \"relative\"\r\n                                }}\r\n                            >\r\n                                {list.map((item, index) => {\r\n                                    var pos = getPositionIndex(item.index);\r\n\r\n                                    return (\r\n                                        <DropItem key={item.id} item={item}>\r\n                                            {({\r\n                                                connectDragAndDrop,\r\n                                                isDragging,\r\n                                                isHover,\r\n                                                isOver,\r\n                                                isTmp\r\n                                            }) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        ref={connectDragAndDrop}\r\n                                                        key={item.id}\r\n                                                        id={item.id}\r\n                                                        style={{\r\n                                                            transition:\r\n                                                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                                                            position:\r\n                                                                \"absolute\",\r\n                                                            left: 5,\r\n                                                            right: 5,\r\n                                                            transform: `translate(0, ${(30 +\r\n                                                                18) *\r\n                                                                pos}px)`,\r\n                                                            zIndex: isDragging\r\n                                                                ? 2\r\n                                                                : 1,\r\n                                                            opacity: isDragging\r\n                                                                ? 0.5\r\n                                                                : 1,\r\n                                                            padding: 10,\r\n                                                            background:\r\n                                                                \"#f2f2f2\",\r\n                                                            border:\r\n                                                                isOver &&\r\n                                                                !isDragging\r\n                                                                    ? \"1px solid green\"\r\n                                                                    : \"1px solid #dadada\"\r\n                                                        }}\r\n                                                    >\r\n                                                        {item.title}({item.id})\r\n                                                    </div>\r\n                                                );\r\n                                            }}\r\n                                        </DropItem>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nimport Model from \"./Model\";\r\n\r\nexport default class PageDesignCoreProvider extends React.Component {\r\n    static defaultProps = {\r\n        backend: HTML5Backend\r\n    };\r\n\r\n    model = null;\r\n\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n\r\n    saveModel = model => {\r\n        this.model = model;\r\n    };\r\n\r\n    render() {\r\n        const { backend, ...props } = this.props;\r\n\r\n        return (\r\n            <DndProvider backend={backend}>\r\n                <Model {...props} ref={this.saveModel} />\r\n            </DndProvider>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport find from \"lodash/find\";\r\nimport last from \"lodash/last\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport DragState from \"./DragState\";\r\nimport {\r\n    COMMIT_ACTION_AUTO,\r\n    COMMIT_ACTION_DROP,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\n\r\nfunction randomStr(prefix = \"\") {\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(16)\r\n            .slice(2, 8)\r\n    );\r\n}\r\n\r\nfunction normalizeItem(item, props) {\r\n    const idField = props.idField;\r\n    const pidField = props.pidField;\r\n\r\n    item[idField] =\r\n        item[idField] === undefined ? randomStr(`item_`) : item[idField];\r\n\r\n    item[pidField] = item[pidField] === undefined ? null : item[pidField];\r\n\r\n    return item;\r\n}\r\n\r\nexport default class WebDesignModel extends React.Component {\r\n    static propTypes = {\r\n        value: propTypes.array,\r\n        defaultValue: propTypes.array,\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        commitAction: propTypes.oneOf([COMMIT_ACTION_AUTO, COMMIT_ACTION_DROP]),\r\n        onChange: propTypes.func,\r\n        onDragStart: propTypes.func,\r\n        onDragEnd: propTypes.func,\r\n        onDrop: propTypes.func,\r\n        onDragHoverContainer: propTypes.func,\r\n        onDragHoverItem: propTypes.func\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.value) {\r\n            props.value.forEach(item => normalizeItem(item, props));\r\n        }\r\n        return {\r\n            items: \"value\" in props ? props.value : state.items\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        idField: \"id\",\r\n        pidField: \"pid\",\r\n        axis: AXIS_VERTICAL,\r\n        commitAction: COMMIT_ACTION_AUTO,\r\n        onChange: null\r\n    };\r\n\r\n    DropContainerContext = React.createContext({\r\n        isRootContainer: true,\r\n        axis: AXIS_VERTICAL\r\n    });\r\n\r\n    state = {\r\n        scope: randomStr(\"scope_\"),\r\n        items: this.props.defaultValue || []\r\n    };\r\n\r\n    getDragState() {\r\n        return DragState.getState();\r\n    }\r\n\r\n    onChange(items) {\r\n        const props = this.props;\r\n        const { onChange } = props;\r\n\r\n        if (!(\"value\" in props)) {\r\n            this.setState({\r\n                items\r\n            });\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange(items);\r\n        }\r\n    }\r\n\r\n    getScope() {\r\n        return this.state.scope;\r\n    }\r\n\r\n    fireEvent(eventName, ev) {\r\n        const { onDragStart, onDragEnd, onDrop } = this.props;\r\n\r\n        const events = {\r\n            onDragStart,\r\n            onDragEnd,\r\n            onDrop\r\n        };\r\n\r\n        const handler = events[eventName];\r\n\r\n        if (handler) {\r\n            handler(ev);\r\n        }\r\n    }\r\n\r\n    getItems(pid = null) {\r\n        const { pidField } = this.props;\r\n        const items = this.getAllItems();\r\n\r\n        return items.filter(item => item && item[pidField] == pid);\r\n    }\r\n\r\n    getChildren(id = null, items = this.state.items) {\r\n        const { pidField } = this.props;\r\n        return items.filter(item => item && item[pidField] == id);\r\n    }\r\n\r\n    getAllItems() {\r\n        return [...this.state.items];\r\n    }\r\n\r\n    //获取组件的所有父级ID\r\n    getPids(id) {\r\n        const { idField, pidField } = this.props;\r\n        const pids = [];\r\n        let node = this.getItem(id);\r\n\r\n        if (!node) return pids;\r\n\r\n        if (!node[pidField]) return pids;\r\n\r\n        let currentFieldId = node[pidField];\r\n        let pNode;\r\n        while ((pNode = this.getItem(currentFieldId))) {\r\n            pids.push(pNode[idField]);\r\n            currentFieldId = pNode[pidField];\r\n            if (!currentFieldId) break;\r\n        }\r\n\r\n        return pids;\r\n    }\r\n\r\n    updateItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1) {\r\n            items[idx] = item;\r\n        }\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    isSameItem(s1, s2) {\r\n        const { idField } = this.props;\r\n\r\n        return s1 && s2 && s1[idField] === s2[idField];\r\n    }\r\n\r\n    _addItem(item, pid = null) {\r\n        const { pidField } = this.props;\r\n        item = normalizeItem(item, this.props);\r\n        item[pidField] = pid;\r\n\r\n        this.state.items.push(item);\r\n    }\r\n\r\n    addItem(item, pid = null) {\r\n        const { pidField } = this.props;\r\n        item = normalizeItem(item, this.props);\r\n\r\n        const items = this.getAllItems();\r\n\r\n        item[pidField] = pid;\r\n\r\n        items.push(item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    addTmpItem(item, pid) {\r\n        item.__tmp__ = true;\r\n        this.addItem(item, pid);\r\n    }\r\n\r\n    removeItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        //移除指定项目及子项目\r\n        const ret = items.filter(item => {\r\n            let shouldRemove = item[idField] === id;\r\n\r\n            if (!shouldRemove) {\r\n                const pids = this.getPids(item[idField]);\r\n                shouldRemove = pids.indexOf(id) > -1;\r\n            }\r\n\r\n            return !shouldRemove;\r\n        });\r\n\r\n        this.onChange(ret);\r\n    }\r\n\r\n    getItemIndex(id, items) {\r\n        const { idField } = this.props;\r\n        items = items || this.getAllItems();\r\n        return findIndex(items, item => item[idField] === id);\r\n    }\r\n\r\n    getItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        return find(items, item => item && item[idField] === id);\r\n    }\r\n\r\n    insertBefore(item, bItem) {\r\n        if (this.isSameItem(item, bItem)) return;\r\n\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = bItem[idField];\r\n        // const bItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== 0) {\r\n            const prevItem = items[_idx - 1];\r\n            if (\r\n                prevItem[idField] === item[idField] &&\r\n                prevItem[pidField] === bItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = bItem[pidField];\r\n\r\n        //插入操作\r\n        const idx = this.getItemIndex(id, items);\r\n        items.splice(idx, 0, item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    insertAfter(item, prevItem) {\r\n        if (this.isSameItem(item, prevItem)) return;\r\n\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = prevItem[idField];\r\n        // const prevItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== items.length - 1) {\r\n            const nextItem = items[_idx + 1];\r\n            if (\r\n                nextItem[idField] === item[idField] &&\r\n                nextItem[pidField] === prevItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = prevItem[pidField];\r\n\r\n        //插入操作 之前有删除操作, 要重新查找index\r\n        const idx = findIndex(items, item => item[idField] === id);\r\n        items.splice(idx, 1, items[idx], item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    clearTmpItems() {\r\n        const items = this.getAllItems();\r\n        let hasTmp = false;\r\n\r\n        const newItems = items.filter(item => {\r\n            const isTmp = item.__tmp__;\r\n            isTmp && (hasTmp = true);\r\n            return !isTmp;\r\n        });\r\n\r\n        hasTmp && this.onChange(newItems);\r\n    }\r\n\r\n    updateItemPid(item, pid = null) {\r\n        const { idField, pidField } = this.props;\r\n\r\n        if (item[pidField] === pid) return true;\r\n\r\n        const id = item[idField];\r\n        const items = this.getAllItems();\r\n\r\n        /**\r\n         * 局部环路检测\r\n         * 如: {id: A, pid: null}  {id: B, pid: A}\r\n         * 如果updateItemPid(A, B) 结果为:\r\n         * {id: A, pid: B}  {id: B, pid: A}\r\n         *\r\n         */\r\n        const pids = pid == null ? [] : this.getPids(pid);\r\n        if (pids.length) {\r\n            if (pids.indexOf(id) !== -1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        const idx = this.getItemIndex(id, items);\r\n\r\n        if (idx === -1) return false;\r\n\r\n        item[pidField] = pid;\r\n        //将当前項添加至尾部\r\n        items.splice(idx, 1);\r\n        items.push(item);\r\n\r\n        this.onChange(items);\r\n\r\n        return true;\r\n    }\r\n\r\n    commitItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1 && item.__tmp__) {\r\n            item.__tmp__ = false;\r\n            delete item.__tmp__;\r\n            items[idx] = item;\r\n\r\n            this.onChange(items);\r\n        }\r\n    }\r\n\r\n    //提交DragState中的数据\r\n    commitDragStateItem() {\r\n        const dragState = DragState.getState();\r\n        const canDrop = dragState.canDrop;\r\n        const dragItem = dragState.item;\r\n        const hoverPid = dragState.hoverPid;\r\n        const hoverItem = dragState.hoverItem;\r\n        const hoverDirection = dragState.hoverDirection;\r\n        const isDragging = dragState.isDragging;\r\n        const isNew = dragState.isNew;\r\n\r\n        if (!isDragging || !canDrop) return;\r\n\r\n        DragState.reset();\r\n\r\n        const moveItem = () => {\r\n            if (\r\n                hoverDirection === DRAG_DIR_UP ||\r\n                hoverDirection === DRAG_DIR_LEFT\r\n            ) {\r\n                this.insertBefore(dragItem, hoverItem);\r\n            } else {\r\n                this.insertAfter(dragItem, hoverItem);\r\n            }\r\n        };\r\n\r\n        if (isNew) {\r\n            if (hoverItem) {\r\n                //新增\r\n                this._addItem(dragItem, undefined, false);\r\n                //移动\r\n                moveItem();\r\n            } else {\r\n                //新增\r\n                this.addItem(dragItem, hoverPid);\r\n            }\r\n        } else {\r\n            if (hoverItem) {\r\n                moveItem();\r\n            } else {\r\n                const childs = this.getItems(hoverPid);\r\n                const isExist = find(childs, item =>\r\n                    this.isSameItem(item, dragItem)\r\n                );\r\n\r\n                if (!isExist) {\r\n                    if (childs.length) {\r\n                        this.insertAfter(dragItem, last(childs));\r\n                    } else {\r\n                        this.updateItemPid(dragItem, hoverPid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isTmpItem(item) {\r\n        return !!item.__tmp__;\r\n    }\r\n\r\n    getModel() {\r\n        return Object.create(this);\r\n        // return {\r\n        //     DropContainerContext: this.DropContainerContext,\r\n        //     isSameItem: this.isSameItem.bind(this),\r\n        //     getScope: this.getScope.bind(this),\r\n        //     fireEvent: this.fireEvent.bind(this),\r\n        //     addItem: this.addItem.bind(this),\r\n        //     addTmpItem: this.addTmpItem.bind(this),\r\n        //     getPids: this.getPids.bind(this),\r\n        //     updateItem: this.updateItem.bind(this),\r\n        //     getItems: this.getItems.bind(this),\r\n        //     getAllItems: this.getAllItems.bind(this),\r\n        //     removeItem: this.removeItem.bind(this),\r\n        //     getItemIndex: this.getItemIndex.bind(this),\r\n        //     getItem: this.getItem.bind(this),\r\n        //     insertBefore: this.insertBefore.bind(this),\r\n        //     insertAfter: this.insertAfter.bind(this),\r\n        //     clearTmpItems: this.clearTmpItems.bind(this),\r\n        //     commitItem: this.commitItem.bind(this),\r\n        //     isTmpItem: this.isTmpItem.bind(this),\r\n        //     updateItemPid: this.updateItemPid.bind(this),\r\n        //     setItemDragging: this.setItemDragging.bind(this),\r\n        //     isDragging: this.isDragging.bind(this)\r\n        // };\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (\r\n            <ModelContext.Provider value={this.getModel()}>\r\n                {children}\r\n            </ModelContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default React.createContext({});","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport invariant from \"invariant\";\r\nimport {\r\n    EVENT_TYPE_ADD,\r\n    EVENT_TYPE_SORT,\r\n    DRAG_DIR_NONE,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    COMMIT_ACTION_DROP,\r\n    COMMIT_ACTION_AUTO,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass DropContainer extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        render: propTypes.func,\r\n        pid: propTypes.any,\r\n        collect: propTypes.func,\r\n        canDrop: propTypes.func,\r\n        hover: propTypes.func,\r\n        drop: propTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        pid: null\r\n    };\r\n\r\n    _connectDropTarget = null;\r\n\r\n    connectDropTarget() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        const dom = findDOMNode(this);\r\n\r\n        this._connectDropTarget(dom);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用 DropItem WidgetItem 同样提示\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._connectDropTarget(null);\r\n    }\r\n\r\n    getDropOptions() {\r\n        const { pid = null, hover, canDrop, drop, collect } = this.props;\r\n        const targetDOM = findDOMNode(this);\r\n\r\n        const model = this.context;\r\n\r\n        // const DropContainerContext = model.DropContainerContext;\r\n        // const { isRootContainer } = React.useContext(DropContainerContext);\r\n        const commitAction = model.props.commitAction;\r\n\r\n        return {\r\n            accept: model.getScope(),\r\n\r\n            canDrop: (dragResult, monitor) => {\r\n                if (canDrop) {\r\n                    return canDrop({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            hover: (dragResult, monitor) => {\r\n                const canDrop = monitor.canDrop();\r\n                if (hover) {\r\n                    hover({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                const isStrictlyOver = monitor.isOver({ shallow: true });\r\n                if (!isStrictlyOver) return;\r\n\r\n                DragState.setState({\r\n                    canDrop: monitor.canDrop(),\r\n                    hoverPid: pid,\r\n                    hoverItem: undefined,\r\n                    hoverDirection: DRAG_DIR_NONE\r\n                });\r\n\r\n                if (canDrop) {\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        model.updateItemPid(dragResult.item, pid);\r\n                    }\r\n                }\r\n\r\n                model.fireEvent(\"onDragHoverContainer\", {\r\n                    target: pid,\r\n                    targetDOM,\r\n                    monitor,\r\n                    component: this,\r\n                    model,\r\n                    ...dragResult\r\n                });\r\n            },\r\n\r\n            drop: (dragResult, monitor) => {\r\n                if (drop) {\r\n                    drop({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                // //在根节点统一commit时会出现问题，当根节点canDrop返回false时导致无法提交\r\n                // if (isRootContainer) {\r\n                //     const isTmpItem = model.isTmpItem(dragResult.item);\r\n\r\n                //     model.fireEvent(\"onDrop\", {\r\n                //         target: pid,\r\n                //         targetDOM,\r\n                //         type: isTmpItem ? EVENT_TYPE_ADD : EVENT_TYPE_SORT,\r\n                //         ...dragResult\r\n                //     });\r\n\r\n                //     if (commitAction === COMMIT_ACTION_AUTO) {\r\n                //         model.commitItem(dragResult.item);\r\n                //     } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                //         model.commitDragStateItem();\r\n                //     }\r\n                // }\r\n\r\n                if (!monitor.didDrop()) {\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        model.commitItem(dragResult.item);\r\n                    } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                        model.commitDragStateItem();\r\n                    }\r\n\r\n                    const { isNew } = DragState.getState();\r\n                    // const isTmpItem = model.isTmpItem(dragResult.item);\r\n                    model.fireEvent(\"onDrop\", {\r\n                        target: pid,\r\n                        targetDOM,\r\n                        type: isNew ? EVENT_TYPE_ADD : EVENT_TYPE_SORT,\r\n                        monitor,\r\n                        component: this,\r\n                        model,\r\n                        ...dragResult\r\n                    });\r\n                }\r\n            },\r\n\r\n            collect: monitor => {\r\n                const ext = collect ? collect(monitor) : {};\r\n\r\n                return {\r\n                    monitor,\r\n                    canDrop: monitor.canDrop(),\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    ...ext\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { pid = null, children, render, axis } = this.props;\r\n\r\n        const model = this.context;\r\n\r\n        const DropContainerContext = model.DropContainerContext;\r\n        const { isRootContainer } = React.useContext(DropContainerContext);\r\n\r\n        invariant(\r\n            isRootContainer ? true : pid != null,\r\n            \"sub DropContainer props.pid miss.\"\r\n        );\r\n\r\n        const [collectedProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        let items = model.getItems(pid);\r\n        if (!collectedProps.isOver) {\r\n            //collectedProps.isStrictlyOver\r\n            items = items.filter(item => !model.isTmpItem(item));\r\n        }\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n\r\n        const props = {\r\n            ...collectedProps,\r\n            model,\r\n            connectDropTarget,\r\n            items\r\n        };\r\n\r\n        const child = children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n\r\n        return (\r\n            <DropContainerContext.Provider\r\n                value={{\r\n                    isRootContainer: false,\r\n                    axis\r\n                }}\r\n            >\r\n                {child}\r\n            </DropContainerContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withHooks(DropContainer);\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport {\r\n    EVENT_TYPE_ADD,\r\n    EVENT_TYPE_SORT,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    DRAG_DIR_RIGHT,\r\n    DRAG_DIR_DOWN,\r\n    DRAG_DIR_NONE,\r\n    COMMIT_ACTION_DROP,\r\n    COMMIT_ACTION_AUTO,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport { isNodeInDocument, getHoverDirection } from \"../utils\";\r\n\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass DropItem extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        render: propTypes.func,\r\n        item: propTypes.object.isRequired,\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        canDrop: propTypes.func,\r\n        hover: propTypes.func,\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    _lastHoverDirection = DRAG_DIR_NONE;\r\n\r\n    getHoverDirection(\r\n        monitor,\r\n        targetDOM = findDOMNode(this),\r\n        axis = AXIS_VERTICAL\r\n    ) {\r\n        const targetOffset = targetDOM.getBoundingClientRect();\r\n\r\n        const dragOffset = monitor.getClientOffset();\r\n\r\n        const middleX = ~~(targetOffset.right - targetOffset.width / 2);\r\n        const middleY = ~~(targetOffset.bottom - targetOffset.height / 2);\r\n\r\n        let result = false;\r\n\r\n        switch (axis) {\r\n            case AXIS_VERTICAL:\r\n                result = dragOffset.y <= middleY ? DRAG_DIR_UP : DRAG_DIR_DOWN;\r\n                break;\r\n            case AXIS_HORIZONTAL:\r\n                result =\r\n                    dragOffset.x <= middleX ? DRAG_DIR_LEFT : DRAG_DIR_RIGHT;\r\n                break;\r\n            case AXIS_BOTH:\r\n                result = getHoverDirection(\r\n                    targetOffset.left,\r\n                    targetOffset.top,\r\n                    targetOffset.width,\r\n                    targetOffset.height,\r\n                    dragOffset.x,\r\n                    dragOffset.y\r\n                );\r\n                break;\r\n            default:\r\n                //vertical default\r\n                result = dragOffset.y <= middleY ? DRAG_DIR_UP : DRAG_DIR_DOWN;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getDropOptions() {\r\n        let { item, axis, canDrop, hover, drop } = this.props;\r\n        const targetDOM = findDOMNode(this);\r\n        const model = this.context;\r\n        const DropContainerContext = model.DropContainerContext;\r\n        const { axis: pAxis } = React.useContext(DropContainerContext);\r\n        const { commitAction, axis: mAxis } = model.props;\r\n\r\n        axis = axis || pAxis || mAxis;\r\n\r\n        return {\r\n            accept: model.getScope(),\r\n            canDrop: (dragResult, monitor) => {\r\n                const dragItem = dragResult.item;\r\n\r\n                let ret = model.isTmpItem(item)\r\n                    ? false\r\n                    : !model.isSameItem(item, dragItem);\r\n\r\n                if (ret && canDrop) {\r\n                    ret = canDrop({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                return ret;\r\n            },\r\n\r\n            hover: (dragResult, monitor) => {\r\n                const canDrop = monitor.canDrop();\r\n                if (hover) {\r\n                    hover({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                const isStrictlyOver = monitor.isOver({ shallow: true });\r\n                if (!isStrictlyOver) return;\r\n\r\n                const dragItem = dragResult.item;\r\n\r\n                const currentDirection = this.getHoverDirection(\r\n                    monitor,\r\n                    targetDOM,\r\n                    axis\r\n                );\r\n                const lastHoverDirection = this._lastHoverDirection;\r\n                this._lastHoverDirection = currentDirection;\r\n\r\n                DragState.setState({\r\n                    canDrop,\r\n                    hoverPid: undefined,\r\n                    hoverItem: item,\r\n                    hoverDirection: currentDirection\r\n                });\r\n\r\n                if (canDrop) {\r\n                    if (currentDirection !== lastHoverDirection) {\r\n                        //TODO: 此处最好再加参数控制。当commitAction=COMMIT_ACTION_AUTO且不需要hoverDirection属性时不建议执行\r\n                        //eg: && needHoverDirection\r\n                        this.forceUpdate();\r\n                    }\r\n\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        if (\r\n                            currentDirection === DRAG_DIR_UP ||\r\n                            currentDirection === DRAG_DIR_LEFT\r\n                        ) {\r\n                            model.insertBefore(dragItem, item);\r\n                        } else {\r\n                            model.insertAfter(dragItem, item);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                model.fireEvent(\"onDragHoverItem\", {\r\n                    target: item,\r\n                    targetDOM,\r\n                    monitor,\r\n                    component: this,\r\n                    model,\r\n                    ...dragResult\r\n                });\r\n            },\r\n\r\n            drop: (dragResult, monitor) => {\r\n                if (drop) {\r\n                    drop({\r\n                        ...dragResult,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                if (!monitor.didDrop()) {\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        model.commitItem(dragResult.item);\r\n                    } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                        model.commitDragStateItem();\r\n                    }\r\n\r\n                    const { isNew } = DragState.getState();\r\n                    // const isTmpItem = model.isTmpItem(dragResult.item);\r\n                    model.fireEvent(\"onDrop\", {\r\n                        target: item,\r\n                        targetDOM,\r\n                        type: isNew ? EVENT_TYPE_ADD : EVENT_TYPE_SORT,\r\n                        monitor,\r\n                        component: this,\r\n                        model,\r\n                        ...dragResult\r\n                    });\r\n                }\r\n            },\r\n\r\n            collect: monitor => {\r\n                return {\r\n                    monitor,\r\n                    hoverDirection: DRAG_DIR_NONE,\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    canDrop: model.isTmpItem(item) ? false : monitor.canDrop()\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    getDragOptions() {\r\n        const { item, canDrag, beginDrag, endDrag } = this.props;\r\n        const model = this.context;\r\n\r\n        return {\r\n            item: {\r\n                type: model.getScope()\r\n            },\r\n\r\n            canDrag: monitor => {\r\n                if (canDrag) {\r\n                    return canDrag({\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n                return true;\r\n            },\r\n\r\n            begin: monitor => {\r\n                const dom = findDOMNode(this);\r\n                const dragDOM = this._connectDragDOM;\r\n\r\n                if (beginDrag) {\r\n                    beginDrag({\r\n                        item,\r\n                        dom,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                DragState.setState({\r\n                    item,\r\n                    isNew: false,\r\n                    dragDOMIsRemove: false,\r\n                    isDragging: true,\r\n                    dragDOM\r\n                });\r\n\r\n                model.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    type: EVENT_TYPE_SORT,\r\n                    model,\r\n                    monitor,\r\n                    component: this\r\n                });\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end: (dragResult, monitor) => {\r\n                const { dragDOMIsRemove, dragDOM } = DragState.getState();\r\n                DragState.reset();\r\n                if (dragDOMIsRemove && dragDOM && dragDOM.parentNode) {\r\n                    dragDOM.parentNode.removeChild(dragDOM);\r\n                }\r\n\r\n                if (endDrag) {\r\n                    endDrag({\r\n                        ...dragResult,\r\n                        model,\r\n                        monitor,\r\n                        component: this\r\n                    });\r\n                }\r\n\r\n                model.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    type: EVENT_TYPE_SORT,\r\n                    model,\r\n                    monitor,\r\n                    component: this\r\n                });\r\n            },\r\n\r\n            collect(monitor) {\r\n                const dragResult = monitor.getItem();\r\n\r\n                return {\r\n                    // monitor\r\n                    isDragging:\r\n                        dragResult && model.isSameItem(dragResult.item, item)\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    _connectDragDOM = null;\r\n\r\n    _connectDropTarget = null;\r\n    _connectDragTarget = null;\r\n    _connectDragPreview = null;\r\n\r\n    componentDidUpdate() {\r\n        this.connectDragAndDrop();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDragAndDrop();\r\n    }\r\n\r\n    connectDragAndDrop() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        const dom = findDOMNode(this);\r\n\r\n        this._connectDropTarget(dom);\r\n        this._connectDragTarget(dom);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //fix: 当拖动节点在拖动状态被删除时导致react-dnd在drop后需要移动鼠标才及时触发endDrag问题\r\n        const dragDOM = this._connectDragDOM;\r\n        const dragState = DragState.getState();\r\n        if (dragState.isDragging && dragDOM && dragState.dragDOM === dragDOM) {\r\n            DragState.setState({\r\n                dragDOMIsRemove: true\r\n            });\r\n\r\n            setTimeout(() => {\r\n                if (isNodeInDocument(dragDOM)) return;\r\n\r\n                dragDOM.style.display = \"none\";\r\n                dragDOM.style.width = \"0px\";\r\n                dragDOM.style.height = \"0px\";\r\n                dragDOM.style.overflow = \"hidden\";\r\n\r\n                document.body.appendChild(dragDOM);\r\n            }, 0);\r\n        }\r\n\r\n        this._connectDropTarget(null);\r\n        this._connectDragTarget(null);\r\n        this._connectDragPreview(null);\r\n    }\r\n\r\n    render() {\r\n        const { children, render, item } = this.props;\r\n        const model = this.context;\r\n\r\n        const [collectedDropProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        const [\r\n            collectedDragProps,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        ] = useDrag(this.getDragOptions());\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n        this._connectDragTarget = React.useCallback(\r\n            dom => {\r\n                this._connectDragDOM = dom;\r\n                connectDragTarget(dom);\r\n            },\r\n            [connectDragTarget]\r\n        );\r\n        this._connectDragPreview = connectDragPreview;\r\n\r\n        const connectDragAndDrop = dom => {\r\n            this._connectDropTarget(dom);\r\n            this._connectDragTarget(dom);\r\n        };\r\n\r\n        const props = {\r\n            ...collectedDropProps,\r\n            ...collectedDragProps,\r\n            item,\r\n            isTmp: model.isTmpItem(item),\r\n            model,\r\n            connectDropTarget,\r\n            connectDragTarget,\r\n            connectDragAndDrop,\r\n            connectDragPreview\r\n        };\r\n\r\n        const { isStrictlyOver, isDragging, canDrop } = props;\r\n\r\n        props.hoverDirection =\r\n            isStrictlyOver && !isDragging && canDrop\r\n                ? this._lastHoverDirection\r\n                : DRAG_DIR_NONE;\r\n\r\n        return children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n    }\r\n}\r\n\r\nexport default withHooks(DropItem);\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport {\r\n    EVENT_TYPE_ADD,\r\n    EVENT_TYPE_SORT,\r\n    COMMIT_ACTION_AUTO,\r\n    COMMIT_ACTION_DROP\r\n} from \"../constants\";\r\nimport { isNodeInDocument } from \"../utils\";\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass WidgetItem extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        render: propTypes.func,\r\n        getInstance: propTypes.func.isRequired,\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    _connectDragDOM = null;\r\n\r\n    _connectDragTarget = null;\r\n    _connectDragPreview = null;\r\n\r\n    componentDidUpdate() {\r\n        this.connectDragTarget();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDragTarget();\r\n    }\r\n\r\n    connectDragTarget() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        this._connectDragTarget(findDOMNode(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //fix: 当拖动节点在拖动状态被删除时导致react-dnd在drop后需要移动鼠标才及时触发endDrag问题\r\n        const dragDOM = this._connectDragDOM;\r\n        const dragState = DragState.getState();\r\n        if (dragState.isDragging && dragDOM && dragState.dragDOM === dragDOM) {\r\n            DragState.setState({\r\n                dragDOMIsRemove: true\r\n            });\r\n\r\n            setTimeout(() => {\r\n                if (isNodeInDocument(dragDOM)) return;\r\n\r\n                dragDOM.style.display = \"none\";\r\n                dragDOM.style.width = \"0px\";\r\n                dragDOM.style.height = \"0px\";\r\n                dragDOM.style.overflow = \"hidden\";\r\n\r\n                document.body.appendChild(dragDOM);\r\n            }, 0);\r\n        }\r\n\r\n        this._connectDragTarget(null);\r\n        this._connectDragPreview(null);\r\n    }\r\n\r\n    getDragOptions() {\r\n        const { getInstance, canDrag, beginDrag, endDrag } = this.props;\r\n        const model = this.context;\r\n        const commitAction = model.props.commitAction;\r\n\r\n        return {\r\n            item: {\r\n                type: model.getScope()\r\n            },\r\n\r\n            canDrag: monitor => {\r\n                if (canDrag) {\r\n                    return canDrag({\r\n                        monitor,\r\n                        model,\r\n                        component: this\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            begin: monitor => {\r\n                const item = getInstance();\r\n                const dom = findDOMNode(this);\r\n\r\n                if (beginDrag) {\r\n                    beginDrag({\r\n                        item,\r\n                        dom,\r\n                        component: this,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                const dragDOM = this._connectDragDOM;\r\n                DragState.setState({\r\n                    item,\r\n                    isNew: true,\r\n                    dragDOMIsRemove: false,\r\n                    isDragging: true,\r\n                    dragDOM\r\n                });\r\n\r\n                if (commitAction === COMMIT_ACTION_AUTO) {\r\n                    model.addTmpItem(item);\r\n                }\r\n\r\n                model.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    type: EVENT_TYPE_ADD,\r\n                    model,\r\n                    monitor,\r\n                    component: this\r\n                });\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end: (dragResult, monitor) => {\r\n                const { dragDOMIsRemove, dragDOM } = DragState.getState();\r\n                DragState.reset();\r\n\r\n                if (dragDOMIsRemove && dragDOM && dragDOM.parentNode) {\r\n                    dragDOM.parentNode.removeChild(dragDOM);\r\n                }\r\n\r\n                if (endDrag) {\r\n                    endDrag({\r\n                        ...dragResult,\r\n                        model,\r\n                        monitor,\r\n                        component: this\r\n                    });\r\n                }\r\n\r\n                model.clearTmpItems();\r\n\r\n                model.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    type: EVENT_TYPE_ADD,\r\n                    model,\r\n                    monitor,\r\n                    component: this\r\n                });\r\n            },\r\n\r\n            collect(monitor) {\r\n                return {\r\n                    monitor,\r\n                    isDragging: monitor.isDragging()\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { children, render } = this.props;\r\n        const model = this.context;\r\n\r\n        const [collectProps, connectDragTarget, connectDragPreview] = useDrag(\r\n            this.getDragOptions()\r\n        );\r\n\r\n        this._connectDragTarget = React.useCallback(\r\n            dom => {\r\n                this._connectDragDOM = dom;\r\n                connectDragTarget(dom);\r\n            },\r\n            [connectDragTarget]\r\n        );\r\n        this._connectDragPreview = connectDragPreview;\r\n\r\n        const props = {\r\n            ...collectProps,\r\n            model,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        };\r\n\r\n        return children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n    }\r\n}\r\n\r\nexport default withHooks(WidgetItem);\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\n\r\nexport default ({ children }) => {\r\n    const props = useDragLayer(monitor => {\r\n        const dragResult = monitor.getItem();\r\n        return {\r\n            ...dragResult,\r\n            monitor,\r\n            type: monitor.getItemType(),\r\n            isDragging: monitor.isDragging(),\r\n            initialClientOffset: monitor.getInitialClientOffset(),\r\n            initialSourceClientOffset: monitor.getInitialSourceClientOffset(),\r\n            clientOffset: monitor.getClientOffset(),\r\n            differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset(),\r\n            sourceClientOffset: monitor.getSourceClientOffset()\r\n        };\r\n    });\r\n\r\n    const child = typeof children === \"function\" ? children(props) : children;\r\n\r\n    return child;\r\n};\r\n","import React from \"react\";\r\nimport ModelContext from \"../ModelContext\";\r\n\r\nexport function useModel() {\r\n    return React.useContext(ModelContext);\r\n}\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport ModelContext from \"./ModelContext\";\r\n\r\nclass DropEmptyContainer extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    _connectDropTarget = null;\r\n\r\n    connectDropTarget() {\r\n        const dom = findDOMNode(this);\r\n        this._connectDropTarget(dom);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._connectDropTarget(null);\r\n    }\r\n\r\n    getDropOptions() {\r\n        const model = this.context;\r\n\r\n        return {\r\n            accept: model.getScope()\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const [collectedProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withHooks(DropEmptyContainer);\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function DropContainerDemo({ pid = null, title, canDrop }) {\r\n    return (\r\n        <DropContainer pid={pid} canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\nexport default function DropContainerWithChildDemo({ title, canDrop }) {\r\n    return (\r\n        <DropContainer pid=\"parent\" canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n\r\n                        <DropContainer pid=\"child\" canDrop={() => false}>\r\n                            {({\r\n                                items,\r\n                                monitor,\r\n                                canDrop,\r\n                                connectDropTarget\r\n                            }) => {\r\n                                return (\r\n                                    <div\r\n                                        ref={connectDropTarget}\r\n                                        style={{\r\n                                            height: 300,\r\n                                            overflow: \"auto\",\r\n                                            border: canDrop\r\n                                                ? \"1px solid green\"\r\n                                                : \"1px solid #ccc\",\r\n                                            flex: 1\r\n                                        }}\r\n                                    >\r\n                                        <h3>child</h3>\r\n                                        <hr />\r\n                                        {items.map(item => {\r\n                                            return (\r\n                                                <DropItem\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                >\r\n                                                    {({\r\n                                                        connectDragAndDrop,\r\n                                                        isDragging,\r\n                                                        isHover,\r\n                                                        isOver,\r\n                                                        isTmp\r\n                                                    }) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                ref={\r\n                                                                    connectDragAndDrop\r\n                                                                }\r\n                                                                style={{\r\n                                                                    opacity: isDragging\r\n                                                                        ? 0.5\r\n                                                                        : 1,\r\n                                                                    padding: 10,\r\n                                                                    margin: 5,\r\n                                                                    background:\r\n                                                                        \"#f2f2f2\",\r\n                                                                    border:\r\n                                                                        \"1px solid #dadada\"\r\n                                                                }}\r\n                                                            >\r\n                                                                {item.title}(\r\n                                                                {item.id})\r\n                                                            </div>\r\n                                                        );\r\n                                                    }}\r\n                                                </DropItem>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            }}\r\n                        </DropContainer>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import TextField from \"./TextField\";\r\nimport TextareaField from \"./TextareaField\";\r\nimport SelectField from \"./SelectField\";\r\nimport CheckboxField from \"./CheckboxField\";\r\nimport RadioField from \"./RadioField\";\r\n\r\nexport default [\r\n    TextField,\r\n    TextareaField,\r\n    SelectField,\r\n    CheckboxField,\r\n    RadioField\r\n];\r\n","export default {\r\n    xtype: \"EX_TEXT_FIELD\",\r\n    title: \"文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_TEXTAREA_FIELD\",\r\n    title: \"多行文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_SELECT_FIELD\",\r\n    title: \"单选列表\"\r\n};\r\n","export default {\r\n    xtype: \"EX_CHECKBOX_FIELD\",\r\n    title: \"复选框\"\r\n};\r\n","export default {\r\n    xtype: \"EX_RADIO_FIELD\",\r\n    title: \"单选框\"\r\n};\r\n","import React from \"react\";\r\nimport { Provider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <Provider value={value} onChange={onChange}>\r\n            <DropContainer>\r\n                {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: 4,\r\n                            padding: 5,\r\n                            width: 270,\r\n                            margin: \"30px auto\",\r\n                            height: \"80%\",\r\n                            overflow: \"auto\"\r\n                        }}\r\n                    >\r\n                        {items.map(item => (\r\n                            <ListItem key={item.id} item={item} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </DropContainer>\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { Provider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item, index }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            transition:\r\n                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                            left: 5,\r\n                            right: 5,\r\n                            transform: `translate(0, ${(30 + 18) * index}px)`,\r\n                            zIndex: isDragging ? 2 : 1,\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction renderList({ items, monitor, canDrop, connectDropTarget }) {\r\n    const list = [...items];\r\n    list.sort((a, b) => a.id - b.id);\r\n\r\n    const getItemPosition = item => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            const current = items[i];\r\n            if (current.id === item.id) return i;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={connectDropTarget}\r\n            style={{\r\n                position: \"relative\",\r\n                border: \"1px solid #ccc\",\r\n                borderRadius: 4,\r\n                padding: 5,\r\n                width: 270,\r\n                margin: \"30px auto\",\r\n                height: \"80%\",\r\n                overflow: \"auto\"\r\n            }}\r\n        >\r\n            {list.map(item => (\r\n                <ListItem\r\n                    key={item.id}\r\n                    index={getItemPosition(item)}\r\n                    item={item}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <Provider value={value} onChange={onChange}>\r\n            <DropContainer>{renderList}</DropContainer>\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Provider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n} from \"@/src\";\r\n\r\n/**\r\n * 自定义拖拽层\r\n * 禁用系统自带的拖拽层，使用用户自定义拖拽层\r\n */\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 5; i++) {\r\n    dataset.push({\r\n        pid: \"a\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfor (let i = 5; i < 20; i++) {\r\n    dataset.push({\r\n        pid: \"b\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, connectDragPreview, isDragging }) => {\r\n                //用空白图片覆盖默认推拽效果\r\n                connectDragPreview(getEmptyImage());\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.4 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 1;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <Provider value={value} onChange={onChange}>\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    margin: \"30px auto\",\r\n                    height: \"80%\",\r\n                    width: 600\r\n                }}\r\n            >\r\n                <DropContainer pid=\"a\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"b\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <DragLayer>\r\n                    {({ isDragging, dom, ...props }) => {\r\n                        if (!isDragging || !dom) return null;\r\n                        return <ItemDragLayer dom={dom} {...props} />;\r\n                    }}\r\n                </DragLayer>\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    Provider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n} from \"@/src\";\r\n\r\n/**\r\n * 自定义拖拽层\r\n * 禁用系统自带的拖拽层，使用用户自定义拖拽层\r\n */\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        pid: \"nostart\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nconst ListItem = React.memo(function ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({\r\n                connectDragAndDrop,\r\n                connectDragPreview,\r\n                isDragging,\r\n                hoverDirection\r\n            }) => {\r\n                //用空白图片覆盖默认推拽效果\r\n                connectDragPreview(getEmptyImage());\r\n\r\n                const borderColor = {};\r\n\r\n                if (hoverDirection === \"up\") {\r\n                    borderColor.borderTop = \"1px solid red\";\r\n                    borderColor.borderBottom = \"1px solid  #dadada\";\r\n                }\r\n\r\n                if (hoverDirection === \"down\") {\r\n                    borderColor.borderTop = \"1px solid #dadada\";\r\n                    borderColor.borderBottom = \"1px solid red\";\r\n                }\r\n                if (hoverDirection === \"none\") {\r\n                    borderColor.borderTop = \"1px solid #dadada\";\r\n                    borderColor.borderBottom = \"1px solid #dadada\";\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.4 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\",\r\n                            ...borderColor\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n});\r\n\r\nfunction ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <Provider\r\n            value={value}\r\n            onChange={onChange}\r\n            commitAction=\"drop\"\r\n        >\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    margin: \"30px auto\",\r\n                    height: \"80%\",\r\n                    width: 800\r\n                }}\r\n            >\r\n                <DropContainer pid=\"nostart\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>未开始</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"pending\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>处理中</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\",\r\n                                    backgroundColor: canDrop ? \"#eef9f3\" : \"\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"done\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>已完成</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\",\r\n                                    backgroundColor: canDrop ? \"#eef9f3\" : \"\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <DragLayer>\r\n                    {({ isDragging, dom, ...props }) => {\r\n                        if (!isDragging || !dom) return null;\r\n                        return <ItemDragLayer dom={dom} {...props} />;\r\n                    }}\r\n                </DragLayer>\r\n            </div>\r\n        </Provider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport {\r\n    Provider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    WidgetItem,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n} from \"@/src\";\r\nimport fields from \"./fields\";\r\nimport ItemDragLayer from \"./ItemDragLayer\";\r\nimport \"./index.scss\";\r\n\r\nlet fid = 1;\r\n\r\nfunction FieldItem({ field }) {\r\n    return (\r\n        <WidgetItem\r\n            getInstance={() => {\r\n                return {\r\n                    ...field,\r\n                    id: fid++\r\n                };\r\n            }}\r\n        >\r\n            {({ connectDragTarget, connectDragPreview }) => {\r\n                connectDragPreview(getEmptyImage());\r\n                return (\r\n                    <div className=\"field-item\" ref={connectDragTarget}>\r\n                        {field.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </WidgetItem>\r\n    );\r\n}\r\n\r\nfunction DropFieldContainer({ pid }) {\r\n    const _canDrop = React.useCallback(\r\n        ({ item, model }) => {\r\n            if (pid === \"value\") return true;\r\n\r\n            const items = [\r\n                ...model.getItems(\"column\"),\r\n                ...model.getItems(\"row\")\r\n            ];\r\n            const names = items.map(item => item.name);\r\n            const ids = items.map(item => item.id);\r\n\r\n            //已存在的数据可排序\r\n            if (ids.indexOf(item.id) !== -1) return true;\r\n\r\n            //检测新增数据\r\n            return names.indexOf(item.name) !== -1 ? false : true;\r\n        },\r\n        [pid]\r\n    );\r\n\r\n    return (\r\n        <DropContainer pid={pid} canDrop={_canDrop} axis=\"horizontal\">\r\n            {({ items, connectDropTarget, canDrop, isStrictlyOver }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        className={cx({\r\n                            \"field-drop-list\": true,\r\n                            \"can-drop\": canDrop,\r\n                            \"is-over\": canDrop && isStrictlyOver\r\n                        })}\r\n                    >\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem\r\n                                    canDrop={_canDrop}\r\n                                    item={item}\r\n                                    key={item.id}\r\n                                >\r\n                                    {({\r\n                                        isDragging,\r\n                                        connectDropTarget,\r\n                                        connectDragTarget,\r\n                                        connectDragPreview,\r\n                                        model,\r\n                                        hoverDirection\r\n                                    }) => {\r\n                                        connectDragPreview(getEmptyImage());\r\n                                        return (\r\n                                            <div\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1\r\n                                                }}\r\n                                                className={\r\n                                                    \"field-drop-item hover-dir-\" +\r\n                                                    hoverDirection\r\n                                                }\r\n                                                ref={connectDropTarget}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"field-drop-item-inner\"\r\n                                                    ref={connectDragTarget}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type === \"number\"\r\n                                                        ? \"(求和)\"\r\n                                                        : \"\"}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type !== \"number\"\r\n                                                        ? \"(计数)\"\r\n                                                        : \"\"}{\" \"}\r\n                                                    <span\r\n                                                        className=\"item-close\"\r\n                                                        onClick={() => {\r\n                                                            model.removeItem(\r\n                                                                item.id\r\n                                                            );\r\n                                                        }}\r\n                                                    >\r\n                                                        x\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState([]);\r\n\r\n    return (\r\n        <Provider\r\n            value={value}\r\n            commitAction=\"drop\"\r\n            onChange={onChange}\r\n        >\r\n            <DropEmptyContainer>\r\n                <div\r\n                    className=\"pivot-container\"\r\n                    style={{\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        margin: \"30px auto\",\r\n                        height: \"80%\",\r\n                        width: 888\r\n                    }}\r\n                >\r\n                    <div className=\"pivot-field-list\">\r\n                        <div className=\"list-header\">字段列表</div>\r\n                        <div className=\"list-wrapper\">\r\n                            {fields.map(field => (\r\n                                <FieldItem field={field} key={field.name} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pivot-field-result\">\r\n                        <div className=\"result-drop\">\r\n                            <div className=\"drop-row-wrapper\">\r\n                                <div className=\"drop-field-label\">列</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"column\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">行</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"row\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-value-wrapper\">\r\n                                <div className=\"drop-field-label\">值</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"value\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result-data\">\r\n                            <pre>{JSON.stringify(value, null, 2)}</pre>\r\n                        </div>\r\n                    </div>\r\n                    <DragLayer>\r\n                        {({ isDragging, dom, ...props }) => {\r\n                            if (!isDragging || !dom) return null;\r\n                            return <ItemDragLayer dom={dom} {...props} />;\r\n                        }}\r\n                    </DragLayer>\r\n                </div>\r\n            </DropEmptyContainer>\r\n        </Provider>\r\n    );\r\n};\r\n","export default [\r\n    {\r\n        title: \"日期\",\r\n        type: \"date\",\r\n        name: \"crated_date\"\r\n    },\r\n    {\r\n        title: \"订单来源\",\r\n        type: \"string\",\r\n        name: \"order_from\"\r\n    },\r\n    {\r\n        title: \"用户注册来源\",\r\n        type: \"string\",\r\n        name: \"register_from\"\r\n    },\r\n    {\r\n        title: \"订单地区\",\r\n        type: \"string\",\r\n        name: \"order_area\"\r\n    },\r\n    {\r\n        title: \"支付订单量\",\r\n        type: \"number\",\r\n        name: \"order_pay_total\"\r\n    },\r\n    {\r\n        title: \"被投诉订单量\",\r\n        type: \"number\",\r\n        name: \"order_complaint_total\"\r\n    },\r\n    {\r\n        title: \"取消订单量\",\r\n        type: \"number\",\r\n        name: \"order_cancel_total\"\r\n    }\r\n];\r\n","import React from \"react\";\r\n\r\nexport default function ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n        cloneNode.style.padding = \"5px 10px\";\r\n        cloneNode.style.lineHeight = \"20px\";\r\n        cloneNode.style.fontSize = \"12px\";\r\n        cloneNode.style.cursor = \"default\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport {\r\n    Provider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    WidgetItem,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n} from \"@/src\";\r\nimport fields from \"./fields\";\r\nimport ItemDragLayer from \"./ItemDragLayer\";\r\nimport \"./index.scss\";\r\n\r\nlet fid = 1;\r\n\r\nfunction FieldItem({ field }) {\r\n    return (\r\n        <WidgetItem\r\n            getInstance={() => {\r\n                return {\r\n                    ...field,\r\n                    id: fid++\r\n                };\r\n            }}\r\n        >\r\n            {({ connectDragTarget, connectDragPreview }) => {\r\n                connectDragPreview(getEmptyImage());\r\n                return (\r\n                    <div className=\"field-item\" ref={connectDragTarget}>\r\n                        {field.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </WidgetItem>\r\n    );\r\n}\r\n\r\nfunction DropFieldContainer({ pid }) {\r\n    const _canDrop = React.useCallback(\r\n        ({ item, model }) => {\r\n            if (item.id === \"∑\" && (pid === \"value\" || pid === \"filter\"))\r\n                return false;\r\n\r\n            if (pid === \"value\") return true;\r\n\r\n            const items =\r\n                pid === \"filter\"\r\n                    ? model.getItems(\"filter\")\r\n                    : [...model.getItems(\"column\"), ...model.getItems(\"row\")];\r\n            const names = items.map(item => item.name);\r\n            const ids = items.map(item => item.id);\r\n\r\n            //已存在的数据可排序\r\n            if (ids.indexOf(item.id) !== -1) return true;\r\n\r\n            //检测新增数据\r\n            return names.indexOf(item.name) !== -1 ? false : true;\r\n        },\r\n        [pid]\r\n    );\r\n\r\n    return (\r\n        <DropContainer pid={pid} canDrop={_canDrop}>\r\n            {({ items, connectDropTarget, canDrop, isStrictlyOver, model }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        className={cx({\r\n                            \"field-drop-list\": true,\r\n                            \"can-drop\": canDrop,\r\n                            \"is-over\": canDrop && isStrictlyOver\r\n                        })}\r\n                    >\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem\r\n                                    canDrop={_canDrop}\r\n                                    item={item}\r\n                                    key={item.id}\r\n                                >\r\n                                    {({\r\n                                        isDragging,\r\n                                        connectDropTarget,\r\n                                        connectDragTarget,\r\n                                        connectDragPreview,\r\n                                        model,\r\n                                        hoverDirection\r\n                                    }) => {\r\n                                        connectDragPreview(getEmptyImage());\r\n                                        return (\r\n                                            <div\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1\r\n                                                }}\r\n                                                className={\r\n                                                    \"field-drop-item hover-dir-\" +\r\n                                                    hoverDirection\r\n                                                }\r\n                                                ref={connectDropTarget}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"field-drop-item-inner\"\r\n                                                    ref={connectDragTarget}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type === \"number\"\r\n                                                        ? \"(求和)\"\r\n                                                        : \"\"}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type !== \"number\"\r\n                                                        ? \"(计数)\"\r\n                                                        : \"\"}{\" \"}\r\n                                                    {item.id === \"∑\" ? null : (\r\n                                                        <span\r\n                                                            className=\"item-close\"\r\n                                                            onClick={() => {\r\n                                                                model.removeItem(\r\n                                                                    item.id\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            x\r\n                                                        </span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n\r\nconst E_VALUE_ITEM = {\r\n    id: \"∑\",\r\n    title: \"∑数值\",\r\n    name: \"∑Values\",\r\n    type: \"number\",\r\n    pid: \"column\"\r\n};\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState([]);\r\n\r\n    const handleChange = React.useCallback(\r\n        items => {\r\n            const valueItems = items.filter(item => item.pid === \"value\");\r\n            const shouldShowEValue = valueItems.length > 1;\r\n            const EVI = items.filter(item => item.id === \"∑\");\r\n            if (shouldShowEValue) {\r\n                if (!EVI.length) {\r\n                    items.push({ ...E_VALUE_ITEM });\r\n                }\r\n            } else {\r\n                items = items.filter(item => item.id !== \"∑\");\r\n            }\r\n\r\n            onChange(items);\r\n        },\r\n        [value]\r\n    );\r\n\r\n    return (\r\n        <Provider\r\n            value={value}\r\n            commitAction=\"drop\"\r\n            onChange={handleChange}\r\n        >\r\n            <DropEmptyContainer>\r\n                <div\r\n                    className=\"pivot-container-02\"\r\n                    style={{\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        margin: \"30px auto\",\r\n                        height: \"80%\",\r\n                        width: 888\r\n                    }}\r\n                >\r\n                    <div className=\"pivot-field-list\">\r\n                        <div className=\"list-header\">字段列表</div>\r\n                        <div className=\"list-wrapper\">\r\n                            {fields.map(field => (\r\n                                <FieldItem field={field} key={field.name} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pivot-field-result\">\r\n                        <div className=\"result-drop\">\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">筛选</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"filter\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-row-wrapper\">\r\n                                <div className=\"drop-field-label\">列</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"row\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">行</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"column\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-value-wrapper\">\r\n                                <div className=\"drop-field-label\">值</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"value\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result-data\">\r\n                            <pre>{JSON.stringify(value, null, 2)}</pre>\r\n                        </div>\r\n                    </div>\r\n                    <DragLayer>\r\n                        {({ isDragging, dom, ...props }) => {\r\n                            if (!isDragging || !dom) return null;\r\n                            return <ItemDragLayer dom={dom} {...props} />;\r\n                        }}\r\n                    </DragLayer>\r\n                </div>\r\n            </DropEmptyContainer>\r\n        </Provider>\r\n    );\r\n};\r\n","export default [\r\n    {\r\n        title: \"日期\",\r\n        type: \"date\",\r\n        name: \"crated_date\"\r\n    },\r\n    {\r\n        title: \"订单来源\",\r\n        type: \"string\",\r\n        name: \"order_from\"\r\n    },\r\n    {\r\n        title: \"用户注册来源\",\r\n        type: \"string\",\r\n        name: \"register_from\"\r\n    },\r\n    {\r\n        title: \"订单地区\",\r\n        type: \"string\",\r\n        name: \"order_area\"\r\n    },\r\n    {\r\n        title: \"支付订单量\",\r\n        type: \"number\",\r\n        name: \"order_pay_total\"\r\n    },\r\n    {\r\n        title: \"被投诉订单量\",\r\n        type: \"number\",\r\n        name: \"order_complaint_total\"\r\n    },\r\n    {\r\n        title: \"取消订单量\",\r\n        type: \"number\",\r\n        name: \"order_cancel_total\"\r\n    }\r\n];\r\n","import React from \"react\";\r\n\r\nexport default function ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n        cloneNode.style.padding = \"5px 10px\";\r\n        cloneNode.style.lineHeight = \"20px\";\r\n        cloneNode.style.fontSize = \"12px\";\r\n        cloneNode.style.cursor = \"default\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","export const EVENT_TYPE_ADD = \"add\";\r\nexport const EVENT_TYPE_SORT = \"sort\";\r\n\r\nexport const DRAG_DIR_UP = \"up\";\r\nexport const DRAG_DIR_DOWN = \"down\";\r\nexport const DRAG_DIR_LEFT = \"left\";\r\nexport const DRAG_DIR_RIGHT = \"right\";\r\nexport const DRAG_DIR_NONE = \"none\";\r\n\r\nexport const COMMIT_ACTION_AUTO = \"auto\";\r\nexport const COMMIT_ACTION_DROP = \"drop\";\r\n\r\nexport const AXIS_VERTICAL = \"vertical\";\r\nexport const AXIS_HORIZONTAL = \"horizontal\";\r\nexport const AXIS_BOTH = \"both\";\r\n","let state = {\r\n    //part1\r\n    //drag item\r\n    item: null,\r\n    isNew: false,\r\n    canDrop: true,\r\n    //hover container pid\r\n    hoverPid: null,\r\n    //hover item\r\n    hoverItem: null,\r\n    hoverDirection: \"none\",\r\n    //part2\r\n    dragDOMIsRemove: false,\r\n    isDragging: false,\r\n    currentDragDOM: null\r\n};\r\n\r\nfunction setState(newState) {\r\n    state = {\r\n        ...state,\r\n        ...newState\r\n    };\r\n}\r\n\r\nfunction reset() {\r\n    setState({\r\n        item: null,\r\n        isNew: false,\r\n        canDrop: true,\r\n        hoverPid: null,\r\n        hoverItem: null,\r\n        hoverDirection: \"none\",\r\n        dragDOMIsRemove: false,\r\n        isDragging: false,\r\n        currentDragDOM: null\r\n    });\r\n}\r\n\r\nfunction getState() {\r\n    return state;\r\n}\r\n\r\nexport default {\r\n    setState,\r\n    getState,\r\n    reset\r\n};\r\n"],"sourceRoot":""}