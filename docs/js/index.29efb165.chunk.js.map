{"version":3,"sources":["webpack:///./src/index.js","webpack:///./src/utils/index.js","webpack:///./demo/index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/basic/index.js","webpack:///./demo/src/basic/AnimateContainer.js","webpack:///./src/WebDesignDndProvider.js","webpack:///./src/Model/index.js","webpack:///./src/ModelContext.js","webpack:///./src/DropContainer/index.js","webpack:///./src/DropItem/index.js","webpack:///./src/WidgetItem/index.js","webpack:///./src/DragLayer/index.js","webpack:///./src/hooks/index.js","webpack:///./src/DropEmptyContainer.js","webpack:///./demo/src/basic/DropContainerDemo.js","webpack:///./demo/src/basic/DropContainerWithChildDemo.js","webpack:///./demo/src/basic/widgets/index.js","webpack:///./demo/src/basic/widgets/TextField/index.js","webpack:///./demo/src/basic/widgets/TextareaField/index.js","webpack:///./demo/src/basic/widgets/SelectField/index.js","webpack:///./demo/src/basic/widgets/CheckboxField/index.js","webpack:///./demo/src/basic/widgets/RadioField/index.js","webpack:///./demo/src/sort-list/index.js","webpack:///./demo/src/sort-list-animation/index.js","webpack:///./demo/src/drag-layer/index.js","webpack:///./demo/src/todo-list/index.js","webpack:///./demo/src/pivot-table-01/index.js","webpack:///./demo/src/pivot-table-01/fields.js","webpack:///./demo/src/pivot-table-01/ItemDragLayer.js","webpack:///./demo/src/pivot-table-02/index.js","webpack:///./demo/src/pivot-table-02/fields.js","webpack:///./demo/src/pivot-table-02/ItemDragLayer.js","webpack:///./src/Model/DragState.js","webpack:///./src/constants.js"],"names":["_reactDndHtml5Backend","__webpack_require__","_WebDesignDndProvider","_interopRequireDefault","_DropContainer","_DropItem","_WidgetItem","_DragLayer","_hooks","_DropEmptyContainer","WebDesignContext","ModelContext","getRectDirection","x","y","width","height","px","py","y_ac","y_bd","middle_x","middle_y","ret","apply","arguments","dir","node","document","body","contains","_react","_reactDom","_src","ReactDOM","render","default","createElement","getElementById","_reactRouterDom","_basic","_sortList","_sortListAnimation","_dragLayer","_todoList","_pivotTable","_pivotTable2","HashRouter","className","NavLink","to","Switch","Route","path","exact","Redirect","component","Basic","SortList","TodoList","SortListAnimation","DragLayer","PivotTable1","PivotTable2","_React$useState","React","useState","items","_React$useState2","_slicedToArray2","metadata","onMetadataChange","WebDesignDndProvider","value","onChange","onDragStart","ev","console","log","onDragEnd","onDrop","style","display","flex","widgets","map","widget","WidgetItem","key","xtype","getInstance","_objectSpread2","id","Math","random","toString","slice","pid","index","idx","_ref2","connectDragTarget","ref","lineHeight","padding","title","_DropContainerDemo","_AnimateContainer","_DropContainerWithChildDemo","canDrop","item","DragLayerDemo","_widgets","_ref","isDragging","background","position","top","right","DropContainer","monitor","connectDropTarget","list","_toConsumableArray2","sort","a","b","border","pos","i","length","getPositionIndex","DropItem","connectDragAndDrop","isOver","isHover","isTmp","transition","left","transform","concat","zIndex","opacity","_reactDnd","_Model","model","_this","this","_this$props","props","backend","_objectWithoutProperties2","DndProvider","_extends2","saveModel","Component","HTML5Backend","_propTypes","_find","_last","_findIndex","_ModelContext","_DragState","_constants","randomStr","undefined","normalizeItem","idField","pidField","WebDesignModel","createContext","isRootContainer","axis","AXIS_VERTICAL","scope","defaultValue","DragState","getState","setState","state","eventName","handler","getAllItems","filter","_this$props2","pids","getItem","pNode","currentFieldId","push","getItemIndex","s1","s2","__tmp__","addItem","_this2","shouldRemove","getPids","indexOf","bItem","isSameItem","_this$props3","_idx","prevItem","oIdx","splice","_this$props4","nextItem","hasTmp","newItems","_this$props5","pidIndex","childs","getChildren","firstItem","lastItem","insertAfter","insertBefore","_this3","dragState","dragItem","hoverPid","hoverItem","hoverDirection","isNew","reset","moveItem","DRAG_DIR_UP","DRAG_DIR_LEFT","_addItem","getItems","updateItemPid","_create","children","Provider","getModel","forEach","propTypes","array","oneOf","AXIS_BOTH","AXIS_HORIZONTAL","commitAction","COMMIT_ACTION_AUTO","COMMIT_ACTION_DROP","func","_withComponentHooks","_invariant","dom","findDOMNode","_connectDropTarget","_this$props$pid","hover","drop","collect","targetDOM","context","DropContainerContext","useContext","accept","getScope","dragResult","fireEvent","target","shallow","DRAG_DIR_NONE","didDrop","isTmpItem","action","ACTION_ADD","ACTION_SORT","commitItem","commitDragStateItem","ext","isStrictlyOver","_this$props2$pid","_useDrop","useDrop","getDropOptions","_useDrop2","collectedProps","child","oneOfType","any","_utils","targetOffset","getBoundingClientRect","dragOffset","getClientOffset","middleX","middleY","bottom","result","DRAG_DIR_DOWN","DRAG_DIR_RIGHT","getHoverDirection","pAxis","currentDirection","lastHoverDirection","_lastHoverDirection","forceUpdate","canDrag","beginDrag","endDrag","type","begin","dragDOM","_connectDragDOM","dragDOMIsRemove","end","_DragState$getState","parentNode","removeChild","_connectDragTarget","setTimeout","isNodeInDocument","overflow","appendChild","_connectDragPreview","_this4","collectedDropProps","_useDrag","useDrag","getDragOptions","_useDrag2","collectedDragProps","connectDragPreview","useCallback","object","isRequired","addTmpItem","clearTmpItems","collectProps","useDragLayer","getItemType","initialClientOffset","getInitialClientOffset","initialSourceClientOffset","getInitialSourceClientOffset","clientOffset","differenceFromInitialOffset","getDifferenceFromInitialOffset","sourceClientOffset","getSourceClientOffset","DropEmptyContainer","_ref$pid","_ref3","margin","_ref4","_ref5","_TextField","_TextareaField","_SelectField","_CheckboxField","_RadioField","TextField","TextareaField","SelectField","CheckboxField","RadioField","dataset","ListItem","borderRadius","renderList","getItemPosition","getEmptyImage","ItemDragLayer","initData","useEffect","cloneNode","rect","pointerEvents","boxSizing","_React$useState3","_React$useState4","_ref6","memo","borderColor","borderTop","borderBottom","flexDirection","backgroundColor","_ref7","_classnames","_fields","_ItemDragLayer","fid","FieldItem","field","DropFieldContainer","_canDrop","names","name","field-drop-list","can-drop","is-over","onClick","removeItem","fields","_stringify","fontSize","cursor","E_VALUE_ITEM","handleChange","shouldShowEValue","EVI","currentDragDOM","newState"],"mappings":"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","file":"js/index.29efb165.chunk.js","sourcesContent":["import { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport WebDesignDndProvider from \"./WebDesignDndProvider\";\r\nimport DropContainer from \"./DropContainer\";\r\nimport DropItem from \"./DropItem\";\r\nimport WidgetItem from \"./WidgetItem\";\r\nimport DragLayer from \"./DragLayer\";\r\nimport { useModel } from \"./hooks\";\r\nimport DropEmptyContainer from \"./DropEmptyContainer\";\r\nimport ModelContext from \"./ModelContext\";\r\n\r\nconst WebDesignContext = ModelContext;\r\n\r\nexport { useModel };\r\n\r\nexport {\r\n    WebDesignContext,\r\n    WebDesignDndProvider,\r\n    WidgetItem,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n};\r\n","/**\r\n * 判断指定坐标在指定矩形上的位置\r\n *\r\n * @param {number} x 矩形x坐标\r\n * @param {number} y 矩形y坐标\r\n * @param {number} width 矩形宽度\r\n * @param {number} height 矩形高度\r\n * @param {number} px 待检测坐标x(一般位鼠标x坐标)\r\n * @param {number} py 待检测坐标y(一般位鼠标y坐标)\r\n * @returns {number} 1:up 2:down 3:left 4:right -1:center(对角线上)\r\n */\r\nexport function getRectDirection(x, y, width, height, px, py) {\r\n    const y_ac =\r\n        ((y + height) * px - y * px + y * (x + width) - (y + height) * x) /\r\n        (x + width - x);\r\n    const y_bd =\r\n        (y * px - (y + height) * px + (y + height) * (x + width) - y * x) /\r\n        (x + width - x);\r\n\r\n    if (py < y_ac && py < y_bd) {\r\n        return 1;\r\n    } else if (py > y_ac && py > y_bd) {\r\n        return 2;\r\n    } else if (py > y_ac && py < y_bd) {\r\n        return 3;\r\n    } else if (py < y_ac && py > y_bd) {\r\n        return 4;\r\n    } else {\r\n        //处在对角线上\r\n        const middle_x = x + width / 2;\r\n        const middle_y = y + height / 2;\r\n\r\n        if (px > middle_x && py < middle_y) {\r\n            //右上对角线\r\n            return 1;\r\n        } else if (px > middle_x && py > middle_y) {\r\n            //右下对角线\r\n            return 2;\r\n        } else if (px < middle_x && py < middle_y) {\r\n            //左上对角线\r\n            return 1;\r\n        } else if (px < middle_x && py > middle_y) {\r\n            //左下对角线\r\n            return 2;\r\n        } else {\r\n            //中心点\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isBeforeRect(...a) {\r\n    const ret = getRectDirection(...a);\r\n\r\n    return ret === 1 || ret === 3;\r\n}\r\n\r\nexport function getHoverDirection(...a) {\r\n    const ret = getRectDirection(...a);\r\n\r\n    let dir = \"down\";\r\n\r\n    if (ret === 1) {\r\n        dir = \"up\";\r\n    } else if (ret === 2) {\r\n        dir = \"down\";\r\n    } else if (ret === 3) {\r\n        dir = \"left\";\r\n    } else if (ret === 4) {\r\n        dir = \"right\";\r\n    }\r\n\r\n    return dir;\r\n}\r\n\r\nexport function isNodeInDocument(node) {\r\n    return document.body.contains(node);\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./src\";\r\n\r\n// import AnimateContainer from \"./AnimateContainer\";\r\n\r\n// import DropContainerDemo from \"./DropContainerDemo\";\r\n// import DropContainerWithChildDemo from \"./DropContainerWithChildDemo\";\r\n\r\n// import { WebDesignDndProvider, WidgetItem, DragLayer } from \"../src\";\r\n\r\n// import widgets from \"./widgets\";\r\n\r\n// function randomStr() {\r\n//     return Math.random()\r\n//         .toString(16)\r\n//         .slice(2, 8);\r\n// }\r\n\r\n// let idx = 1;\r\n\r\n// function DragLayerDemo() {\r\n//     return (\r\n//         <DragLayer>\r\n//             {({ isDragging }) =>\r\n//                 !isDragging ? null : (\r\n//                     <div\r\n//                         style={{\r\n//                             padding: 5,\r\n//                             background: \"rgba(0,0,0,.2)\",\r\n//                             position: \"fixed\",\r\n//                             top: 0,\r\n//                             right: 0\r\n//                         }}\r\n//                     >\r\n//                         dragLayer: isDragging...\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         </DragLayer>\r\n//     );\r\n// }\r\n\r\n// function App() {\r\n//     const [metadata, onMetadataChange] = React.useState({\r\n//         items: []\r\n//     });\r\n\r\n//     function onChange(items) {\r\n//         onMetadataChange({\r\n//             items\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <WebDesignDndProvider\r\n//                 // 受控\r\n//                 value={metadata.items}\r\n//                 onChange={onChange}\r\n//                 onDragStart={ev => {\r\n//                     console.log(\"onDragStart\", ev);\r\n//                 }}\r\n//                 onDragEnd={ev => {\r\n//                     console.log(\"onDragEnd\", ev);\r\n//                 }}\r\n//                 onDrop={ev => {\r\n//                     console.log(\"onDrop\", ev);\r\n//                 }}\r\n//             >\r\n//                 <div\r\n//                     style={{\r\n//                         display: \"flex\",\r\n//                         position: \"fixed\",\r\n//                         top: 0,\r\n//                         left: 0,\r\n//                         right: 0,\r\n//                         bottom: 0\r\n//                     }}\r\n//                 >\r\n//                     <div\r\n//                         style={{\r\n//                             width: 240,\r\n//                             flex: \"none\"\r\n//                         }}\r\n//                     >\r\n//                         {widgets.map(widget => {\r\n//                             return (\r\n//                                 <WidgetItem\r\n//                                     key={widget.xtype}\r\n//                                     // disabled={widget.xtype === \"EX_URL_FIELD\"}\r\n//                                     getInstance={() => ({\r\n//                                         ...widget,\r\n//                                         id: randomStr(),\r\n//                                         pid: null,\r\n//                                         index: idx++\r\n//                                     })}\r\n//                                 >\r\n//                                     {({ connectDragTarget }) => (\r\n//                                         <div\r\n//                                             ref={connectDragTarget}\r\n//                                             style={{\r\n//                                                 height: 32,\r\n//                                                 lineHeight: `32px`,\r\n//                                                 padding: \"0 20px\"\r\n//                                             }}\r\n//                                         >\r\n//                                             {widget.title}\r\n//                                         </div>\r\n//                                     )}\r\n//                                 </WidgetItem>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                     <DropContainerDemo title=\"A\" />\r\n//                     <DropContainerDemo pid=\"b\" title=\"B\" />\r\n//                     <AnimateContainer />\r\n\r\n//                     <DropContainerWithChildDemo title=\"Parent\" />\r\n//                     <DropContainerDemo\r\n//                         pid=\"d\"\r\n//                         title=\"D\"\r\n//                         canDrop={item => {\r\n//                             return item.xtype === \"EX_TEXTAREA_FIELD\";\r\n//                         }}\r\n//                     />\r\n//                     <DragLayerDemo />\r\n//                 </div>\r\n//             </WebDesignDndProvider>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\n\r\nimport { HashRouter, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Basic from \"./basic\";\r\nimport SortList from \"./sort-list\";\r\nimport SortListAnimation from \"./sort-list-animation\";\r\nimport DragLayer from \"./drag-layer\";\r\nimport TodoList from \"./todo-list\";\r\nimport PivotTable1 from \"./pivot-table-01\";\r\nimport PivotTable2 from \"./pivot-table-02\";\r\n\r\nimport \"./style/index.scss\";\r\n\r\nexport default () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app-demo\">\r\n                <div className=\"left-nav\">\r\n                    <NavLink to=\"/basic\">基本功能</NavLink>\r\n                    <NavLink to=\"/sort-list\">列表排序</NavLink>\r\n                    <NavLink to=\"/sort-list-animation\">\r\n                        列表排序(动画效果)\r\n                    </NavLink>\r\n                    <NavLink to=\"/drag-layer\">自定义推拽层</NavLink>\r\n                    <NavLink to=\"/todo-list\">TodoList</NavLink>\r\n                    <NavLink to=\"/pivot-table-01\">多维分析</NavLink>\r\n                    <NavLink to=\"/pivot-table-02\">数据透视</NavLink>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/\"\r\n                            exact\r\n                            render={() => <Redirect to=\"/basic\" />}\r\n                        />\r\n                        <Route path=\"/basic\" component={Basic} />\r\n                        <Route path=\"/sort-list\" component={SortList} />\r\n                        <Route path=\"/todo-list\" component={TodoList} />\r\n                        <Route\r\n                            path=\"/sort-list-animation\"\r\n                            component={SortListAnimation}\r\n                        />\r\n                        <Route path=\"/drag-layer\" component={DragLayer} />\r\n                        <Route path=\"/pivot-table-01\" component={PivotTable1} />\r\n                        <Route path=\"/pivot-table-02\" component={PivotTable2} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport AnimateContainer from \"./AnimateContainer\";\r\n\r\nimport DropContainerDemo from \"./DropContainerDemo\";\r\nimport DropContainerWithChildDemo from \"./DropContainerWithChildDemo\";\r\n\r\nimport { WebDesignDndProvider, WidgetItem, DragLayer } from \"@/src\";\r\n\r\nimport widgets from \"./widgets\";\r\n\r\nfunction randomStr() {\r\n    return Math.random()\r\n        .toString(16)\r\n        .slice(2, 8);\r\n}\r\n\r\nlet idx = 1;\r\n\r\nfunction DragLayerDemo() {\r\n    return (\r\n        <DragLayer>\r\n            {({ isDragging }) =>\r\n                !isDragging ? null : (\r\n                    <div\r\n                        style={{\r\n                            padding: 5,\r\n                            background: \"rgba(0,0,0,.2)\",\r\n                            position: \"fixed\",\r\n                            top: 0,\r\n                            right: 0\r\n                        }}\r\n                    >\r\n                        dragLayer: isDragging...\r\n                    </div>\r\n                )\r\n            }\r\n        </DragLayer>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const [metadata, onMetadataChange] = React.useState({\r\n        items: []\r\n    });\r\n\r\n    function onChange(items) {\r\n        onMetadataChange({\r\n            items\r\n        });\r\n    }\r\n\r\n    return (\r\n        <WebDesignDndProvider\r\n            // 受控\r\n            value={metadata.items}\r\n            onChange={onChange}\r\n            onDragStart={ev => {\r\n                console.log(\"onDragStart\", ev);\r\n            }}\r\n            onDragEnd={ev => {\r\n                console.log(\"onDragEnd\", ev);\r\n            }}\r\n            onDrop={ev => {\r\n                console.log(\"onDrop\", ev);\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    height: \"100%\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: 240,\r\n                        flex: \"none\"\r\n                    }}\r\n                >\r\n                    {widgets.map(widget => {\r\n                        return (\r\n                            <WidgetItem\r\n                                key={widget.xtype}\r\n                                // disabled={widget.xtype === \"EX_URL_FIELD\"}\r\n                                getInstance={() => ({\r\n                                    ...widget,\r\n                                    id: randomStr(),\r\n                                    pid: null,\r\n                                    index: idx++\r\n                                })}\r\n                            >\r\n                                {({ connectDragTarget }) => (\r\n                                    <div\r\n                                        ref={connectDragTarget}\r\n                                        style={{\r\n                                            height: 32,\r\n                                            lineHeight: `32px`,\r\n                                            padding: \"0 20px\"\r\n                                        }}\r\n                                    >\r\n                                        {widget.title}\r\n                                    </div>\r\n                                )}\r\n                            </WidgetItem>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <DropContainerDemo title=\"A\" />\r\n                <DropContainerDemo pid=\"b\" title=\"B\" />\r\n                <AnimateContainer />\r\n\r\n                <DropContainerWithChildDemo title=\"Parent\" />\r\n                <DropContainerDemo\r\n                    pid=\"d\"\r\n                    title=\"D\"\r\n                    canDrop={item => {\r\n                        return item.xtype === \"EX_TEXTAREA_FIELD\";\r\n                    }}\r\n                />\r\n                <DragLayerDemo />\r\n            </div>\r\n        </WebDesignDndProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function AnimateContainer() {\r\n    return (\r\n        <DropContainer pid=\"Animate\">\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                const list = [...items];\r\n                list.sort((a, b) => a.index - b.index);\r\n\r\n                function getPositionIndex(index) {\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i];\r\n                        if (item.index === index) return i;\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>Animate</h3>\r\n                        <hr />\r\n                        <div\r\n                            style={{\r\n                                position: \"relative\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    position: \"relative\"\r\n                                }}\r\n                            >\r\n                                {list.map((item, index) => {\r\n                                    var pos = getPositionIndex(item.index);\r\n\r\n                                    return (\r\n                                        <DropItem key={item.id} item={item}>\r\n                                            {({\r\n                                                connectDragAndDrop,\r\n                                                isDragging,\r\n                                                isHover,\r\n                                                isOver,\r\n                                                isTmp\r\n                                            }) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        ref={connectDragAndDrop}\r\n                                                        key={item.id}\r\n                                                        id={item.id}\r\n                                                        style={{\r\n                                                            transition:\r\n                                                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                                                            position:\r\n                                                                \"absolute\",\r\n                                                            left: 5,\r\n                                                            right: 5,\r\n                                                            transform: `translate(0, ${(30 +\r\n                                                                18) *\r\n                                                                pos}px)`,\r\n                                                            zIndex: isDragging\r\n                                                                ? 2\r\n                                                                : 1,\r\n                                                            opacity: isDragging\r\n                                                                ? 0.5\r\n                                                                : 1,\r\n                                                            padding: 10,\r\n                                                            background:\r\n                                                                \"#f2f2f2\",\r\n                                                            border:\r\n                                                                isOver &&\r\n                                                                !isDragging\r\n                                                                    ? \"1px solid green\"\r\n                                                                    : \"1px solid #dadada\"\r\n                                                        }}\r\n                                                    >\r\n                                                        {item.title}({item.id})\r\n                                                    </div>\r\n                                                );\r\n                                            }}\r\n                                        </DropItem>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nimport Model from \"./Model\";\r\n\r\nexport default class WebDesignDndProvider extends React.Component {\r\n    //TODO: 延迟释放?\r\n    static defaultProps = {\r\n        backend: HTML5Backend\r\n    };\r\n\r\n    model = null;\r\n\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n\r\n    saveModel = model => {\r\n        this.model = model;\r\n    };\r\n\r\n    render() {\r\n        const { backend, ...props } = this.props;\r\n\r\n        return (\r\n            <DndProvider backend={backend}>\r\n                <Model {...props} ref={this.saveModel} />\r\n            </DndProvider>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport find from \"lodash/find\";\r\nimport last from \"lodash/last\";\r\nimport findIndex from \"lodash/findIndex\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport DragState from \"./DragState\";\r\nimport {\r\n    COMMIT_ACTION_AUTO,\r\n    COMMIT_ACTION_DROP,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\n\r\nfunction randomStr(prefix = \"\") {\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(16)\r\n            .slice(2, 8)\r\n    );\r\n}\r\n\r\nfunction normalizeItem(item, props) {\r\n    const idField = props.idField;\r\n    const pidField = props.pidField;\r\n\r\n    item[idField] =\r\n        item[idField] === undefined ? randomStr(`item_`) : item[idField];\r\n\r\n    item[pidField] = item[pidField] === undefined ? null : item[pidField];\r\n\r\n    return item;\r\n}\r\n\r\nexport default class WebDesignModel extends React.Component {\r\n    static propTypes = {\r\n        value: propTypes.array,\r\n        defaultValue: propTypes.array,\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        commitAction: propTypes.oneOf([COMMIT_ACTION_AUTO, COMMIT_ACTION_DROP]),\r\n        onChange: propTypes.func,\r\n        onDragStart: propTypes.func,\r\n        onDragEnd: propTypes.func,\r\n        onDrop: propTypes.func\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.value) {\r\n            props.value.forEach(item => normalizeItem(item, props));\r\n        }\r\n        return {\r\n            items: \"value\" in props ? props.value : state.items\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        idField: \"id\",\r\n        pidField: \"pid\",\r\n        axis: AXIS_VERTICAL,\r\n        commitAction: COMMIT_ACTION_AUTO,\r\n        onChange: null\r\n    };\r\n\r\n    DropContainerContext = React.createContext({\r\n        isRootContainer: true,\r\n        axis: AXIS_VERTICAL\r\n    });\r\n\r\n    state = {\r\n        scope: randomStr(\"scope_\"),\r\n        items: this.props.defaultValue || []\r\n    };\r\n\r\n    getDragState() {\r\n        return DragState.getState();\r\n    }\r\n\r\n    onChange(items) {\r\n        const props = this.props;\r\n        const { onChange } = props;\r\n\r\n        if (!(\"value\" in props)) {\r\n            this.setState({\r\n                items\r\n            });\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange(items);\r\n        }\r\n    }\r\n\r\n    getScope() {\r\n        return this.state.scope;\r\n    }\r\n\r\n    fireEvent(eventName, ev) {\r\n        const { onDragStart, onDragEnd, onDrop } = this.props;\r\n\r\n        const events = {\r\n            onDragStart,\r\n            onDragEnd,\r\n            onDrop\r\n        };\r\n\r\n        const handler = events[eventName];\r\n\r\n        if (handler) {\r\n            handler(ev);\r\n        }\r\n    }\r\n\r\n    getItems(pid = null) {\r\n        const { pidField } = this.props;\r\n        const items = this.getAllItems();\r\n\r\n        return items.filter(item => item && item[pidField] == pid);\r\n    }\r\n\r\n    getChildren(id = null, items = this.state.items) {\r\n        const { pidField } = this.props;\r\n        return items.filter(item => item[pidField] == id);\r\n    }\r\n\r\n    getAllItems() {\r\n        return [...this.state.items];\r\n    }\r\n\r\n    //获取组件的所有父级ID\r\n    getPids(id) {\r\n        const { idField, pidField } = this.props;\r\n        const pids = [];\r\n        let node = this.getItem(id);\r\n\r\n        if (!node) return pids;\r\n\r\n        if (!node[pidField]) return pids;\r\n\r\n        let currentFieldId = node[pidField];\r\n        let pNode;\r\n        while ((pNode = this.getItem(currentFieldId))) {\r\n            pids.push(pNode[idField]);\r\n            currentFieldId = pNode[pidField];\r\n            if (!currentFieldId) break;\r\n        }\r\n\r\n        return pids;\r\n    }\r\n\r\n    updateItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1) {\r\n            items[idx] = item;\r\n        }\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    isSameItem(s1, s2) {\r\n        const { idField } = this.props;\r\n\r\n        return s1 && s2 && s1[idField] === s2[idField];\r\n    }\r\n\r\n    _addItem(item, pid = null) {\r\n        const { pidField } = this.props;\r\n        item = normalizeItem(item, this.props);\r\n        item[pidField] = pid;\r\n\r\n        this.state.items.push(item);\r\n    }\r\n\r\n    addItem(item, pid = null) {\r\n        const { pidField } = this.props;\r\n        item = normalizeItem(item, this.props);\r\n\r\n        const items = this.getAllItems();\r\n\r\n        item[pidField] = pid;\r\n\r\n        items.push(item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    addTmpItem(item, pid) {\r\n        item.__tmp__ = true;\r\n        this.addItem(item, pid);\r\n    }\r\n\r\n    removeItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        //移除指定项目及子项目\r\n        const ret = items.filter(item => {\r\n            let shouldRemove = item[idField] === id;\r\n\r\n            if (!shouldRemove) {\r\n                const pids = this.getPids(item[idField]);\r\n                shouldRemove = pids.indexOf(id) > -1;\r\n            }\r\n\r\n            return !shouldRemove;\r\n        });\r\n\r\n        this.onChange(ret);\r\n    }\r\n\r\n    getItemIndex(id, items) {\r\n        const { idField } = this.props;\r\n        items = items || this.getAllItems();\r\n        return findIndex(items, item => item[idField] === id);\r\n    }\r\n\r\n    getItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        return find(items, item => item && item[idField] === id);\r\n    }\r\n\r\n    insertBefore(item, bItem) {\r\n        if (this.isSameItem(item, bItem)) return;\r\n\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = bItem[idField];\r\n        // const bItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== 0) {\r\n            const prevItem = items[_idx - 1];\r\n            if (\r\n                prevItem[idField] === item[idField] &&\r\n                prevItem[pidField] === bItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = bItem[pidField];\r\n\r\n        //插入操作\r\n        const idx = this.getItemIndex(id, items);\r\n        items.splice(idx, 0, item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    insertAfter(item, prevItem) {\r\n        if (this.isSameItem(item, prevItem)) return;\r\n\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = prevItem[idField];\r\n        // const prevItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== items.length - 1) {\r\n            const nextItem = items[_idx + 1];\r\n            if (\r\n                nextItem[idField] === item[idField] &&\r\n                nextItem[pidField] === prevItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = prevItem[pidField];\r\n\r\n        //插入操作 之前有删除操作, 要重新查找index\r\n        const idx = findIndex(items, item => item[idField] === id);\r\n        items.splice(idx, 1, items[idx], item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    clearTmpItems() {\r\n        const items = this.getAllItems();\r\n        let hasTmp = false;\r\n\r\n        const newItems = items.filter(item => {\r\n            const isTmp = item.__tmp__;\r\n            isTmp && (hasTmp = true);\r\n            return !isTmp;\r\n        });\r\n\r\n        hasTmp && this.onChange(newItems);\r\n    }\r\n\r\n    updateItemPid(item, pid = null) {\r\n        const { idField, pidField } = this.props;\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (item[pidField] === pid) return true;\r\n\r\n        /**\r\n         * 局部环路检测\r\n         * 如: {id: A, pid: null}  {id: B, pid: A}\r\n         * 这是如果updateItemPid(A, B) 结果为:\r\n         * {id: A, pid: B}  {id: B, pid: A}\r\n         *\r\n         */\r\n        const pids = pid == null ? [] : this.getPids(pid);\r\n        if (pids.length) {\r\n            if (pids.indexOf(id) !== -1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // 同级节点转变为子节点时顺序处理\r\n        if (pid) {\r\n            const pidIndex = this.getItemIndex(pid);\r\n            const childs = this.getChildren(pid);\r\n\r\n            if (childs.length) {\r\n                const firstItem = childs[0];\r\n                const lastItem = childs[childs.length - 1];\r\n\r\n                if (idx > pidIndex) {\r\n                    this.insertAfter(item, lastItem);\r\n                } else {\r\n                    this.insertBefore(item, firstItem);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (idx !== -1) {\r\n            item[pidField] = pid;\r\n        }\r\n\r\n        this.onChange(this.getAllItems());\r\n\r\n        return true;\r\n    }\r\n\r\n    commitItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1 && item.__tmp__) {\r\n            item.__tmp__ = false;\r\n            delete item.__tmp__;\r\n            items[idx] = item;\r\n\r\n            this.onChange(items);\r\n        }\r\n    }\r\n\r\n    //提交DragState中的数据\r\n    commitDragStateItem() {\r\n        const dragState = DragState.getState();\r\n        const canDrop = dragState.canDrop;\r\n        const dragItem = dragState.item;\r\n        const hoverPid = dragState.hoverPid;\r\n        const hoverItem = dragState.hoverItem;\r\n        const hoverDirection = dragState.hoverDirection;\r\n        const isDragging = dragState.isDragging;\r\n        const isNew = dragState.isNew;\r\n\r\n        if (!isDragging || !canDrop) return;\r\n\r\n        DragState.reset();\r\n\r\n        const moveItem = () => {\r\n            if (\r\n                hoverDirection === DRAG_DIR_UP ||\r\n                hoverDirection === DRAG_DIR_LEFT\r\n            ) {\r\n                this.insertBefore(dragItem, hoverItem);\r\n            } else {\r\n                this.insertAfter(dragItem, hoverItem);\r\n            }\r\n        };\r\n\r\n        if (isNew) {\r\n            if (hoverItem) {\r\n                //新增\r\n                this._addItem(dragItem, undefined, false);\r\n                //移动\r\n                moveItem();\r\n            } else {\r\n                //新增\r\n                this.addItem(dragItem, hoverPid);\r\n            }\r\n        } else {\r\n            if (hoverItem) {\r\n                moveItem();\r\n            } else {\r\n                const childs = this.getItems(hoverPid);\r\n                const isExist = find(childs, item =>\r\n                    this.isSameItem(item, dragItem)\r\n                );\r\n\r\n                if (!isExist) {\r\n                    if (childs.length) {\r\n                        this.insertAfter(dragItem, last(childs));\r\n                    } else {\r\n                        this.updateItemPid(dragItem, hoverPid);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    isTmpItem(item) {\r\n        return !!item.__tmp__;\r\n    }\r\n\r\n    getModel() {\r\n        return Object.create(this);\r\n        // return {\r\n        //     DropContainerContext: this.DropContainerContext,\r\n        //     isSameItem: this.isSameItem.bind(this),\r\n        //     getScope: this.getScope.bind(this),\r\n        //     fireEvent: this.fireEvent.bind(this),\r\n        //     addItem: this.addItem.bind(this),\r\n        //     addTmpItem: this.addTmpItem.bind(this),\r\n        //     getPids: this.getPids.bind(this),\r\n        //     updateItem: this.updateItem.bind(this),\r\n        //     getItems: this.getItems.bind(this),\r\n        //     getAllItems: this.getAllItems.bind(this),\r\n        //     removeItem: this.removeItem.bind(this),\r\n        //     getItemIndex: this.getItemIndex.bind(this),\r\n        //     getItem: this.getItem.bind(this),\r\n        //     insertBefore: this.insertBefore.bind(this),\r\n        //     insertAfter: this.insertAfter.bind(this),\r\n        //     clearTmpItems: this.clearTmpItems.bind(this),\r\n        //     commitItem: this.commitItem.bind(this),\r\n        //     isTmpItem: this.isTmpItem.bind(this),\r\n        //     updateItemPid: this.updateItemPid.bind(this),\r\n        //     setItemDragging: this.setItemDragging.bind(this),\r\n        //     isDragging: this.isDragging.bind(this)\r\n        // };\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (\r\n            <ModelContext.Provider value={this.getModel()}>\r\n                {children}\r\n            </ModelContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default React.createContext({});","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport invariant from \"invariant\";\r\nimport {\r\n    ACTION_ADD,\r\n    ACTION_SORT,\r\n    DRAG_DIR_NONE,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    COMMIT_ACTION_DROP,\r\n    COMMIT_ACTION_AUTO,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass DropContainer extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        render: propTypes.func,\r\n        pid: propTypes.any,\r\n        collect: propTypes.func,\r\n        canDrop: propTypes.func,\r\n        hover: propTypes.func,\r\n        drop: propTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        pid: null\r\n    };\r\n\r\n    _connectDropTarget = null;\r\n\r\n    connectDropTarget() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        const dom = findDOMNode(this);\r\n\r\n        this._connectDropTarget(dom);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用 DropItem WidgetItem 同样提示\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._connectDropTarget(null);\r\n    }\r\n\r\n    getDropOptions() {\r\n        const { pid = null, hover, canDrop, drop, collect } = this.props;\r\n        const targetDOM = findDOMNode(this);\r\n\r\n        const model = this.context;\r\n\r\n        const DropContainerContext = model.DropContainerContext;\r\n        const { isRootContainer } = React.useContext(DropContainerContext);\r\n        const commitAction = model.props.commitAction;\r\n\r\n        return {\r\n            accept: model.getScope(),\r\n\r\n            canDrop(dragResult, monitor) {\r\n                if (canDrop) {\r\n                    return canDrop({\r\n                        ...dragResult,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            hover: (dragResult, monitor) => {\r\n                const canDrop = monitor.canDrop();\r\n                if (hover) {\r\n                    hover({\r\n                        ...dragResult,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                model.fireEvent(\"onDragHoverContainer\", {\r\n                    target: pid,\r\n                    targetDOM,\r\n                    monitor,\r\n                    ...dragResult\r\n                });\r\n\r\n                const isStrictlyOver = monitor.isOver({ shallow: true });\r\n                if (!isStrictlyOver) return;\r\n\r\n                DragState.setState({\r\n                    canDrop: monitor.canDrop(),\r\n                    hoverPid: pid,\r\n                    hoverItem: undefined,\r\n                    hoverDirection: DRAG_DIR_NONE\r\n                });\r\n\r\n                if (!canDrop) {\r\n                    return;\r\n                }\r\n\r\n                if (commitAction === COMMIT_ACTION_AUTO) {\r\n                    model.updateItemPid(dragResult.item, pid);\r\n                }\r\n            },\r\n\r\n            drop: (dragResult, monitor) => {\r\n                if (drop) {\r\n                    drop(dragResult, monitor);\r\n                }\r\n\r\n                // //在根节点统一commit时会出现问题，当根节点canDrop返回false时导致无法提交\r\n                // if (isRootContainer) {\r\n                //     const isTmpItem = model.isTmpItem(dragResult.item);\r\n\r\n                //     model.fireEvent(\"onDrop\", {\r\n                //         target: pid,\r\n                //         targetDOM,\r\n                //         action: isTmpItem ? ACTION_ADD : ACTION_SORT,\r\n                //         ...dragResult\r\n                //     });\r\n\r\n                //     if (commitAction === COMMIT_ACTION_AUTO) {\r\n                //         model.commitItem(dragResult.item);\r\n                //     } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                //         model.commitDragStateItem();\r\n                //     }\r\n                // }\r\n\r\n                if (!monitor.didDrop()) {\r\n                    const isTmpItem = model.isTmpItem(dragResult.item);\r\n                    model.fireEvent(\"onDrop\", {\r\n                        target: pid,\r\n                        targetDOM,\r\n                        action: isTmpItem ? ACTION_ADD : ACTION_SORT,\r\n                        ...dragResult\r\n                    });\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        model.commitItem(dragResult.item);\r\n                    } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                        model.commitDragStateItem();\r\n                    }\r\n                }\r\n            },\r\n\r\n            collect: monitor => {\r\n                const ext = collect ? collect(monitor) : {};\r\n\r\n                return {\r\n                    monitor,\r\n                    canDrop: monitor.canDrop(),\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    ...ext\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { pid = null, children, render, axis } = this.props;\r\n\r\n        const model = this.context;\r\n\r\n        const DropContainerContext = model.DropContainerContext;\r\n        const { isRootContainer } = React.useContext(DropContainerContext);\r\n\r\n        invariant(\r\n            isRootContainer ? true : pid != null,\r\n            \"sub DropContainer props.pid miss.\"\r\n        );\r\n\r\n        const [collectedProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        let items = model.getItems(pid);\r\n        if (!collectedProps.isOver) {\r\n            items = items.filter(item => !model.isTmpItem(item));\r\n        }\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n\r\n        const props = {\r\n            ...collectedProps,\r\n            model,\r\n            connectDropTarget,\r\n            items\r\n        };\r\n\r\n        const child = children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n\r\n        return (\r\n            <DropContainerContext.Provider\r\n                value={{\r\n                    isRootContainer: false,\r\n                    axis\r\n                }}\r\n            >\r\n                {child}\r\n            </DropContainerContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withHooks(DropContainer);\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport {\r\n    ACTION_ADD,\r\n    ACTION_SORT,\r\n    DRAG_DIR_UP,\r\n    DRAG_DIR_LEFT,\r\n    DRAG_DIR_RIGHT,\r\n    DRAG_DIR_DOWN,\r\n    DRAG_DIR_NONE,\r\n    COMMIT_ACTION_DROP,\r\n    COMMIT_ACTION_AUTO,\r\n    AXIS_VERTICAL,\r\n    AXIS_HORIZONTAL,\r\n    AXIS_BOTH\r\n} from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport { isNodeInDocument, getHoverDirection } from \"../utils\";\r\n\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass DropItem extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        render: propTypes.func,\r\n        item: propTypes.object.isRequired,\r\n        axis: propTypes.oneOf([AXIS_BOTH, AXIS_HORIZONTAL, AXIS_VERTICAL]),\r\n        canDrop: propTypes.func,\r\n        hover: propTypes.func,\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    _lastHoverDirection = DRAG_DIR_NONE;\r\n\r\n    getHoverDirection(\r\n        monitor,\r\n        targetDOM = findDOMNode(this),\r\n        axis = AXIS_VERTICAL\r\n    ) {\r\n        const targetOffset = targetDOM.getBoundingClientRect();\r\n\r\n        const dragOffset = monitor.getClientOffset();\r\n\r\n        const middleX = ~~(targetOffset.right - targetOffset.width / 2);\r\n        const middleY = ~~(targetOffset.bottom - targetOffset.height / 2);\r\n\r\n        let result = false;\r\n\r\n        switch (axis) {\r\n            case AXIS_VERTICAL:\r\n                result = dragOffset.y <= middleY ? DRAG_DIR_UP : DRAG_DIR_DOWN;\r\n                break;\r\n            case AXIS_HORIZONTAL:\r\n                result =\r\n                    dragOffset.x <= middleX ? DRAG_DIR_LEFT : DRAG_DIR_RIGHT;\r\n                break;\r\n            case AXIS_BOTH:\r\n                result = getHoverDirection(\r\n                    targetOffset.left,\r\n                    targetOffset.top,\r\n                    targetOffset.width,\r\n                    targetOffset.height,\r\n                    dragOffset.x,\r\n                    dragOffset.y\r\n                );\r\n                break;\r\n            default:\r\n                //vertical default\r\n                result = dragOffset.y <= middleY ? DRAG_DIR_UP : DRAG_DIR_DOWN;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    getDropOptions() {\r\n        let { item, axis, canDrop, hover } = this.props;\r\n        const targetDOM = findDOMNode(this);\r\n        const model = this.context;\r\n        const DropContainerContext = model.DropContainerContext;\r\n        const { axis: pAxis } = React.useContext(DropContainerContext);\r\n        const commitAction = model.props.commitAction;\r\n\r\n        axis = axis || pAxis || model.props.axis;\r\n\r\n        return {\r\n            accept: model.getScope(),\r\n            canDrop(dragResult, monitor) {\r\n                const dragItem = dragResult.item;\r\n\r\n                let ret = model.isTmpItem(item)\r\n                    ? false\r\n                    : !model.isSameItem(item, dragItem);\r\n\r\n                if (ret && canDrop) {\r\n                    ret = canDrop({\r\n                        ...dragResult,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                return ret;\r\n            },\r\n\r\n            hover: (dragResult, monitor) => {\r\n                const canDrop = monitor.canDrop();\r\n                if (hover) {\r\n                    hover({\r\n                        ...dragResult,\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                const dragItem = dragResult.item;\r\n\r\n                model.fireEvent(\"onDragHoverItem\", {\r\n                    target: item,\r\n                    targetDOM,\r\n                    monitor,\r\n                    ...dragResult\r\n                });\r\n\r\n                const isStrictlyOver = monitor.isOver({ shallow: true });\r\n                if (!isStrictlyOver) return;\r\n\r\n                const currentDirection = this.getHoverDirection(\r\n                    monitor,\r\n                    targetDOM,\r\n                    axis\r\n                );\r\n                const lastHoverDirection = this._lastHoverDirection;\r\n                this._lastHoverDirection = currentDirection;\r\n\r\n                DragState.setState({\r\n                    canDrop,\r\n                    hoverPid: undefined,\r\n                    hoverItem: item,\r\n                    hoverDirection: currentDirection\r\n                });\r\n\r\n                if (!canDrop) {\r\n                    return;\r\n                }\r\n\r\n                if (currentDirection !== lastHoverDirection) {\r\n                    //TODO: 此处最好再加参数控制。当commitAction=COMMIT_ACTION_AUTO且不需要hoverDirection属性时不建议执行\r\n                    //eg: && needHoverDirection\r\n                    this.forceUpdate();\r\n                }\r\n\r\n                if (commitAction === COMMIT_ACTION_AUTO) {\r\n                    if (\r\n                        currentDirection === DRAG_DIR_UP ||\r\n                        currentDirection === DRAG_DIR_LEFT\r\n                    ) {\r\n                        model.insertBefore(dragItem, item);\r\n                    } else {\r\n                        model.insertAfter(dragItem, item);\r\n                    }\r\n                }\r\n            },\r\n\r\n            drop: (dragResult, monitor) => {\r\n                if (!monitor.didDrop()) {\r\n                    const isTmpItem = model.isTmpItem(dragResult.item);\r\n                    model.fireEvent(\"onDrop\", {\r\n                        target: item,\r\n                        targetDOM,\r\n                        action: isTmpItem ? ACTION_ADD : ACTION_SORT,\r\n                        ...dragResult\r\n                    });\r\n                    if (commitAction === COMMIT_ACTION_AUTO) {\r\n                        model.commitItem(dragResult.item);\r\n                    } else if (commitAction === COMMIT_ACTION_DROP) {\r\n                        model.commitDragStateItem();\r\n                    }\r\n                }\r\n            },\r\n\r\n            collect: monitor => {\r\n                return {\r\n                    monitor,\r\n                    hoverDirection: DRAG_DIR_NONE,\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    canDrop: model.isTmpItem(item) ? false : monitor.canDrop()\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    getDragOptions() {\r\n        const { item, canDrag, beginDrag, endDrag } = this.props;\r\n        const model = this.context;\r\n\r\n        return {\r\n            item: {\r\n                type: model.getScope()\r\n            },\r\n\r\n            canDrag(monitor) {\r\n                if (canDrag) {\r\n                    return canDrag({\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n                return true;\r\n            },\r\n\r\n            begin: monitor => {\r\n                const dom = findDOMNode(this);\r\n                const dragDOM = this._connectDragDOM;\r\n\r\n                if (beginDrag) {\r\n                    beginDrag(\r\n                        {\r\n                            item,\r\n                            dom\r\n                        },\r\n                        monitor\r\n                    );\r\n                }\r\n\r\n                DragState.setState({\r\n                    item,\r\n                    isNew: false,\r\n                    dragDOMIsRemove: false,\r\n                    isDragging: true,\r\n                    dragDOM\r\n                });\r\n\r\n                model.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    action: ACTION_SORT\r\n                });\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end(dragResult, monitor) {\r\n                const { dragDOMIsRemove, dragDOM } = DragState.getState();\r\n                DragState.reset();\r\n                if (dragDOMIsRemove && dragDOM && dragDOM.parentNode) {\r\n                    dragDOM.parentNode.removeChild(dragDOM);\r\n                }\r\n\r\n                if (endDrag) {\r\n                    endDrag(dragResult, monitor);\r\n                }\r\n\r\n                model.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    action: ACTION_SORT\r\n                });\r\n            },\r\n\r\n            collect(monitor) {\r\n                const dragResult = monitor.getItem();\r\n\r\n                return {\r\n                    // monitor\r\n                    isDragging:\r\n                        dragResult && model.isSameItem(dragResult.item, item)\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    _connectDragDOM = null;\r\n\r\n    _connectDropTarget = null;\r\n    _connectDragTarget = null;\r\n    _connectDragPreview = null;\r\n\r\n    componentDidUpdate() {\r\n        this.connectDragAndDrop();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDragAndDrop();\r\n    }\r\n\r\n    connectDragAndDrop() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        const dom = findDOMNode(this);\r\n\r\n        this._connectDropTarget(dom);\r\n        this._connectDragTarget(dom);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //fix: 当拖动节点在拖动状态被删除时导致react-dnd在drop后需要移动鼠标才及时触发endDrag问题\r\n        const dragDOM = this._connectDragDOM;\r\n        const dragState = DragState.getState();\r\n        if (dragState.isDragging && dragDOM && dragState.dragDOM === dragDOM) {\r\n            DragState.setState({\r\n                dragDOMIsRemove: true\r\n            });\r\n\r\n            setTimeout(() => {\r\n                if (isNodeInDocument(dragDOM)) return;\r\n\r\n                dragDOM.style.display = \"none\";\r\n                dragDOM.style.width = \"0px\";\r\n                dragDOM.style.height = \"0px\";\r\n                dragDOM.style.overflow = \"hidden\";\r\n\r\n                document.body.appendChild(dragDOM);\r\n            }, 0);\r\n        }\r\n\r\n        this._connectDropTarget(null);\r\n        this._connectDragTarget(null);\r\n        this._connectDragPreview(null);\r\n    }\r\n\r\n    render() {\r\n        const { children, render, item } = this.props;\r\n        const model = this.context;\r\n\r\n        const [collectedDropProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        const [\r\n            collectedDragProps,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        ] = useDrag(this.getDragOptions());\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n        this._connectDragTarget = React.useCallback(\r\n            dom => {\r\n                this._connectDragDOM = dom;\r\n                connectDragTarget(dom);\r\n            },\r\n            [connectDragTarget]\r\n        );\r\n        this._connectDragPreview = connectDragPreview;\r\n\r\n        const connectDragAndDrop = dom => {\r\n            this._connectDropTarget(dom);\r\n            this._connectDragTarget(dom);\r\n        };\r\n\r\n        const props = {\r\n            ...collectedDropProps,\r\n            ...collectedDragProps,\r\n            item,\r\n            isTmp: model.isTmpItem(item),\r\n            model,\r\n            connectDropTarget,\r\n            connectDragTarget,\r\n            connectDragAndDrop,\r\n            connectDragPreview\r\n        };\r\n\r\n        const { isStrictlyOver, isDragging, canDrop } = props;\r\n\r\n        props.hoverDirection =\r\n            isStrictlyOver && !isDragging && canDrop\r\n                ? this._lastHoverDirection\r\n                : DRAG_DIR_NONE;\r\n\r\n        return children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n    }\r\n}\r\n\r\nexport default withHooks(DropItem);\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport {\r\n    ACTION_ADD,\r\n    ACTION_SORT,\r\n    COMMIT_ACTION_AUTO,\r\n    COMMIT_ACTION_DROP\r\n} from \"../constants\";\r\nimport { isNodeInDocument } from \"../utils\";\r\nimport DragState from \"../Model/DragState\";\r\n\r\nclass WidgetItem extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    static propTypes = {\r\n        children: propTypes.oneOfType([propTypes.func, propTypes.node]),\r\n        render: propTypes.func,\r\n        getInstance: propTypes.func.isRequired,\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    _connectDragDOM = null;\r\n\r\n    _connectDragTarget = null;\r\n    _connectDragPreview = null;\r\n\r\n    componentDidUpdate() {\r\n        this.connectDragTarget();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDragTarget();\r\n    }\r\n\r\n    connectDragTarget() {\r\n        const children = this.props.children;\r\n\r\n        if (!children || typeof children === \"function\") return;\r\n\r\n        this._connectDragTarget(findDOMNode(this));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //fix: 当拖动节点在拖动状态被删除时导致react-dnd在drop后需要移动鼠标才及时触发endDrag问题\r\n        const dragDOM = this._connectDragDOM;\r\n        const dragState = DragState.getState();\r\n        if (dragState.isDragging && dragDOM && dragState.dragDOM === dragDOM) {\r\n            DragState.setState({\r\n                dragDOMIsRemove: true\r\n            });\r\n\r\n            setTimeout(() => {\r\n                if (isNodeInDocument(dragDOM)) return;\r\n\r\n                dragDOM.style.display = \"none\";\r\n                dragDOM.style.width = \"0px\";\r\n                dragDOM.style.height = \"0px\";\r\n                dragDOM.style.overflow = \"hidden\";\r\n\r\n                document.body.appendChild(dragDOM);\r\n            }, 0);\r\n        }\r\n\r\n        this._connectDragTarget(null);\r\n        this._connectDragPreview(null);\r\n    }\r\n\r\n    getDragOptions() {\r\n        const { getInstance, canDrag, beginDrag, endDrag } = this.props;\r\n        const model = this.context;\r\n        const commitAction = model.props.commitAction;\r\n\r\n        return {\r\n            item: {\r\n                type: model.getScope()\r\n            },\r\n\r\n            canDrag(monitor) {\r\n                if (canDrag) {\r\n                    return canDrag({\r\n                        monitor,\r\n                        model\r\n                    });\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            begin: monitor => {\r\n                const item = getInstance();\r\n                const dom = findDOMNode(this);\r\n\r\n                if (beginDrag) {\r\n                    beginDrag(\r\n                        {\r\n                            item,\r\n                            dom\r\n                        },\r\n                        monitor\r\n                    );\r\n                }\r\n\r\n                model.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    action: ACTION_ADD\r\n                });\r\n\r\n                const dragDOM = this._connectDragDOM;\r\n                DragState.setState({\r\n                    item,\r\n                    isNew: true,\r\n                    dragDOMIsRemove: false,\r\n                    isDragging: true,\r\n                    dragDOM\r\n                });\r\n\r\n                if (commitAction === COMMIT_ACTION_AUTO) {\r\n                    model.addTmpItem(item);\r\n                }\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end(dragResult, monitor) {\r\n                const { dragDOMIsRemove, dragDOM } = DragState.getState();\r\n                DragState.reset();\r\n\r\n                if (dragDOMIsRemove && dragDOM && dragDOM.parentNode) {\r\n                    dragDOM.parentNode.removeChild(dragDOM);\r\n                }\r\n\r\n                if (endDrag) {\r\n                    endDrag(dragResult, monitor);\r\n                }\r\n\r\n                model.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    action: ACTION_ADD\r\n                });\r\n\r\n                model.clearTmpItems();\r\n            },\r\n\r\n            collect(monitor) {\r\n                return {\r\n                    monitor,\r\n                    isDragging: monitor.isDragging()\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { children, render } = this.props;\r\n        const model = this.context;\r\n\r\n        const [collectProps, connectDragTarget, connectDragPreview] = useDrag(\r\n            this.getDragOptions()\r\n        );\r\n\r\n        this._connectDragTarget = React.useCallback(\r\n            dom => {\r\n                this._connectDragDOM = dom;\r\n                connectDragTarget(dom);\r\n            },\r\n            [connectDragTarget]\r\n        );\r\n        this._connectDragPreview = connectDragPreview;\r\n\r\n        const props = {\r\n            ...collectProps,\r\n            model,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        };\r\n\r\n        return children\r\n            ? typeof children === \"function\"\r\n                ? children(props)\r\n                : children\r\n            : render\r\n            ? render(props)\r\n            : null;\r\n    }\r\n}\r\n\r\nexport default withHooks(WidgetItem);\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\n\r\nexport default ({ children }) => {\r\n    const props = useDragLayer(monitor => {\r\n        const dragResult = monitor.getItem();\r\n        return [\r\n            {\r\n                type: monitor.getItemType(),\r\n                isDragging: monitor.isDragging(),\r\n                initialClientOffset: monitor.getInitialClientOffset(),\r\n                initialSourceClientOffset: monitor.getInitialSourceClientOffset(),\r\n                clientOffset: monitor.getClientOffset(),\r\n                differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset(),\r\n                sourceClientOffset: monitor.getSourceClientOffset(),\r\n                ...dragResult\r\n            },\r\n            monitor\r\n        ];\r\n    });\r\n\r\n    const child =\r\n        typeof children === \"function\"\r\n            ? children(props[0], props[1])\r\n            : children;\r\n\r\n    return child;\r\n};\r\n","import React from \"react\";\r\nimport ModelContext from \"../ModelContext\";\r\n\r\nexport function useModel() {\r\n    return React.useContext(ModelContext);\r\n}\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport ModelContext from \"./ModelContext\";\r\n\r\nclass DropEmptyContainer extends React.Component {\r\n    static contextType = ModelContext;\r\n\r\n    _connectDropTarget = null;\r\n\r\n    connectDropTarget() {\r\n        const dom = findDOMNode(this);\r\n        this._connectDropTarget(dom);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.connectDropTarget();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._connectDropTarget(null);\r\n    }\r\n\r\n    getDropOptions() {\r\n        const model = this.context;\r\n\r\n        return {\r\n            accept: model.getScope()\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const [collectedProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        this._connectDropTarget = connectDropTarget;\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default withHooks(DropEmptyContainer);\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function DropContainerDemo({ pid = null, title, canDrop }) {\r\n    return (\r\n        <DropContainer pid={pid} canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\nexport default function DropContainerWithChildDemo({ title, canDrop }) {\r\n    return (\r\n        <DropContainer pid=\"parent\" canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n\r\n                        <DropContainer pid=\"child\" canDrop={() => false}>\r\n                            {({\r\n                                items,\r\n                                monitor,\r\n                                canDrop,\r\n                                connectDropTarget\r\n                            }) => {\r\n                                return (\r\n                                    <div\r\n                                        ref={connectDropTarget}\r\n                                        style={{\r\n                                            height: 300,\r\n                                            overflow: \"auto\",\r\n                                            border: canDrop\r\n                                                ? \"1px solid green\"\r\n                                                : \"1px solid #ccc\",\r\n                                            flex: 1\r\n                                        }}\r\n                                    >\r\n                                        <h3>child</h3>\r\n                                        <hr />\r\n                                        {items.map(item => {\r\n                                            return (\r\n                                                <DropItem\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                >\r\n                                                    {({\r\n                                                        connectDragAndDrop,\r\n                                                        isDragging,\r\n                                                        isHover,\r\n                                                        isOver,\r\n                                                        isTmp\r\n                                                    }) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                ref={\r\n                                                                    connectDragAndDrop\r\n                                                                }\r\n                                                                style={{\r\n                                                                    opacity: isDragging\r\n                                                                        ? 0.5\r\n                                                                        : 1,\r\n                                                                    padding: 10,\r\n                                                                    margin: 5,\r\n                                                                    background:\r\n                                                                        \"#f2f2f2\",\r\n                                                                    border:\r\n                                                                        \"1px solid #dadada\"\r\n                                                                }}\r\n                                                            >\r\n                                                                {item.title}(\r\n                                                                {item.id})\r\n                                                            </div>\r\n                                                        );\r\n                                                    }}\r\n                                                </DropItem>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            }}\r\n                        </DropContainer>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import TextField from \"./TextField\";\r\nimport TextareaField from \"./TextareaField\";\r\nimport SelectField from \"./SelectField\";\r\nimport CheckboxField from \"./CheckboxField\";\r\nimport RadioField from \"./RadioField\";\r\n\r\nexport default [\r\n    TextField,\r\n    TextareaField,\r\n    SelectField,\r\n    CheckboxField,\r\n    RadioField\r\n];\r\n","export default {\r\n    xtype: \"EX_TEXT_FIELD\",\r\n    title: \"文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_TEXTAREA_FIELD\",\r\n    title: \"多行文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_SELECT_FIELD\",\r\n    title: \"单选列表\"\r\n};\r\n","export default {\r\n    xtype: \"EX_CHECKBOX_FIELD\",\r\n    title: \"复选框\"\r\n};\r\n","export default {\r\n    xtype: \"EX_RADIO_FIELD\",\r\n    title: \"单选框\"\r\n};\r\n","import React from \"react\";\r\nimport { WebDesignDndProvider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <DropContainer>\r\n                {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: 4,\r\n                            padding: 5,\r\n                            width: 270,\r\n                            margin: \"30px auto\",\r\n                            height: \"80%\",\r\n                            overflow: \"auto\"\r\n                        }}\r\n                    >\r\n                        {items.map(item => (\r\n                            <ListItem key={item.id} item={item} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </DropContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { WebDesignDndProvider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item, index }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            transition:\r\n                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                            left: 5,\r\n                            right: 5,\r\n                            transform: `translate(0, ${(30 + 18) * index}px)`,\r\n                            zIndex: isDragging ? 2 : 1,\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction renderList({ items, monitor, canDrop, connectDropTarget }) {\r\n    const list = [...items];\r\n    list.sort((a, b) => a.id - b.id);\r\n\r\n    const getItemPosition = item => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            const current = items[i];\r\n            if (current.id === item.id) return i;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={connectDropTarget}\r\n            style={{\r\n                position: \"relative\",\r\n                border: \"1px solid #ccc\",\r\n                borderRadius: 4,\r\n                padding: 5,\r\n                width: 270,\r\n                margin: \"30px auto\",\r\n                height: \"80%\",\r\n                overflow: \"auto\"\r\n            }}\r\n        >\r\n            {list.map(item => (\r\n                <ListItem\r\n                    key={item.id}\r\n                    index={getItemPosition(item)}\r\n                    item={item}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <DropContainer>{renderList}</DropContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    WebDesignDndProvider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n} from \"@/src\";\r\n\r\n/**\r\n * 自定义拖拽层\r\n * 禁用系统自带的拖拽层，使用用户自定义拖拽层\r\n */\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 5; i++) {\r\n    dataset.push({\r\n        pid: \"a\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfor (let i = 5; i < 20; i++) {\r\n    dataset.push({\r\n        pid: \"b\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, connectDragPreview, isDragging }) => {\r\n                //用空白图片覆盖默认推拽效果\r\n                connectDragPreview(getEmptyImage());\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.4 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 1;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    margin: \"30px auto\",\r\n                    height: \"80%\",\r\n                    width: 600\r\n                }}\r\n            >\r\n                <DropContainer pid=\"a\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"b\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <DragLayer>\r\n                    {({ isDragging, dom, ...props }) => {\r\n                        if (!isDragging || !dom) return null;\r\n                        return <ItemDragLayer dom={dom} {...props} />;\r\n                    }}\r\n                </DragLayer>\r\n            </div>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    WebDesignDndProvider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n} from \"@/src\";\r\n\r\n/**\r\n * 自定义拖拽层\r\n * 禁用系统自带的拖拽层，使用用户自定义拖拽层\r\n */\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        pid: \"nostart\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nconst ListItem = React.memo(function ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({\r\n                connectDragAndDrop,\r\n                connectDragPreview,\r\n                isDragging,\r\n                hoverDirection\r\n            }) => {\r\n                //用空白图片覆盖默认推拽效果\r\n                connectDragPreview(getEmptyImage());\r\n\r\n                const borderColor = {};\r\n\r\n                if (hoverDirection === \"up\") {\r\n                    borderColor.borderTop = \"1px solid red\";\r\n                    borderColor.borderBottom = \"1px solid  #dadada\";\r\n                }\r\n\r\n                if (hoverDirection === \"down\") {\r\n                    borderColor.borderTop = \"1px solid #dadada\";\r\n                    borderColor.borderBottom = \"1px solid red\";\r\n                }\r\n                if (hoverDirection === \"none\") {\r\n                    borderColor.borderTop = \"1px solid #dadada\";\r\n                    borderColor.borderBottom = \"1px solid #dadada\";\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.4 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\",\r\n                            ...borderColor\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n});\r\n\r\nfunction ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider\r\n            value={value}\r\n            onChange={onChange}\r\n            commitAction=\"drop\"\r\n        >\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    margin: \"30px auto\",\r\n                    height: \"80%\",\r\n                    width: 800\r\n                }}\r\n            >\r\n                <DropContainer pid=\"nostart\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>未开始</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"pending\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>处理中</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\",\r\n                                    backgroundColor: canDrop ? \"#eef9f3\" : \"\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"done\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\",\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\"\r\n                            }}\r\n                        >\r\n                            <div>已完成</div>\r\n                            <div\r\n                                ref={connectDropTarget}\r\n                                style={{\r\n                                    flex: \"1\",\r\n                                    backgroundColor: canDrop ? \"#eef9f3\" : \"\"\r\n                                }}\r\n                            >\r\n                                {items.map(item => (\r\n                                    <ListItem key={item.id} item={item} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <DragLayer>\r\n                    {({ isDragging, dom, ...props }) => {\r\n                        if (!isDragging || !dom) return null;\r\n                        return <ItemDragLayer dom={dom} {...props} />;\r\n                    }}\r\n                </DragLayer>\r\n            </div>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport {\r\n    WebDesignDndProvider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    WidgetItem,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n} from \"@/src\";\r\nimport fields from \"./fields\";\r\nimport ItemDragLayer from \"./ItemDragLayer\";\r\nimport \"./index.scss\";\r\n\r\nlet fid = 1;\r\n\r\nfunction FieldItem({ field }) {\r\n    return (\r\n        <WidgetItem\r\n            getInstance={() => {\r\n                return {\r\n                    ...field,\r\n                    id: fid++\r\n                };\r\n            }}\r\n        >\r\n            {({ connectDragTarget, connectDragPreview }) => {\r\n                connectDragPreview(getEmptyImage());\r\n                return (\r\n                    <div className=\"field-item\" ref={connectDragTarget}>\r\n                        {field.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </WidgetItem>\r\n    );\r\n}\r\n\r\nfunction DropFieldContainer({ pid }) {\r\n    const _canDrop = React.useCallback(\r\n        ({ item, model }) => {\r\n            if (pid === \"value\") return true;\r\n\r\n            const items = [\r\n                ...model.getItems(\"column\"),\r\n                ...model.getItems(\"row\")\r\n            ];\r\n            const names = items.map(item => item.name);\r\n            const ids = items.map(item => item.id);\r\n\r\n            //已存在的数据可排序\r\n            if (ids.indexOf(item.id) !== -1) return true;\r\n\r\n            //检测新增数据\r\n            return names.indexOf(item.name) !== -1 ? false : true;\r\n        },\r\n        [pid]\r\n    );\r\n\r\n    return (\r\n        <DropContainer pid={pid} canDrop={_canDrop} axis=\"horizontal\">\r\n            {({ items, connectDropTarget, canDrop, isStrictlyOver }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        className={cx({\r\n                            \"field-drop-list\": true,\r\n                            \"can-drop\": canDrop,\r\n                            \"is-over\": canDrop && isStrictlyOver\r\n                        })}\r\n                    >\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem\r\n                                    canDrop={_canDrop}\r\n                                    item={item}\r\n                                    key={item.id}\r\n                                >\r\n                                    {({\r\n                                        connectDropTarget,\r\n                                        connectDragTarget,\r\n                                        connectDragPreview,\r\n                                        model,\r\n                                        hoverDirection\r\n                                    }) => {\r\n                                        connectDragPreview(getEmptyImage());\r\n                                        return (\r\n                                            <div\r\n                                                className={\r\n                                                    \"field-drop-item hover-dir-\" +\r\n                                                    hoverDirection\r\n                                                }\r\n                                                ref={connectDropTarget}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"field-drop-item-inner\"\r\n                                                    ref={connectDragTarget}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type === \"number\"\r\n                                                        ? \"(求和)\"\r\n                                                        : \"\"}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type !== \"number\"\r\n                                                        ? \"(计数)\"\r\n                                                        : \"\"}{\" \"}\r\n                                                    <span\r\n                                                        className=\"item-close\"\r\n                                                        onClick={() => {\r\n                                                            model.removeItem(\r\n                                                                item.id\r\n                                                            );\r\n                                                        }}\r\n                                                    >\r\n                                                        x\r\n                                                    </span>\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState([]);\r\n\r\n    return (\r\n        <WebDesignDndProvider\r\n            value={value}\r\n            commitAction=\"drop\"\r\n            onChange={onChange}\r\n        >\r\n            <DropEmptyContainer>\r\n                <div\r\n                    className=\"pivot-container\"\r\n                    style={{\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        margin: \"30px auto\",\r\n                        height: \"80%\",\r\n                        width: 888\r\n                    }}\r\n                >\r\n                    <div className=\"pivot-field-list\">\r\n                        <div className=\"list-header\">字段列表</div>\r\n                        <div className=\"list-wrapper\">\r\n                            {fields.map(field => (\r\n                                <FieldItem field={field} key={field.name} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pivot-field-result\">\r\n                        <div className=\"result-drop\">\r\n                            <div className=\"drop-row-wrapper\">\r\n                                <div className=\"drop-field-label\">列</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"column\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">行</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"row\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-value-wrapper\">\r\n                                <div className=\"drop-field-label\">值</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"value\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result-data\">\r\n                            <pre>{JSON.stringify(value, null, 2)}</pre>\r\n                        </div>\r\n                    </div>\r\n                    <DragLayer>\r\n                        {({ isDragging, dom, ...props }) => {\r\n                            if (!isDragging || !dom) return null;\r\n                            return <ItemDragLayer dom={dom} {...props} />;\r\n                        }}\r\n                    </DragLayer>\r\n                </div>\r\n            </DropEmptyContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","export default [\r\n    {\r\n        title: \"日期\",\r\n        type: \"date\",\r\n        name: \"crated_date\"\r\n    },\r\n    {\r\n        title: \"订单来源\",\r\n        type: \"string\",\r\n        name: \"order_from\"\r\n    },\r\n    {\r\n        title: \"用户注册来源\",\r\n        type: \"string\",\r\n        name: \"register_from\"\r\n    },\r\n    {\r\n        title: \"订单地区\",\r\n        type: \"string\",\r\n        name: \"order_area\"\r\n    },\r\n    {\r\n        title: \"支付订单量\",\r\n        type: \"number\",\r\n        name: \"order_pay_total\"\r\n    },\r\n    {\r\n        title: \"被投诉订单量\",\r\n        type: \"number\",\r\n        name: \"order_complaint_total\"\r\n    },\r\n    {\r\n        title: \"取消订单量\",\r\n        type: \"number\",\r\n        name: \"order_cancel_total\"\r\n    }\r\n];\r\n","import React from \"react\";\r\n\r\nexport default function ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n        cloneNode.style.fontSize = \"12px\";\r\n        cloneNode.style.cursor = \"default\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","import React from \"react\";\r\nimport cx from \"classnames\";\r\nimport {\r\n    WebDesignDndProvider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    WidgetItem,\r\n    getEmptyImage,\r\n    DropEmptyContainer\r\n} from \"@/src\";\r\nimport fields from \"./fields\";\r\nimport ItemDragLayer from \"./ItemDragLayer\";\r\nimport \"./index.scss\";\r\n\r\nlet fid = 1;\r\n\r\nfunction FieldItem({ field }) {\r\n    return (\r\n        <WidgetItem\r\n            getInstance={() => {\r\n                return {\r\n                    ...field,\r\n                    id: fid++\r\n                };\r\n            }}\r\n        >\r\n            {({ connectDragTarget, connectDragPreview }) => {\r\n                connectDragPreview(getEmptyImage());\r\n                return (\r\n                    <div className=\"field-item\" ref={connectDragTarget}>\r\n                        {field.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </WidgetItem>\r\n    );\r\n}\r\n\r\nfunction DropFieldContainer({ pid }) {\r\n    const _canDrop = React.useCallback(\r\n        ({ item, model }) => {\r\n            if (item.id === \"∑\" && (pid === \"value\" || pid === \"filter\"))\r\n                return false;\r\n\r\n            if (pid === \"value\") return true;\r\n\r\n            const items =\r\n                pid === \"filter\"\r\n                    ? model.getItems(\"filter\")\r\n                    : [...model.getItems(\"column\"), ...model.getItems(\"row\")];\r\n            const names = items.map(item => item.name);\r\n            const ids = items.map(item => item.id);\r\n\r\n            //已存在的数据可排序\r\n            if (ids.indexOf(item.id) !== -1) return true;\r\n\r\n            //检测新增数据\r\n            return names.indexOf(item.name) !== -1 ? false : true;\r\n        },\r\n        [pid]\r\n    );\r\n\r\n    return (\r\n        <DropContainer pid={pid} canDrop={_canDrop}>\r\n            {({ items, connectDropTarget, canDrop, isStrictlyOver, model }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        className={cx({\r\n                            \"field-drop-list\": true,\r\n                            \"can-drop\": canDrop,\r\n                            \"is-over\": canDrop && isStrictlyOver\r\n                        })}\r\n                    >\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem\r\n                                    canDrop={_canDrop}\r\n                                    item={item}\r\n                                    key={item.id}\r\n                                >\r\n                                    {({\r\n                                        connectDropTarget,\r\n                                        connectDragTarget,\r\n                                        connectDragPreview,\r\n                                        model,\r\n                                        hoverDirection\r\n                                    }) => {\r\n                                        connectDragPreview(getEmptyImage());\r\n                                        return (\r\n                                            <div\r\n                                                className={\r\n                                                    \"field-drop-item hover-dir-\" +\r\n                                                    hoverDirection\r\n                                                }\r\n                                                ref={connectDropTarget}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"field-drop-item-inner\"\r\n                                                    ref={connectDragTarget}\r\n                                                >\r\n                                                    {item.title}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type === \"number\"\r\n                                                        ? \"(求和)\"\r\n                                                        : \"\"}\r\n                                                    {pid === \"value\" &&\r\n                                                    item.type !== \"number\"\r\n                                                        ? \"(计数)\"\r\n                                                        : \"\"}{\" \"}\r\n                                                    {item.id === \"∑\" ? null : (\r\n                                                        <span\r\n                                                            className=\"item-close\"\r\n                                                            onClick={() => {\r\n                                                                model.removeItem(\r\n                                                                    item.id\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            x\r\n                                                        </span>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n\r\nconst E_VALUE_ITEM = {\r\n    id: \"∑\",\r\n    title: \"∑数值\",\r\n    name: \"∑Values\",\r\n    type: \"number\",\r\n    pid: \"column\"\r\n};\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState([]);\r\n\r\n    const handleChange = React.useCallback(\r\n        items => {\r\n            const valueItems = items.filter(item => item.pid === \"value\");\r\n            const shouldShowEValue = valueItems.length > 1;\r\n            const EVI = items.filter(item => item.id === \"∑\");\r\n            if (shouldShowEValue) {\r\n                if (!EVI.length) {\r\n                    items.push({ ...E_VALUE_ITEM });\r\n                }\r\n            } else {\r\n                items = items.filter(item => item.id !== \"∑\");\r\n            }\r\n\r\n            onChange(items);\r\n        },\r\n        [value]\r\n    );\r\n\r\n    return (\r\n        <WebDesignDndProvider\r\n            value={value}\r\n            commitAction=\"drop\"\r\n            onChange={handleChange}\r\n        >\r\n            <DropEmptyContainer>\r\n                <div\r\n                    className=\"pivot-container-02\"\r\n                    style={{\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        margin: \"30px auto\",\r\n                        height: \"80%\",\r\n                        width: 888\r\n                    }}\r\n                >\r\n                    <div className=\"pivot-field-list\">\r\n                        <div className=\"list-header\">字段列表</div>\r\n                        <div className=\"list-wrapper\">\r\n                            {fields.map(field => (\r\n                                <FieldItem field={field} key={field.name} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pivot-field-result\">\r\n                        <div className=\"result-drop\">\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">筛选</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"filter\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-row-wrapper\">\r\n                                <div className=\"drop-field-label\">列</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"row\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-column-wrapper\">\r\n                                <div className=\"drop-field-label\">行</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"column\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"drop-value-wrapper\">\r\n                                <div className=\"drop-field-label\">值</div>\r\n                                <div className=\"drop-field-list\">\r\n                                    <DropFieldContainer pid=\"value\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"result-data\">\r\n                            <pre>{JSON.stringify(value, null, 2)}</pre>\r\n                        </div>\r\n                    </div>\r\n                    <DragLayer>\r\n                        {({ isDragging, dom, ...props }) => {\r\n                            if (!isDragging || !dom) return null;\r\n                            return <ItemDragLayer dom={dom} {...props} />;\r\n                        }}\r\n                    </DragLayer>\r\n                </div>\r\n            </DropEmptyContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","export default [\r\n    {\r\n        title: \"日期\",\r\n        type: \"date\",\r\n        name: \"crated_date\"\r\n    },\r\n    {\r\n        title: \"订单来源\",\r\n        type: \"string\",\r\n        name: \"order_from\"\r\n    },\r\n    {\r\n        title: \"用户注册来源\",\r\n        type: \"string\",\r\n        name: \"register_from\"\r\n    },\r\n    {\r\n        title: \"订单地区\",\r\n        type: \"string\",\r\n        name: \"order_area\"\r\n    },\r\n    {\r\n        title: \"支付订单量\",\r\n        type: \"number\",\r\n        name: \"order_pay_total\"\r\n    },\r\n    {\r\n        title: \"被投诉订单量\",\r\n        type: \"number\",\r\n        name: \"order_complaint_total\"\r\n    },\r\n    {\r\n        title: \"取消订单量\",\r\n        type: \"number\",\r\n        name: \"order_cancel_total\"\r\n    }\r\n];\r\n","import React from \"react\";\r\n\r\nexport default function ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 0.7;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n        cloneNode.style.fontSize = \"12px\";\r\n        cloneNode.style.cursor = \"default\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, [dom]);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n","let state = {\r\n    //part1\r\n    //drag item\r\n    item: null,\r\n    isNew: false,\r\n    canDrop: true,\r\n    //hover container pid\r\n    hoverPid: null,\r\n    //hover item\r\n    hoverItem: null,\r\n    hoverDirection: \"none\",\r\n    //part2\r\n    dragDOMIsRemove: false,\r\n    isDragging: false,\r\n    currentDragDOM: null\r\n};\r\n\r\nfunction setState(newState) {\r\n    state = {\r\n        ...state,\r\n        ...newState\r\n    };\r\n}\r\n\r\nfunction reset() {\r\n    setState({\r\n        item: null,\r\n        isNew: false,\r\n        canDrop: true,\r\n        hoverPid: null,\r\n        hoverItem: null,\r\n        hoverDirection: \"none\",\r\n        dragDOMIsRemove: false,\r\n        isDragging: false,\r\n        currentDragDOM: null\r\n    });\r\n}\r\n\r\nfunction getState() {\r\n    return state;\r\n}\r\n\r\nexport default {\r\n    setState,\r\n    getState,\r\n    reset\r\n};\r\n","export const ACTION_ADD = \"add\";\r\nexport const ACTION_SORT = \"sort\";\r\n\r\nexport const DRAG_DIR_UP = \"up\";\r\nexport const DRAG_DIR_DOWN = \"down\";\r\nexport const DRAG_DIR_LEFT = \"left\";\r\nexport const DRAG_DIR_RIGHT = \"right\";\r\nexport const DRAG_DIR_NONE = \"none\";\r\n\r\nexport const COMMIT_ACTION_AUTO = \"auto\";\r\nexport const COMMIT_ACTION_DROP = \"drop\";\r\n\r\nexport const AXIS_VERTICAL = \"vertical\";\r\nexport const AXIS_HORIZONTAL = \"horizontal\";\r\nexport const AXIS_BOTH = \"both\";\r\n"],"sourceRoot":""}