{"version":3,"sources":["webpack:///./demo/index.js","webpack:///./demo/src/index.js","webpack:///./demo/src/basic/index.js","webpack:///./demo/src/basic/AnimateContainer.js","webpack:///./src/WebDesignDndProvider.js","webpack:///./src/index.js","webpack:///./src/Model/index.js","webpack:///./src/DropContainer/index.js","webpack:///./src/DropContainer/DropContainer.js","webpack:///./src/DropContainer/DropItem.js","webpack:///./src/utils/index.js","webpack:///./src/WidgetItem/index.js","webpack:///./src/DragLayer/index.js","webpack:///./demo/src/basic/DropContainerDemo.js","webpack:///./demo/src/basic/DropContainerWithChildDemo.js","webpack:///./demo/src/basic/widgets/index.js","webpack:///./demo/src/basic/widgets/TextField/index.js","webpack:///./demo/src/basic/widgets/TextareaField/index.js","webpack:///./demo/src/basic/widgets/SelectField/index.js","webpack:///./demo/src/basic/widgets/CheckboxField/index.js","webpack:///./demo/src/basic/widgets/RadioField/index.js","webpack:///./demo/src/sort-list/index.js","webpack:///./demo/src/sort-list-animation/index.js","webpack:///./demo/src/drag-layer/index.js","webpack:///./src/ModelContext.js","webpack:///./src/constants.js"],"names":["_react","_interopRequireDefault","__webpack_require__","_reactDom","_src","ReactDOM","render","default","createElement","document","getElementById","_reactRouterDom","_basic","_sortList","_sortListAnimation","_dragLayer","HashRouter","className","NavLink","to","Switch","Route","path","exact","Redirect","component","Basic","SortList","SortListAnimation","DragLayer","_React$useState","React","useState","items","_React$useState2","_slicedToArray2","metadata","onMetadataChange","WebDesignDndProvider","value","onChange","onDragStart","ev","console","log","onDragEnd","onDrop","style","display","height","width","flex","widgets","map","widget","WidgetItem","key","xtype","getInstance","_objectSpread2","id","Math","random","toString","slice","pid","index","idx","_ref2","connectDragTarget","ref","lineHeight","padding","title","_DropContainerDemo","_AnimateContainer","_DropContainerWithChildDemo","canDrop","item","DragLayerDemo","_widgets","_ref","isDragging","background","position","top","right","DropContainer","monitor","connectDropTarget","list","_toConsumableArray2","sort","a","b","border","pos","i","length","getPositionIndex","DropItem","connectDragAndDrop","isOver","isHover","isTmp","transition","left","transform","concat","zIndex","opacity","_reactDndHtml5Backend","_reactDnd","_Model","model","_this","this","_this$props","props","children","backend","_objectWithoutProperties2","DndProvider","_extends2","saveModel","Component","HTML5Backend","_WebDesignDndProvider","_DropContainer","_WidgetItem","_DragLayer","WebDesignContext","ModelContext","_propTypes","_ModelContext","_find","_findIndex","randomStr","arguments","undefined","normalizeItem","idField","pidField","WebDesignModel","createContext","isRootContainer","scope","defaultValue","setState","state","eventName","handler","getAllItems","filter","_this$props2","pids","node","getItem","pNode","currentFieldId","push","getItemIndex","s1","s2","_this$props3","indexField","__tmp__","__dragging__","addItem","_this2","ret","shouldRemove","getPids","indexOf","bItem","_this$props4","_idx","prevItem","oIdx","splice","_this$props5","nextItem","newItems","_this$props6","pidIndex","childs","getChildren","firstItem","lastItem","insertAfter","insertBefore","_create","Provider","getModel","forEach","propTypes","array","align","oneOf","func","_DropItem","_withComponentHooks","_invariant","_constants","self","_this$props$pid","hover","drop","collect","designer","useContext","DropContainerContext","_useDrop","useDrop","accept","getScope","dragResult","targetDOM","findDOMNode","fireEvent","target","shallow","updateItemPid","isTmpItem","action","ACTION_ADD","ACTION_SORT","commitItem","ext","isStrictlyOver","_useDrop2","collectedProps","getItems","isRequired","any","disabled","bool","_utils","dragItem","isSameItem","dragOffset","getClientOffset","targetOffset","getBoundingClientRect","middleX","middleY","bottom","shouldInsertBefore","y","x","isBeforeRect","canDrag","beginDrag","endDrag","type","begin","dom","setItemDragging","end","clearTmpItems","getDropOptions","collectedDropProps","_useDrag","useDrag","getDragOptions","_useDrag2","collectedDragProps","connectDragPreview","object","getRectDirection","px","py","y_ac","y_bd","middle_x","middle_y","apply","addTmpItem","collectProps","useDragLayer","getItemType","initialClientOffset","getInitialClientOffset","initialSourceClientOffset","getInitialSourceClientOffset","clientOffset","differenceFromInitialOffset","getDifferenceFromInitialOffset","sourceClientOffset","getSourceClientOffset","_ref$pid","_ref3","margin","_ref4","overflow","_ref5","_TextField","_TextareaField","_SelectField","_CheckboxField","_RadioField","TextField","TextareaField","SelectField","CheckboxField","RadioField","dataset","ListItem","borderRadius","_defineProperty2","renderList","getItemPosition","getEmptyImage","ItemDragLayer","initData","useEffect","cloneNode","rect","pointerEvents","boxSizing","body","appendChild","removeChild","_React$useState3","_React$useState4","_ref6"],"mappings":"kJAAAA,EAAAC,EAAAC,EAAA,IACAC,EAAAF,EAAAC,EAAA,KAEAE,EAAAH,EAAAC,EAAA,MAmIAG,UAASC,OAAON,EAAAO,QAAAC,cAACJ,EAAAG,QAAD,MAASE,SAASC,eAAe,uGCtIjD,IAAAV,EAAAC,EAAAC,EAAA,IAEAS,EAAAT,EAAA,KAEAU,EAAAX,EAAAC,EAAA,MACAW,EAAAZ,EAAAC,EAAA,MACAY,EAAAb,EAAAC,EAAA,MACAa,EAAAd,EAAAC,EAAA,MAEAA,EAAA,eAEe,WACX,OACIF,EAAAO,QAAAC,cAACG,EAAAK,WAAD,KACIhB,EAAAO,QAAAC,cAAA,OAAKS,UAAU,YACXjB,EAAAO,QAAAC,cAAA,OAAKS,UAAU,YACXjB,EAAAO,QAAAC,cAACG,EAAAO,QAAD,CAASC,GAAG,UAAZ,QACAnB,EAAAO,QAAAC,cAACG,EAAAO,QAAD,CAASC,GAAG,cAAZ,QACAnB,EAAAO,QAAAC,cAACG,EAAAO,QAAD,CAASC,GAAG,wBAAZ,cAGAnB,EAAAO,QAAAC,cAACG,EAAAO,QAAD,CAASC,GAAG,eAAZ,WAEJnB,EAAAO,QAAAC,cAAA,OAAKS,UAAU,aACXjB,EAAAO,QAAAC,cAACG,EAAAS,OAAD,KACIpB,EAAAO,QAAAC,cAACG,EAAAU,MAAD,CACIC,KAAK,IACLC,OAAK,EACLjB,OAAQ,kBAAMN,EAAAO,QAAAC,cAACG,EAAAa,SAAD,CAAUL,GAAG,cAE/BnB,EAAAO,QAAAC,cAACG,EAAAU,MAAD,CAAOC,KAAK,SAASG,UAAWC,YAChC1B,EAAAO,QAAAC,cAACG,EAAAU,MAAD,CAAOC,KAAK,aAAaG,UAAWE,YACpC3B,EAAAO,QAAAC,cAACG,EAAAU,MAAD,CACIC,KAAK,uBACLG,UAAWG,YAEf5B,EAAAO,QAAAC,cAACG,EAAAU,MAAD,CAAOC,KAAK,cAAcG,UAAWI,wGCK9C,WAAe,IAAAC,EACWC,UAAMC,SAAS,CAChDC,MAAO,KAFeC,GAAA,EAAAC,EAAA5B,SAAAuB,EAAA,GACnBM,EADmBF,EAAA,GACTG,EADSH,EAAA,GAW1B,OACIlC,EAAAO,QAAAC,cAACJ,EAAAkC,qBAAD,CAEIC,MAAOH,EAASH,MAChBO,SAVR,SAAkBP,GACdI,EAAiB,CACbJ,WASAQ,YAAa,SAAAC,GACTC,QAAQC,IAAI,cAAeF,IAE/BG,UAAW,SAAAH,GACPC,QAAQC,IAAI,YAAaF,IAE7BI,OAAQ,SAAAJ,GACJC,QAAQC,IAAI,SAAUF,KAG1B1C,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHC,QAAS,OACTC,OAAQ,SAGZjD,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHG,MAAO,IACPC,KAAM,SAGTC,UAAQC,IAAI,SAAAC,GACT,OACItD,EAAAO,QAAAC,cAACJ,EAAAmD,WAAD,CACIC,IAAKF,EAAOG,MAEZC,YAAa,oBAAAC,EAAApD,SAAA,GACN+C,EADM,CAETM,GA1EzBC,KAAKC,SACPC,SAAS,IACTC,MAAM,EAAG,GAyEkBC,IAAK,KACLC,MAAOC,QAGV,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,kBAAH,OACGrE,EAAAO,QAAAC,cAAA,OACI8D,IAAKD,EACLtB,MAAO,CACHE,OAAQ,GACRsB,WAAU,OACVC,QAAS,WAGZlB,EAAOmB,YAOhCzE,EAAAO,QAAAC,cAACkE,EAAAnE,QAAD,CAAmBkE,MAAM,MACzBzE,EAAAO,QAAAC,cAACkE,EAAAnE,QAAD,CAAmB0D,IAAI,IAAIQ,MAAM,MACjCzE,EAAAO,QAAAC,cAACmE,EAAApE,QAAD,MAEAP,EAAAO,QAAAC,cAACoE,EAAArE,QAAD,CAA4BkE,MAAM,WAClCzE,EAAAO,QAAAC,cAACkE,EAAAnE,QAAD,CACI0D,IAAI,IACJQ,MAAM,IACNI,QAAS,SAAAC,GACL,MAAsB,sBAAfA,EAAKrB,SAGpBzD,EAAAO,QAAAC,cAACuE,EAAD,mCAvHhB/E,EAAAC,EAAAC,EAAA,IAEAyE,EAAA1E,EAAAC,EAAA,MAEAwE,EAAAzE,EAAAC,EAAA,MACA0E,EAAA3E,EAAAC,EAAA,MAEAE,EAAAF,EAAA,IAEA8E,EAAA/E,EAAAC,EAAA,MAQA,IAAIiE,EAAM,EAEV,SAASY,IACL,OACI/E,EAAAO,QAAAC,cAACJ,EAAAyB,UAAD,KACK,SAAAoD,GAAA,OAAAA,EAAGC,WAEIlF,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHyB,QAAS,EACTW,WAAY,iBACZC,SAAU,QACVC,IAAK,EACLC,MAAO,IANf,4BADU,+FCpBf,WACX,OACItF,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAI,WACd,SAAAgB,GAAoD,IAAjDhD,EAAiDgD,EAAjDhD,MAAgB4C,GAAiCI,EAA1CO,QAA0CP,EAAjCJ,SAASY,EAAwBR,EAAxBQ,kBACnBC,GAAI,EAAAC,EAAApF,SAAO0B,GAUjB,OATAyD,EAAKE,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE3B,MAAQ4B,EAAE5B,QAU5BlE,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHqC,SAAU,WACVW,OAAQlB,EACF,kBACA,iBACN1B,KAAM,IAGVnD,EAAAO,QAAAC,cAAA,qBACAR,EAAAO,QAAAC,cAAA,WACAR,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHqC,SAAU,aAGdpF,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHqC,SAAU,aAGbM,EAAKrC,IAAI,SAACyB,EAAMZ,GACb,IAAI8B,EA/BxB,SAA0B9B,GACtB,IAAK,IAAI+B,EAAI,EAAGA,EAAIhE,EAAMiE,OAAQD,IAAK,CACnC,IAAMnB,EAAO7C,EAAMgE,GACnB,GAAInB,EAAKZ,QAAUA,EAAO,OAAO+B,GA4BXE,CAAiBrB,EAAKZ,OAEhC,OACIlE,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAU5C,IAAKsB,EAAKlB,GAAIkB,KAAMA,GACzB,SAAAV,GAMK,IALFiC,EAKEjC,EALFiC,mBACAnB,EAIEd,EAJFc,WAEAoB,GAEElC,EAHFmC,QAGEnC,EAFFkC,QAEElC,EADFoC,MAEA,OACIxG,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACL7C,IAAKsB,EAAKlB,GACVA,GAAIkB,EAAKlB,GACTb,MAAO,CACH0D,WACI,2CACJrB,SACI,WACJsB,KAAM,EACNpB,MAAO,EACPqB,UAAS,gBAAAC,OAAkB,GAEvBZ,EAFK,OAGTa,OAAQ3B,EACF,EACA,EACN4B,QAAS5B,EACH,GACA,EACNV,QAAS,GACTW,WACI,UACJY,OACIO,IACCpB,EACK,kBACA,sBAGbJ,EAAKL,MA9BV,IA8BkBK,EAAKlB,GA9BvB,8BArDpD5D,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,2MCDAF,EAAAC,EAAAC,EAAA,IACA6G,EAAA9G,EAAAC,EAAA,KACA8G,EAAA9G,EAAA,IAEA+G,EAAAhH,EAAAC,EAAA,MAEqBoC,yPAKT,iDAMI,SAAA4E,GACRC,EAAKD,MAAQA,iFAJb,OAAOE,KAAKF,uCAOP,IAAAG,EACmCD,KAAKE,MAArCC,EADHF,EACGE,SAAUC,EADbH,EACaG,QAAYF,GADzB,EAAAG,EAAAlH,SAAA8G,EAAA,wBAGL,OACIrH,EAAAO,QAAAC,cAACwG,EAAAU,YAAD,CAAaF,QAASA,GAClBxH,EAAAO,QAAAC,cAACyG,EAAA1G,SAAD,EAAAoH,EAAApH,SAAA,GAAW+G,EAAX,CAAkBhD,IAAK8C,KAAKQ,YACvBL,WArB6BxF,UAAM8F,qCAAnCvF,iBACK,CAClBkF,QAASM,kiBCRjB,IAAAf,EAAA7G,EAAA,IACA6H,EAAA9H,EAAAC,EAAA,MACA8H,EAAA9H,EAAA,KACA+H,EAAAhI,EAAAC,EAAA,MACAgI,EAAAjI,EAAAC,EAAA,MAGMiI,EAFNlI,EAAAC,EAAA,KAEyBkI,mOCPzBpI,EAAAC,EAAAC,EAAA,IACAmI,EAAApI,EAAAC,EAAA,KACAoI,EAAArI,EAAAC,EAAA,KAEAqI,EAAAtI,EAAAC,EAAA,MACAsI,EAAAvI,EAAAC,EAAA,MAEA,SAASuI,IACL,OAD4BC,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IAGpB7E,KAAKC,SACAC,SAAS,IACTC,MAAM,EAAG,GAItB,SAAS4E,EAAc9D,EAAMwC,GACzB,IAAMuB,EAAUvB,EAAMuB,QAChBC,EAAWxB,EAAMwB,SAOvB,OALAhE,EAAK+D,QACiBF,IAAlB7D,EAAK+D,GAAyBJ,EAAS,SAAY3D,EAAK+D,GAE5D/D,EAAKgE,QAA+BH,IAAnB7D,EAAKgE,GAA0B,KAAOhE,EAAKgE,GAErDhE,MAGUiE,wQA4BMhH,UAAMiH,cAAc,CACvCC,iBAAiB,4CAIb,CACJC,MAAOT,EAAU,UACjBxG,MAAOkF,EAAKG,MAAM6B,cAAgB,gFAG7BlH,GACL,IAAMqF,EAAQF,KAAKE,MACX9E,EAAa8E,EAAb9E,SAEF,UAAW8E,GACbF,KAAKgC,SAAS,CACVnH,UAIJO,GACAA,EAASP,sCAKb,OAAOmF,KAAKiC,MAAMH,wCAGZI,EAAW5G,GAAI,IAAA2E,EACsBD,KAAKE,MAQ1CiC,EANS,CACX9G,YAJiB4E,EACb5E,YAIJI,UALiBwE,EACAxE,UAKjBC,OANiBuE,EACWvE,QAQTwG,GAEnBC,GACAA,EAAQ7G,sCAIK,IAAZuB,EAAYyE,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAN,KACHI,EAAa1B,KAAKE,MAAlBwB,SAGR,OAFc1B,KAAKoC,cAENC,OAAO,SAAA3E,GAAI,OAAIA,GAAQA,EAAKgE,IAAa7E,0CAGT,IAArCL,EAAqC8E,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAhC,KAAMzG,EAA0ByG,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAlBtB,KAAKiC,MAAMpH,MAC9B6G,EAAa1B,KAAKE,MAAlBwB,SACR,OAAO7G,EAAMwH,OAAO,SAAA3E,GAAI,OAAIA,EAAKgE,IAAalF,0CAI9C,SAAA+B,EAAApF,SAAW6G,KAAKiC,MAAMpH,uCAIlB2B,GAAI,IAAA8F,EACsBtC,KAAKE,MAA3BuB,EADAa,EACAb,QAASC,EADTY,EACSZ,SACXa,EAAO,GACTC,EAAOxC,KAAKyC,QAAQjG,GAExB,IAAKgG,EAAM,OAAOD,EAElB,IAAKC,EAAKd,GAAW,OAAOa,EAI5B,IAFA,IACIG,EADAC,EAAiBH,EAAKd,IAElBgB,EAAQ1C,KAAKyC,QAAQE,MACzBJ,EAAKK,KAAKF,EAAMjB,IAChBkB,EAAiBD,EAAMhB,MAI3B,OAAOa,qCAGA7E,GAAM,IACL+D,EAAYzB,KAAKE,MAAjBuB,QACF5G,EAAQmF,KAAKoC,cACb5F,EAAKkB,EAAK+D,GACV1E,EAAMiD,KAAK6C,aAAarG,IAEjB,IAATO,IACAlC,EAAMkC,GAAOW,GAGjBsC,KAAK5E,SAASP,sCAGPiI,EAAIC,GAAI,IACPtB,EAAYzB,KAAKE,MAAjBuB,QAER,OAAOqB,EAAGrB,KAAasB,EAAGtB,mCAGtB/D,GAAkB,IAAZb,EAAYyE,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAAM0B,EACWhD,KAAKE,MAA9BwB,EADcsB,EACdtB,SADcsB,EACJC,WAClBvF,EAAO8D,EAAc9D,EAAMsC,KAAKE,OAEhC,IAAMrF,EAAQmF,KAAKoC,cAEnB1E,EAAKgE,GAAY7E,EAEjBhC,EAAM+H,KAAKlF,GAEXsC,KAAK5E,SAASP,sCAGP6C,EAAMb,GACba,EAAKwF,SAAU,EACfxF,EAAKyF,cAAe,EACpBnD,KAAKoD,QAAQ1F,EAAMb,2CAGPa,GACZA,EAAKyF,cAAe,EAEpBnD,KAAK5E,SAAS4E,KAAKoC,kDAGZ5F,GAAI,IAAA6G,EAAArD,KACHyB,EAAYzB,KAAKE,MAAjBuB,QAGF6B,EAFQtD,KAAKoC,cAEDC,OAAO,SAAA3E,GACrB,IAAI6F,EAAe7F,EAAK+D,KAAajF,EAEhC+G,IAEDA,EADaF,EAAKG,QAAQ9F,EAAK+D,IACXgC,QAAQjH,IAAO,GAGvC,OAAQ+G,IAGZvD,KAAK5E,SAASkI,wCAGL9G,EAAI3B,GAAO,IACZ4G,EAAYzB,KAAKE,MAAjBuB,QAER,OADA5G,EAAQA,GAASmF,KAAKoC,eACf,EAAAhB,EAAAjI,SAAU0B,EAAO,SAAA6C,GAAI,OAAIA,EAAK+D,KAAajF,oCAG9CA,GAAI,IACAiF,EAAYzB,KAAKE,MAAjBuB,QACF5G,EAAQmF,KAAKoC,cACnB,OAAO,EAAAjB,EAAAhI,SAAK0B,EAAO,SAAA6C,GAAI,OAAIA,GAAQA,EAAK+D,KAAajF,yCAG5CkB,EAAMgG,GAAO,IAAAC,EACQ3D,KAAKE,MAA3BuB,EADckC,EACdlC,QAASC,EADKiC,EACLjC,SACX7G,EAAQmF,KAAKoC,cACb5F,EAAKkH,EAAMjC,GAIXmC,EAAO5D,KAAK6C,aAAarG,GAC/B,GAAa,IAAToH,EAAY,CACZ,IAAMC,EAAWhJ,EAAM+I,EAAO,GAC9B,GACIC,EAASpC,KAAa/D,EAAK+D,IAC3BoC,EAASnC,KAAcgC,EAAMhC,GAE7B,OAKR,IAAMoC,EAAO9D,KAAK6C,aAAanF,EAAK+D,IAChCqC,GAAQ,GACRjJ,EAAMkJ,OAAOD,EAAM,GAGvBpG,EAAKgE,GAAYgC,EAAMhC,GAGvB,IAAM3E,EAAMiD,KAAK6C,aAAarG,EAAI3B,GAClCA,EAAMkJ,OAAOhH,EAAK,EAAGW,GAErBsC,KAAK5E,SAASP,uCAGN6C,EAAMmG,GAAU,IAAAG,EACMhE,KAAKE,MAA3BuB,EADgBuC,EAChBvC,QAASC,EADOsC,EACPtC,SACX7G,EAAQmF,KAAKoC,cACb5F,EAAKqH,EAASpC,GAIdmC,EAAO5D,KAAK6C,aAAarG,GAC/B,GAAIoH,IAAS/I,EAAMiE,OAAS,EAAG,CAC3B,IAAMmF,EAAWpJ,EAAM+I,EAAO,GAC9B,GACIK,EAASxC,KAAa/D,EAAK+D,IAC3BwC,EAASvC,KAAcmC,EAASnC,GAEhC,OAKR,IAAMoC,EAAO9D,KAAK6C,aAAanF,EAAK+D,IAChCqC,GAAQ,GACRjJ,EAAMkJ,OAAOD,EAAM,GAGvBpG,EAAKgE,GAAYmC,EAASnC,GAG1B,IAAM3E,GAAM,EAAAqE,EAAAjI,SAAU0B,EAAO,SAAA6C,GAAI,OAAIA,EAAK+D,KAAajF,IACvD3B,EAAMkJ,OAAOhH,EAAK,EAAGlC,EAAMkC,GAAMW,GAEjCsC,KAAK5E,SAASP,2CAId,IACMqJ,EADQlE,KAAKoC,cAEdnG,IAAI,SAAAyB,GAID,OAHIA,EAAKyF,qBACEzF,EAAKyF,aAETzF,IAEV2E,OAAO,SAAA3E,GAAI,OAAKA,EAAKwF,UAE1BlD,KAAK5E,SAAS8I,yCAGJxG,GAAkB,IAAZb,EAAYyE,UAAAxC,OAAA,QAAAyC,IAAAD,UAAA,GAAAA,UAAA,GAAN,KAAM6C,EACEnE,KAAKE,MAA3BuB,EADoB0C,EACpB1C,QAASC,EADWyC,EACXzC,SACXlF,EAAKkB,EAAK+D,GACV1E,EAAMiD,KAAK6C,aAAarG,GAE9B,GAAIkB,EAAKgE,KAAc7E,EAAK,OAAO,EASnC,IAAM0F,EAAc,MAAP1F,EAAc,GAAKmD,KAAKwD,QAAQ3G,GAC7C,GAAI0F,EAAKzD,SACqB,IAAtByD,EAAKkB,QAAQjH,GACb,OAAO,EAKf,GAAIK,EAAK,CACL,IAAMuH,EAAWpE,KAAK6C,aAAahG,GAC7BwH,EAASrE,KAAKsE,YAAYzH,GAEhC,GAAIwH,EAAOvF,OAAQ,CACf,IAAMyF,EAAYF,EAAO,GACnBG,EAAWH,EAAOA,EAAOvF,OAAS,GAOxC,OALI/B,EAAMqH,EACNpE,KAAKyE,YAAY/G,EAAM8G,GAEvBxE,KAAK0E,aAAahH,EAAM6G,IAErB,GAUf,OANa,IAATxH,IACAW,EAAKgE,GAAY7E,GAGrBmD,KAAK5E,SAAS4E,KAAKoC,gBAEZ,qCAGA1E,GAAM,IACL+D,EAAYzB,KAAKE,MAAjBuB,QACF5G,EAAQmF,KAAKoC,cACb5F,EAAKkB,EAAK+D,GACV1E,EAAMiD,KAAK6C,aAAarG,IAEjB,IAATO,GAAcW,EAAKwF,UACnBxF,EAAKwF,SAAU,SACRxF,EAAKwF,QACZrI,EAAMkC,GAAOW,EAEbsC,KAAK5E,SAASP,sCAIZ6C,GACN,QAASA,EAAKwF,2CAGPxF,GACP,QAASA,EAAKyF,gDAId,OAAO,EAAAwB,EAAAxL,SAAc6G,uCA0BhB,IACGG,EAAaH,KAAKE,MAAlBC,SAER,OACIvH,EAAAO,QAAAC,cAAC8H,EAAA/H,QAAayL,SAAd,CAAuBzJ,MAAO6E,KAAK6E,YAC9B1E,sDApWmBD,EAAO+B,GAInC,OAHI/B,EAAM/E,OACN+E,EAAM/E,MAAM2J,QAAQ,SAAApH,GAAI,OAAI8D,EAAc9D,EAAMwC,KAE7C,CACHrF,MAAO,UAAWqF,EAAQA,EAAM/E,MAAQ8G,EAAMpH,cAhBdF,UAAM8F,qCAA7BkB,cACE,CACfxG,MAAO4J,UAAUC,MACjBjD,aAAcgD,UAAUC,MACxBC,MAAOF,UAAUG,MAAM,CAAC,MAAO,WAAY,eAC3C9J,SAAU2J,UAAUI,KACpB9J,YAAa0J,UAAUI,KACvB1J,UAAWsJ,UAAUI,KACrBzJ,OAAQqJ,UAAUI,qBARLxD,iBAoBK,CAClBF,QAAS,KACTC,SAAU,MACVuB,WAAY,QACZgC,MAAO,WACP7J,SAAU,+NCrDlB,IAAAwF,EAAA/H,EAAAC,EAAA,MACAsM,EAAAvM,EAAAC,EAAA,gMCDAF,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,IACA8G,EAAA9G,EAAA,IACAmI,EAAApI,EAAAC,EAAA,KACAuM,EAAAxM,EAAAC,EAAA,KACAwM,EAAAzM,EAAAC,EAAA,IACAyM,EAAAzM,EAAA,IACAoI,EAAArI,EAAAC,EAAA,KAEMqF,sRAqCE,IAAMqH,EAAOxF,KADRC,EASDD,KAAKE,MATJuF,EAAAxF,EAGDpD,WAHC,IAAA4I,EAGK,KAHLA,EAIDhI,EAJCwC,EAIDxC,QACAiI,EALCzF,EAKDyF,MACAC,EANC1F,EAMD0F,KACAC,EAPC3F,EAOD2F,QACAzF,EARCF,EAQDE,SAGE0F,EAAWlL,UAAMmL,WAAW9E,WAC5B+E,EAAuBF,EAASE,qBAC9BlE,EAAoBlH,UAAMmL,WAAWC,GAArClE,iBAER,EAAAyD,EAAAnM,WACI0I,GAAgC,MAAPhF,EACzB,qCAjBC,IAAAmJ,GAoBuC,EAAApG,EAAAqG,SAAQ,CAChDC,OAAQL,EAASM,WAEjB1I,QAHgD,SAAAI,EAG9BO,GAAS,IAAjBV,EAAiBG,EAAjBH,KACN,OAAID,GACOA,EAAQC,EAAMU,IAM7BsH,MAXgD,SAW1CU,EAAYhI,GACd,IAAMiI,GAAY,EAAAtN,EAAAuN,aAAYd,GAE1BE,GACAA,EAAMU,EAAYhI,GAGtByH,EAASU,UAAU,wBAAnB,EAAAhK,EAAApD,SAAA,CACIqN,OAAQ3J,EACRwJ,YACAjI,WACGgI,IAGQhI,EAAQc,OAAO,CAAEuH,SAAS,KAGpCrI,EAAQX,WAIboI,EAASa,cAAcN,EAAW1I,KAAMb,IAG5C8I,KAnCgD,SAmC3CS,EAAYhI,GACb,IAAMiI,GAAY,EAAAtN,EAAAuN,aAAYd,GAO9B,GALIG,GACAA,EAAKS,EAAYhI,GAIjByD,EAAiB,CACjB,IAAM8E,EAAYd,EAASc,UAAUP,EAAW1I,MAEhDmI,EAASU,UAAU,UAAnB,EAAAhK,EAAApD,SAAA,CACIqN,OAAQ3J,EACRwJ,YACAO,OAAQD,EAAYE,aAAaC,eAC9BV,IAGPP,EAASkB,WAAWX,EAAW1I,QAIvCkI,QAAS,SAAAxH,GACL,IAAM4I,EAAMpB,EAAUA,EAAQxH,GAAW,GAEzC,SAAA7B,EAAApD,SAAA,CACIiF,UACAX,QAASW,EAAQX,UACjByB,OAAQd,EAAQc,SAChB+H,eAAgB7I,EAAQc,OAAO,CAAEuH,SAAS,KACvCO,MArFVE,GAAA,EAAAnM,EAAA5B,SAAA6M,EAAA,GAoBEmB,EApBFD,EAAA,GAoBkB7I,EApBlB6I,EAAA,GA0FDrM,EAAQgL,EAASuB,SAASvK,GAc9B,OAbKsK,EAAejI,SAChBrE,EAAQA,EAAMwH,OAAO,SAAA3E,GAAI,OAAKmI,EAASc,UAAUjJ,MAajD9E,EAAAO,QAAAC,cAAC2M,EAAqBnB,SAAtB,CACIzJ,MAAO,CACH0G,iBAAiB,IAGpB1B,GAAQ,EAAA5D,EAAApD,SAAA,GACFgO,EADE,CAELrH,MAAO+F,EACPxH,oBACAxD,mBAtJQF,UAAM8F,yBAA5BtC,cACiB,CACfgC,SAAU4E,UAAUI,KAAKkC,WACzBxK,IAAKkI,UAAUuC,IACfC,SAAUxC,UAAUyC,KACpB5B,QAASb,UAAUI,KACnB1H,QAASsH,UAAUI,KACnBO,MAAOX,UAAUI,KACjBQ,KAAMZ,UAAUI,qBARlBhH,iBAWoB,CAClBtB,IAAK,cAiJE,EAAAwI,EAAAlM,SAAUgF,yMCtKzBvF,EAAAC,EAAAC,EAAA,IACAC,EAAAD,EAAA,IACAmI,EAAApI,EAAAC,EAAA,KACAuM,EAAAxM,EAAAC,EAAA,KACA8G,EAAA9G,EAAA,IACAyM,EAAAzM,EAAA,IACAoI,EAAArI,EAAAC,EAAA,KACA2O,EAAA3O,EAAA,KAEMkG,mMAWE,IAAMwG,EAAOxF,KADAC,EAESD,KAAKE,MAArBxC,EAFOuC,EAEPvC,KAAMuH,EAFChF,EAEDgF,MACNY,EAAWlL,UAAMmL,WAAW9E,WAMlC,OAFAiE,EAAQA,GAASY,EAAS3F,MAAM+E,MAEzB,CACHiB,OAAQL,EAASM,WACjB1I,QAFG,SAAAI,EAEyBO,GAAS,IAArBsJ,EAAqB7J,EAA3BH,KACN,OAAOmI,EAASc,UAAUjJ,KAEnBmI,EAAS8B,WAAWjK,EAAMgK,IAGrChC,MARG,SAAA1I,EAQuBoB,GAAS,IAArBsJ,EAAqB1K,EAA3BU,KAQJ,GAPAmI,EAASU,UAAU,kBAAmB,CAClCC,OAAQ9I,EACRU,UACAV,KAAMgK,IAGKtJ,EAAQc,OAAO,CAAEuH,SAAS,KAKpCrI,EAAQX,UAAb,CAIA,IAAMmK,EAAaxJ,EAAQyJ,kBAIrBC,GAHY,EAAA/O,EAAAuN,aAAYd,GAGCuC,wBAEzBC,KAAaF,EAAa5J,MAAQ4J,EAAahM,MAAQ,GAEvDmM,KACFH,EAAaI,OACbJ,EAAajM,OAAS,GAGtBsM,GAAqB,EAEzB,OAAQlD,GACJ,IAAK,WACDkD,EAAqBP,EAAWQ,GAAKH,EACrC,MACJ,IAAK,aACDE,EAAqBP,EAAWS,GAAKL,EACrC,MACJ,IAAK,MACDG,GAAqB,EAAAV,EAAAa,cACjBR,EAAaxI,KACbwI,EAAa7J,IACb6J,EAAahM,MACbgM,EAAajM,OACb+L,EAAWS,EACXT,EAAWQ,GAEf,MACJ,QAEID,EAAqBP,EAAWQ,GAAKH,EAGzCE,EACAtC,EAASnB,aAAagD,EAAUhK,GAEhCmI,EAASpB,YAAYiD,EAAUhK,KAIvCkI,QApEG,SAoEKxH,GACJ,MAAO,CACHA,UACAc,OAAQd,EAAQc,SAChB+H,eAAgB7I,EAAQc,OAAO,CAAEuH,SAAS,IAC1ChJ,SAASoI,EAASc,UAAUjJ,IAEtBU,EAAQX,sDAO1B,IAAM+H,EAAOxF,KADAsC,EAEiCtC,KAAKE,MAA3CxC,EAFK4E,EAEL5E,KAAM6K,EAFDjG,EAECiG,QAASC,EAFVlG,EAEUkG,UAAWC,EAFrBnG,EAEqBmG,QAC5B5C,EAAWlL,UAAMmL,WAAW9E,WAElC,MAAO,CACHtD,KAAM,CACFgL,KAAM7C,EAASM,YAGnBoC,QALG,SAKKnK,GACJ,OAAImK,GACOA,EAAQnK,IAKvBuK,MAZG,SAYGvK,GACF,IAAMwK,GAAM,EAAA7P,EAAAuN,aAAYd,GAoBxB,OAlBIgD,GACAA,EACI,CACI9K,OACAkL,OAEJxK,GAIRyH,EAASU,UAAU,cAAe,CAC9B7I,OACAkL,MACAhC,OAAQE,gBAGZjB,EAASgD,gBAAgBnL,GAElB,CACHA,OACAkL,QAIRE,IAvCG,SAuCC1C,EAAYhI,GACRqK,GACAA,EAAQrC,EAAYhI,GAGxByH,EAASU,UAAU,aAAnB,EAAAhK,EAAApD,SAAA,GACOiN,EADP,CAEIQ,OAAQE,iBAIZjB,EAASkD,mDAYZ,IAAA/F,EACsBhD,KAAKE,MAAxBC,EADH6C,EACG7C,SAAUzC,EADbsF,EACatF,KACZmI,EAAWlL,UAAMmL,WAAW9E,WAF7BgF,GAI2C,EAAApG,EAAAqG,SAC5CjG,KAAKgJ,kBALJ9B,GAAA,EAAAnM,EAAA5B,SAAA6M,EAAA,GAIEiD,EAJF/B,EAAA,GAIsB7I,EAJtB6I,EAAA,GAAAgC,GAYD,EAAAtJ,EAAAuJ,SAAQnJ,KAAKoJ,kBAZZC,GAAA,EAAAtO,EAAA5B,SAAA+P,EAAA,GASDI,EATCD,EAAA,GAUDpM,EAVCoM,EAAA,GAWDE,EAXCF,EAAA,GAmBL,OAAOlJ,GAAQ,EAAA5D,EAAApD,SAAA,GACR8P,EACAK,EAFQ,CAGX5L,OACA0B,MAAOyG,EAASc,UAAUjJ,GAC1BI,WAAY+H,EAAS/H,WAAWJ,GAChCW,oBACApB,oBACAgC,mBAbuB,SAAA2J,GACvBvK,EAAkBuK,GAClB3L,EAAkB2L,IAYlBW,+BAnMW5O,UAAM8F,yBAAvBzB,cACiB,CACfmB,SAAU4E,UAAUI,KAAKkC,WACzB3J,KAAMqH,UAAUyE,OAAOnC,WACvBpC,MAAOF,UAAUG,MAAM,CAAC,MAAO,WAAY,eAC3CqD,QAASxD,UAAUI,KACnBqD,UAAWzD,UAAUI,KACrBsD,QAAS1D,UAAUI,cAiMZ,EAAAE,EAAAlM,SAAU6F,iDCtMlB,SAASyK,EAAiBpB,EAAGD,EAAGtM,EAAOD,EAAQ6N,EAAIC,GACtD,IAAMC,IACAxB,EAAIvM,GAAU6N,EAAKtB,EAAIsB,EAAKtB,GAAKC,EAAIvM,IAAUsM,EAAIvM,GAAUwM,IAC9DA,EAAIvM,EAAQuM,GACXwB,GACDzB,EAAIsB,GAAMtB,EAAIvM,GAAU6N,GAAMtB,EAAIvM,IAAWwM,EAAIvM,GAASsM,EAAIC,IAC9DA,EAAIvM,EAAQuM,GAEjB,GAAIsB,EAAKC,GAAQD,EAAKE,EAClB,OAAO,EACJ,GAAIF,EAAKC,GAAQD,EAAKE,EACzB,OAAO,EACJ,GAAIF,EAAKC,GAAQD,EAAKE,EACzB,OAAO,EACJ,GAAIF,EAAKC,GAAQD,EAAKE,EACzB,OAAO,EAGP,IAAMC,EAAWzB,EAAIvM,EAAQ,EACvBiO,EAAW3B,EAAIvM,EAAS,EAE9B,OAAI6N,EAAKI,GAAYH,EAAKI,EAEf,EACAL,EAAKI,GAAYH,EAAKI,EAEtB,EACAL,EAAKI,GAAYH,EAAKI,EAEtB,EACAL,EAAKI,GAAYH,EAAKI,EAEtB,GAGC,sEAKb,WACH,IAAMzG,EAAMmG,EAAgBO,WAAhB,EAAA1I,WAEZ,OAAe,IAARgC,GAAqB,IAARA,6LCtDxB1K,EAAAC,EAAAC,EAAA,IACAmI,EAAApI,EAAAC,EAAA,KACAC,EAAAD,EAAA,IACA8G,EAAA9G,EAAA,IAEAuM,GADAvM,EAAA,IACAD,EAAAC,EAAA,MACAoI,EAAArI,EAAAC,EAAA,KACAyM,EAAAzM,EAAA,IAEMqD,2LASO,IAAA8D,EAODD,KAAKE,MALLC,EAFCF,EAEDE,SACA7D,EAHC2D,EAGD3D,YACAiM,EAJCtI,EAIDsI,QACAC,EALCvI,EAKDuI,UACAC,EANCxI,EAMDwI,QAEEjD,EAAOxF,KACP6F,EAAWlL,UAAMmL,WAAW9E,WAT7BkI,GAWyD,EAAAtJ,EAAAuJ,SAAQ,CAClEzL,KAAM,CACFgL,KAAM7C,EAASM,YAGnBoC,QALkE,SAK1DnK,GACJ,OAAImK,GACOA,EAAQnK,IAKvBuK,MAZkE,SAY5DvK,GACF,IAAMV,EAAOpB,IACPsM,GAAM,EAAA7P,EAAAuN,aAAYd,GAoBxB,OAlBIgD,GACAA,EACI,CACI9K,OACAkL,OAEJxK,GAIRyH,EAASU,UAAU,cAAe,CAC9B7I,OACAkL,MACAhC,OAAQC,eAGZhB,EAASoE,WAAWvM,GAEb,CACHA,OACAkL,QAIRE,IAxCkE,SAwC9D1C,EAAYhI,GACRqK,GACAA,EAAQrC,EAAYhI,GAGxByH,EAASU,UAAU,aAAnB,EAAAhK,EAAApD,SAAA,GACOiN,EADP,CAEIQ,OAAQC,gBAGZhB,EAASkD,iBAGbnD,QArDkE,SAqD1DxH,GACJ,MAAO,CACHA,UACAN,WAAYM,EAAQN,iBAnE3BuL,GAAA,EAAAtO,EAAA5B,SAAA+P,EAAA,GAWEgB,EAXFb,EAAA,GAWgBpM,EAXhBoM,EAAA,GAWmCE,EAXnCF,EAAA,GAwEL,OAAOlJ,GAAQ,EAAA5D,EAAApD,SAAA,GACR+Q,EADQ,CAEXjN,oBACAsM,+BApFa5O,UAAM8F,yBAAzBtE,cACiB,CACfgE,SAAU4E,UAAUI,KAAKkC,WACzB/K,YAAayI,UAAUI,KAAKkC,WAC5BkB,QAASxD,UAAUI,KACnBqD,UAAWzD,UAAUI,KACrBsD,QAAS1D,UAAUI,cAmFZ,EAAAE,EAAAlM,SAAUgD,4HCjGzByD,GADA/G,EAAAC,EAAA,IACAA,EAAA,eAEe,SAAA+E,GAAkB,IAAfsC,EAAetC,EAAfsC,SACRD,GAAQ,EAAAN,EAAAuK,cAAa,SAAA/L,GACvB,IAAMgI,EAAahI,EAAQqE,UAC3B,MAAO,IAAAlG,EAAApD,SAAA,CAECuP,KAAMtK,EAAQgM,cACdtM,WAAYM,EAAQN,aACpBuM,oBAAqBjM,EAAQkM,yBAC7BC,0BAA2BnM,EAAQoM,+BACnCC,aAAcrM,EAAQyJ,kBACtB6C,4BAA6BtM,EAAQuM,iCACrCC,mBAAoBxM,EAAQyM,yBACzBzE,GAEPhI,KASR,MAJwB,mBAAb+B,EACDA,EAASD,EAAM,GAAIA,EAAM,IACzBC,0FCrBC,SAAAtC,GAA2D,IAAAiN,EAAAjN,EAA9BhB,WAA8B,IAAAiO,EAAxB,KAAwBA,EAAlBzN,EAAkBQ,EAAlBR,MAAOI,EAAWI,EAAXJ,QAC3D,OACI7E,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAKA,EAAKY,QAASA,GAC7B,SAAAT,GAAoD,IAAjDnC,EAAiDmC,EAAjDnC,MAAgB4C,GAAiCT,EAA1CoB,QAA0CpB,EAAjCS,SAASY,EAAwBrB,EAAxBqB,kBACzB,OACIzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHgD,OAAQlB,EACF,kBACA,iBACN1B,KAAM,IAGVnD,EAAAO,QAAAC,cAAA,UAAKiE,GACLzE,EAAAO,QAAAC,cAAA,WACCyB,EAAMoB,IAAI,SAAAyB,GACP,OACI9E,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAU5C,IAAKsB,EAAKlB,GAAIkB,KAAMA,GACzB,SAAAqN,GAMK,IALF9L,EAKE8L,EALF9L,mBACAnB,EAIEiN,EAJFjN,WAIEiN,EAHF5L,QAGE4L,EAFF7L,OAEE6L,EADF3L,MAEA,OACIxG,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACLtD,MAAO,CACH+D,QAAS5B,EACH,GACA,EACNV,QAAS,GACT4N,OAAQ,EACRjN,WAAY,UACZY,OAAQ,sBAGXjB,EAAKL,MAZV,IAYkBK,EAAKlB,GAZvB,aA9B5C,IAAA5D,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,2FCCe,SAAA+E,GAAwD,IAAlBR,EAAkBQ,EAAlBR,MAAOI,EAAWI,EAAXJ,QACxD,OACI7E,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAI,SAASY,QAASA,GAChC,SAAAT,GAAoD,IAAjDnC,EAAiDmC,EAAjDnC,MAAgB4C,GAAiCT,EAA1CoB,QAA0CpB,EAAjCS,SAASY,EAAwBrB,EAAxBqB,kBACzB,OACIzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHgD,OAAQlB,EACF,kBACA,iBACN1B,KAAM,IAGVnD,EAAAO,QAAAC,cAAA,UAAKiE,GACLzE,EAAAO,QAAAC,cAAA,WACCyB,EAAMoB,IAAI,SAAAyB,GACP,OACI9E,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAU5C,IAAKsB,EAAKlB,GAAIkB,KAAMA,GACzB,SAAAqN,GAMK,IALF9L,EAKE8L,EALF9L,mBACAnB,EAIEiN,EAJFjN,WAIEiN,EAHF5L,QAGE4L,EAFF7L,OAEE6L,EADF3L,MAEA,OACIxG,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACLtD,MAAO,CACH+D,QAAS5B,EACH,GACA,EACNV,QAAS,GACT4N,OAAQ,EACRjN,WAAY,UACZY,OAAQ,sBAGXjB,EAAKL,MAZV,IAYkBK,EAAKlB,GAZvB,SAoBpB5D,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAI,SACd,SAAAoO,GAKK,IAJFpQ,EAIEoQ,EAJFpQ,MAEA4C,GAEEwN,EAHF7M,QAGE6M,EAFFxN,SACAY,EACE4M,EADF5M,kBAEA,OACIzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHE,OAAQ,IACRqP,SAAU,OACVvM,OAAQlB,EACF,kBACA,iBACN1B,KAAM,IAGVnD,EAAAO,QAAAC,cAAA,mBACAR,EAAAO,QAAAC,cAAA,WACCyB,EAAMoB,IAAI,SAAAyB,GACP,OACI9E,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CACI5C,IAAKsB,EAAKlB,GACVkB,KAAMA,GAEL,SAAAyN,GAMK,IALFlM,EAKEkM,EALFlM,mBACAnB,EAIEqN,EAJFrN,WAIEqN,EAHFhM,QAGEgM,EAFFjM,OAEEiM,EADF/L,MAEA,OACIxG,EAAAO,QAAAC,cAAA,OACI8D,IACI+B,EAEJtD,MAAO,CACH+D,QAAS5B,EACH,GACA,EACNV,QAAS,GACT4N,OAAQ,EACRjN,WACI,UACJY,OACI,sBAGPjB,EAAKL,MAhBV,IAiBKK,EAAKlB,GAjBV,gBApF5D,IAAA5D,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,kGCDA,IAAAsS,EAAAvS,EAAAC,EAAA,MACAuS,EAAAxS,EAAAC,EAAA,MACAwS,EAAAzS,EAAAC,EAAA,MACAyS,EAAA1S,EAAAC,EAAA,MACA0S,EAAA3S,EAAAC,EAAA,QAEe,CACX2S,UACAC,UACAC,UACAC,UACAC,oHCXW,CACXxP,MAAO,gBACPgB,MAAO,mGCFI,CACXhB,MAAO,oBACPgB,MAAO,qGCFI,CACXhB,MAAO,kBACPgB,MAAO,qGCFI,CACXhB,MAAO,oBACPgB,MAAO,oGCFI,CACXhB,MAAO,iBACPgB,MAAO,qGCGX,mBALAzE,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,IAEMgT,EAAU,GAEPjN,EAAI,EAAGA,EAAI,GAAIA,IACpBiN,EAAQlJ,KAAK,CACTpG,GAAIqC,EAAI,EACRxB,MAAK,GAAAmC,OAAKX,EAAI,EAAT,YAIb,SAASkN,EAATlO,GAA4B,IAARH,EAAQG,EAARH,KAChB,OACI9E,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAUtB,KAAMA,GACX,SAAAV,GAAwC,IAArCiC,EAAqCjC,EAArCiC,mBAAoBnB,EAAiBd,EAAjBc,WACpB,OACIlF,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACLtD,MAAO,CACH+D,QAAS5B,EAAa,GAAM,EAC5BV,QAAS,GACT4N,OAAQ,EACRjN,WAAY,UACZY,OAAQ,sBAGXjB,EAAKL,mBAQf,WAAM,IAAA3C,EACSC,UAAMC,SAASkR,GADxBhR,GAAA,EAAAC,EAAA5B,SAAAuB,EAAA,GACVS,EADUL,EAAA,GACHM,EADGN,EAAA,GAGjB,OACIlC,EAAAO,QAAAC,cAACJ,EAAAkC,qBAAD,CAAsBC,MAAOA,EAAOC,SAAUA,GAC1CxC,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,KACK,SAAA4M,GAAA,IAAGlQ,EAAHkQ,EAAGlQ,MAAyBwD,GAA5B0M,EAAU3M,QAAV2M,EAAmBtN,QAAnBsN,EAA4B1M,mBAA5B,OACGzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHgD,OAAQ,iBACRqN,aAAc,EACd5O,QAAS,EACTtB,MAAO,IACPkP,OAAQ,YACRnP,OAAQ,MACRqP,SAAU,SAGbrQ,EAAMoB,IAAI,SAAAyB,GAAI,OACX9E,EAAAO,QAAAC,cAAC2S,EAAD,CAAU3P,IAAKsB,EAAKlB,GAAIkB,KAAMA,yGClD1D,yCALA9E,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,IAEMgT,EAAU,GAEPjN,EAAI,EAAGA,EAAI,GAAIA,IACpBiN,EAAQlJ,KAAK,CACTpG,GAAIqC,EAAI,EACRxB,MAAK,GAAAmC,OAAKX,EAAI,EAAT,YAIb,SAASkN,EAATlO,GAAmC,IAAfH,EAAeG,EAAfH,KAAMZ,EAASe,EAATf,MACtB,OACIlE,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAUtB,KAAMA,GACX,SAAAV,GAAwC,IAAA+N,EAArC9L,EAAqCjC,EAArCiC,mBAAoBnB,EAAiBd,EAAjBc,WACpB,OACIlF,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACLtD,OAAKoP,EAAA,CACD/M,SAAU,WACVqB,WACI,6CAHH,EAAA4M,EAAA9S,SAAA4R,EAAA,WAIS,aAJT,EAAAkB,EAAA9S,SAAA4R,EAAA,OAKK,IALL,EAAAkB,EAAA9S,SAAA4R,EAAA,QAMM,IANN,EAAAkB,EAAA9S,SAAA4R,EAAA,4BAAAvL,OAO0B,GAAY1C,EAPtC,WAAAmP,EAAA9S,SAAA4R,EAAA,SAQOjN,EAAa,EAAI,IARxB,EAAAmO,EAAA9S,SAAA4R,EAAA,UASQjN,EAAa,GAAM,IAT3B,EAAAmO,EAAA9S,SAAA4R,EAAA,UAUQ,KAVR,EAAAkB,EAAA9S,SAAA4R,EAAA,SAWO,IAXP,EAAAkB,EAAA9S,SAAA4R,EAAA,aAYW,YAZX,EAAAkB,EAAA9S,SAAA4R,EAAA,SAaO,qBAbPA,IAgBJrN,EAAKL,SAQ9B,SAAS6O,EAATjB,GAAoE,IAA9CpQ,EAA8CoQ,EAA9CpQ,MAAOuD,EAAuC6M,EAAvC7M,QAASX,EAA8BwN,EAA9BxN,QAASY,EAAqB4M,EAArB5M,kBACrCC,GAAI,EAAAC,EAAApF,SAAO0B,GACjByD,EAAKE,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEjC,GAAKkC,EAAElC,KAE7B,IAAM2P,EAAkB,SAAAzO,GACpB,IAAK,IAAImB,EAAI,EAAGA,EAAIhE,EAAMiE,OAAQD,IAAK,CAEnC,GADgBhE,EAAMgE,GACVrC,KAAOkB,EAAKlB,GAAI,OAAOqC,IAI3C,OACIjG,EAAAO,QAAAC,cAAA,OACI8D,IAAK,CAAErC,QAAOuD,UAASX,UAASY,qBAChC1C,MAAO,CACHqC,SAAU,WACVW,OAAQ,iBACRqN,aAAc,EACd5O,QAAS,EACTtB,MAAO,IACPkP,OAAQ,YACRnP,OAAQ,MACRqP,SAAU,SAGb5M,EAAKrC,IAAI,SAAAyB,GAAI,OACV9E,EAAAO,QAAAC,cAAC2S,EAAD,CACI3P,IAAKsB,EAAKlB,GACVM,MAAOqP,EAAgBzO,GACvBA,KAAMA,iBAOX,WAAM,IAAAhD,EACSC,UAAMC,SAASkR,GADxBhR,GAAA,EAAAC,EAAA5B,SAAAuB,EAAA,GACVS,EADUL,EAAA,GACHM,EADGN,EAAA,GAGjB,OACIlC,EAAAO,QAAAC,cAACJ,EAAAkC,qBAAD,CAAsBC,MAAOA,EAAOC,SAAUA,GAC1CxC,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,KAAgB+N,mGCpE5B,2CAhBAtT,EAAAC,EAAAC,EAAA,IACAE,EAAAF,EAAA,IAaMgT,EAAU,GAEPjN,EAAI,EAAGA,EAAI,EAAGA,IACnBiN,EAAQlJ,KAAK,CACT/F,IAAK,IACLL,GAAIqC,EAAI,EACRxB,MAAK,GAAAmC,OAAKX,EAAI,EAAT,YAIb,IAAK,IAAIA,EAAI,EAAGA,EAAI,GAAIA,IACpBiN,EAAQlJ,KAAK,CACT/F,IAAK,IACLL,GAAIqC,EAAI,EACRxB,MAAK,GAAAmC,OAAKX,EAAI,EAAT,YAIb,SAASkN,EAATlO,GAA4B,IAARH,EAAQG,EAARH,KAChB,OACI9E,EAAAO,QAAAC,cAACJ,EAAAgG,SAAD,CAAUtB,KAAMA,GACX,SAAAV,GAA4D,IAAzDiC,EAAyDjC,EAAzDiC,mBAAoBsK,EAAqCvM,EAArCuM,mBAAoBzL,EAAiBd,EAAjBc,WAIxC,OAFAyL,GAAmB,EAAAvQ,EAAAoT,kBAGfxT,EAAAO,QAAAC,cAAA,OACI8D,IAAK+B,EACLtD,MAAO,CACH+D,QAAS5B,EAAa,GAAM,EAC5BV,QAAS,GACT4N,OAAQ,EACRjN,WAAY,UACZY,OAAQ,sBAGXjB,EAAKL,SAQ9B,SAASgP,EAATtB,GAA6D,IAApCnC,EAAoCmC,EAApCnC,IAAK8B,EAA+BK,EAA/BL,4BAA+BhQ,EACjCC,UAAMC,SAAS,MADkBE,GAAA,EAAAC,EAAA5B,SAAAuB,EAAA,GAClD4I,EADkDxI,EAAA,GAC7CwR,EAD6CxR,EAAA,GA4BzD,GAzBAH,UAAM4R,UAAU,WACZ,IAAMC,EAAY5D,EAAI4D,WAAU,GAC1BC,EAAO7D,EAAIb,wBAkBjB,OAhBAuE,EAAS,CACLG,OACAD,cAGJA,EAAU7Q,MAAMqC,SAAW,QAE3BwO,EAAU7Q,MAAM+Q,cAAgB,OAChCF,EAAU7Q,MAAM+D,QAAU,EAC1B8M,EAAU7Q,MAAM2D,KAAOmN,EAAKnN,KAAO,KACnCkN,EAAU7Q,MAAMsC,IAAMwO,EAAKxO,IAAM,KACjCuO,EAAU7Q,MAAMgR,UAAY,aAC5BH,EAAU7Q,MAAMG,MAAQ2Q,EAAK3Q,MAAQ,KACrC0Q,EAAU7Q,MAAME,OAAS4Q,EAAK5Q,OAAS,KAEvCxC,SAASuT,KAAKC,YAAYL,GACnB,WACHnT,SAASuT,KAAKE,YAAYN,KAE/B,IAEClJ,EAAK,KACGkJ,EAAoBlJ,EAApBkJ,UAAWC,EAASnJ,EAATmJ,KACf/B,IACA8B,EAAU7Q,MAAM2D,KACZmN,EAAKnN,KAAOoL,EAA4BrC,EAAI,KAChDmE,EAAU7Q,MAAMsC,IACZwO,EAAKxO,IAAMyM,EAA4BtC,EAAI,MAIvD,OAAO,eAGI,WAAM,IAAA2E,EACSpS,UAAMC,SAASkR,GADxBkB,GAAA,EAAAjS,EAAA5B,SAAA4T,EAAA,GACV5R,EADU6R,EAAA,GACH5R,EADG4R,EAAA,GAGjB,OACIpU,EAAAO,QAAAC,cAACJ,EAAAkC,qBAAD,CAAsBC,MAAOA,EAAOC,SAAUA,GAC1CxC,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHqC,SAAU,WACVpC,QAAS,OACToP,OAAQ,YACRnP,OAAQ,MACRC,MAAO,MAGXlD,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAI,KACd,SAAAoO,GAAA,IAAGpQ,EAAHoQ,EAAGpQ,MAAyBwD,GAA5B4M,EAAU7M,QAAV6M,EAAmBxN,QAAnBwN,EAA4B5M,mBAA5B,OACGzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHI,KAAM,IACN4C,OAAQ,iBACRqN,aAAc,EACd5O,QAAS,EACT8N,SAAU,SAGbrQ,EAAMoB,IAAI,SAAAyB,GAAI,OACX9E,EAAAO,QAAAC,cAAC2S,EAAD,CAAU3P,IAAKsB,EAAKlB,GAAIkB,KAAMA,SAK9C9E,EAAAO,QAAAC,cAAA,OACIuC,MAAO,CACHG,MAAO,MAGflD,EAAAO,QAAAC,cAACJ,EAAAmF,cAAD,CAAetB,IAAI,KACd,SAAAsO,GAAA,IAAGtQ,EAAHsQ,EAAGtQ,MAAyBwD,GAA5B8M,EAAU/M,QAAV+M,EAAmB1N,QAAnB0N,EAA4B9M,mBAA5B,OACGzF,EAAAO,QAAAC,cAAA,OACI8D,IAAKmB,EACL1C,MAAO,CACHI,KAAM,IACN4C,OAAQ,iBACRqN,aAAc,EACd5O,QAAS,EACT8N,SAAU,SAGbrQ,EAAMoB,IAAI,SAAAyB,GAAI,OACX9E,EAAAO,QAAAC,cAAC2S,EAAD,CAAU3P,IAAKsB,EAAKlB,GAAIkB,KAAMA,SAK9C9E,EAAAO,QAAAC,cAACJ,EAAAyB,UAAD,KACK,SAAAwS,GAAmC,IAAhCnP,EAAgCmP,EAAhCnP,WAAY8K,EAAoBqE,EAApBrE,IAAQ1I,GAAY,EAAAG,EAAAlH,SAAA8T,EAAA,sBAChC,OAAKnP,GAAe8K,EACbhQ,EAAAO,QAAAC,cAACiT,GAAD,EAAA9L,EAAApH,SAAA,CAAeyP,IAAKA,GAAS1I,IADJ,6HC5JxD,MAAArH,EAAAC,EAAA,IAEe6B,QAAMiH,cAAc,gICFhB,oBACC","file":"js/index.ce1e4b91.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./src\";\r\n\r\n// import AnimateContainer from \"./AnimateContainer\";\r\n\r\n// import DropContainerDemo from \"./DropContainerDemo\";\r\n// import DropContainerWithChildDemo from \"./DropContainerWithChildDemo\";\r\n\r\n// import { WebDesignDndProvider, WidgetItem, DragLayer } from \"../src\";\r\n\r\n// import widgets from \"./widgets\";\r\n\r\n// function randomStr() {\r\n//     return Math.random()\r\n//         .toString(16)\r\n//         .slice(2, 8);\r\n// }\r\n\r\n// let idx = 1;\r\n\r\n// function DragLayerDemo() {\r\n//     return (\r\n//         <DragLayer>\r\n//             {({ isDragging }) =>\r\n//                 !isDragging ? null : (\r\n//                     <div\r\n//                         style={{\r\n//                             padding: 5,\r\n//                             background: \"rgba(0,0,0,.2)\",\r\n//                             position: \"fixed\",\r\n//                             top: 0,\r\n//                             right: 0\r\n//                         }}\r\n//                     >\r\n//                         dragLayer: isDragging...\r\n//                     </div>\r\n//                 )\r\n//             }\r\n//         </DragLayer>\r\n//     );\r\n// }\r\n\r\n// function App() {\r\n//     const [metadata, onMetadataChange] = React.useState({\r\n//         items: []\r\n//     });\r\n\r\n//     function onChange(items) {\r\n//         onMetadataChange({\r\n//             items\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <div>\r\n//             <WebDesignDndProvider\r\n//                 // 受控\r\n//                 value={metadata.items}\r\n//                 onChange={onChange}\r\n//                 onDragStart={ev => {\r\n//                     console.log(\"onDragStart\", ev);\r\n//                 }}\r\n//                 onDragEnd={ev => {\r\n//                     console.log(\"onDragEnd\", ev);\r\n//                 }}\r\n//                 onDrop={ev => {\r\n//                     console.log(\"onDrop\", ev);\r\n//                 }}\r\n//             >\r\n//                 <div\r\n//                     style={{\r\n//                         display: \"flex\",\r\n//                         position: \"fixed\",\r\n//                         top: 0,\r\n//                         left: 0,\r\n//                         right: 0,\r\n//                         bottom: 0\r\n//                     }}\r\n//                 >\r\n//                     <div\r\n//                         style={{\r\n//                             width: 240,\r\n//                             flex: \"none\"\r\n//                         }}\r\n//                     >\r\n//                         {widgets.map(widget => {\r\n//                             return (\r\n//                                 <WidgetItem\r\n//                                     key={widget.xtype}\r\n//                                     // disabled={widget.xtype === \"EX_URL_FIELD\"}\r\n//                                     getInstance={() => ({\r\n//                                         ...widget,\r\n//                                         id: randomStr(),\r\n//                                         pid: null,\r\n//                                         index: idx++\r\n//                                     })}\r\n//                                 >\r\n//                                     {({ connectDragTarget }) => (\r\n//                                         <div\r\n//                                             ref={connectDragTarget}\r\n//                                             style={{\r\n//                                                 height: 32,\r\n//                                                 lineHeight: `32px`,\r\n//                                                 padding: \"0 20px\"\r\n//                                             }}\r\n//                                         >\r\n//                                             {widget.title}\r\n//                                         </div>\r\n//                                     )}\r\n//                                 </WidgetItem>\r\n//                             );\r\n//                         })}\r\n//                     </div>\r\n//                     <DropContainerDemo title=\"A\" />\r\n//                     <DropContainerDemo pid=\"b\" title=\"B\" />\r\n//                     <AnimateContainer />\r\n\r\n//                     <DropContainerWithChildDemo title=\"Parent\" />\r\n//                     <DropContainerDemo\r\n//                         pid=\"d\"\r\n//                         title=\"D\"\r\n//                         canDrop={item => {\r\n//                             return item.xtype === \"EX_TEXTAREA_FIELD\";\r\n//                         }}\r\n//                     />\r\n//                     <DragLayerDemo />\r\n//                 </div>\r\n//             </WebDesignDndProvider>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","import React from \"react\";\r\n\r\nimport { HashRouter, Switch, Route, NavLink, Redirect } from \"react-router-dom\";\r\n\r\nimport Basic from \"./basic\";\r\nimport SortList from \"./sort-list\";\r\nimport SortListAnimation from \"./sort-list-animation\";\r\nimport DragLayer from \"./drag-layer\";\r\n\r\nimport \"./style/index.scss\";\r\n\r\nexport default () => {\r\n    return (\r\n        <HashRouter>\r\n            <div className=\"app-demo\">\r\n                <div className=\"left-nav\">\r\n                    <NavLink to=\"/basic\">基本功能</NavLink>\r\n                    <NavLink to=\"/sort-list\">列表排序</NavLink>\r\n                    <NavLink to=\"/sort-list-animation\">\r\n                        列表排序(动画效果)\r\n                    </NavLink>\r\n                    <NavLink to=\"/drag-layer\">自定义推拽层</NavLink>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/\"\r\n                            exact\r\n                            render={() => <Redirect to=\"/basic\" />}\r\n                        />\r\n                        <Route path=\"/basic\" component={Basic} />\r\n                        <Route path=\"/sort-list\" component={SortList} />\r\n                        <Route\r\n                            path=\"/sort-list-animation\"\r\n                            component={SortListAnimation}\r\n                        />\r\n                        <Route path=\"/drag-layer\" component={DragLayer} />\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n};\r\n","import React from \"react\";\r\n\r\nimport AnimateContainer from \"./AnimateContainer\";\r\n\r\nimport DropContainerDemo from \"./DropContainerDemo\";\r\nimport DropContainerWithChildDemo from \"./DropContainerWithChildDemo\";\r\n\r\nimport { WebDesignDndProvider, WidgetItem, DragLayer } from \"@/src\";\r\n\r\nimport widgets from \"./widgets\";\r\n\r\nfunction randomStr() {\r\n    return Math.random()\r\n        .toString(16)\r\n        .slice(2, 8);\r\n}\r\n\r\nlet idx = 1;\r\n\r\nfunction DragLayerDemo() {\r\n    return (\r\n        <DragLayer>\r\n            {({ isDragging }) =>\r\n                !isDragging ? null : (\r\n                    <div\r\n                        style={{\r\n                            padding: 5,\r\n                            background: \"rgba(0,0,0,.2)\",\r\n                            position: \"fixed\",\r\n                            top: 0,\r\n                            right: 0\r\n                        }}\r\n                    >\r\n                        dragLayer: isDragging...\r\n                    </div>\r\n                )\r\n            }\r\n        </DragLayer>\r\n    );\r\n}\r\n\r\nexport default function App() {\r\n    const [metadata, onMetadataChange] = React.useState({\r\n        items: []\r\n    });\r\n\r\n    function onChange(items) {\r\n        onMetadataChange({\r\n            items\r\n        });\r\n    }\r\n\r\n    return (\r\n        <WebDesignDndProvider\r\n            // 受控\r\n            value={metadata.items}\r\n            onChange={onChange}\r\n            onDragStart={ev => {\r\n                console.log(\"onDragStart\", ev);\r\n            }}\r\n            onDragEnd={ev => {\r\n                console.log(\"onDragEnd\", ev);\r\n            }}\r\n            onDrop={ev => {\r\n                console.log(\"onDrop\", ev);\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    height: \"100%\"\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: 240,\r\n                        flex: \"none\"\r\n                    }}\r\n                >\r\n                    {widgets.map(widget => {\r\n                        return (\r\n                            <WidgetItem\r\n                                key={widget.xtype}\r\n                                // disabled={widget.xtype === \"EX_URL_FIELD\"}\r\n                                getInstance={() => ({\r\n                                    ...widget,\r\n                                    id: randomStr(),\r\n                                    pid: null,\r\n                                    index: idx++\r\n                                })}\r\n                            >\r\n                                {({ connectDragTarget }) => (\r\n                                    <div\r\n                                        ref={connectDragTarget}\r\n                                        style={{\r\n                                            height: 32,\r\n                                            lineHeight: `32px`,\r\n                                            padding: \"0 20px\"\r\n                                        }}\r\n                                    >\r\n                                        {widget.title}\r\n                                    </div>\r\n                                )}\r\n                            </WidgetItem>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <DropContainerDemo title=\"A\" />\r\n                <DropContainerDemo pid=\"b\" title=\"B\" />\r\n                <AnimateContainer />\r\n\r\n                <DropContainerWithChildDemo title=\"Parent\" />\r\n                <DropContainerDemo\r\n                    pid=\"d\"\r\n                    title=\"D\"\r\n                    canDrop={item => {\r\n                        return item.xtype === \"EX_TEXTAREA_FIELD\";\r\n                    }}\r\n                />\r\n                <DragLayerDemo />\r\n            </div>\r\n        </WebDesignDndProvider>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function AnimateContainer() {\r\n    return (\r\n        <DropContainer pid=\"Animate\">\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                const list = [...items];\r\n                list.sort((a, b) => a.index - b.index);\r\n\r\n                function getPositionIndex(index) {\r\n                    for (let i = 0; i < items.length; i++) {\r\n                        const item = items[i];\r\n                        if (item.index === index) return i;\r\n                    }\r\n                }\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            position: \"relative\",\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>Animate</h3>\r\n                        <hr />\r\n                        <div\r\n                            style={{\r\n                                position: \"relative\"\r\n                            }}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    position: \"relative\"\r\n                                }}\r\n                            >\r\n                                {list.map((item, index) => {\r\n                                    var pos = getPositionIndex(item.index);\r\n\r\n                                    return (\r\n                                        <DropItem key={item.id} item={item}>\r\n                                            {({\r\n                                                connectDragAndDrop,\r\n                                                isDragging,\r\n                                                isHover,\r\n                                                isOver,\r\n                                                isTmp\r\n                                            }) => {\r\n                                                return (\r\n                                                    <div\r\n                                                        ref={connectDragAndDrop}\r\n                                                        key={item.id}\r\n                                                        id={item.id}\r\n                                                        style={{\r\n                                                            transition:\r\n                                                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                                                            position:\r\n                                                                \"absolute\",\r\n                                                            left: 5,\r\n                                                            right: 5,\r\n                                                            transform: `translate(0, ${(30 +\r\n                                                                18) *\r\n                                                                pos}px)`,\r\n                                                            zIndex: isDragging\r\n                                                                ? 2\r\n                                                                : 1,\r\n                                                            opacity: isDragging\r\n                                                                ? 0.5\r\n                                                                : 1,\r\n                                                            padding: 10,\r\n                                                            background:\r\n                                                                \"#f2f2f2\",\r\n                                                            border:\r\n                                                                isOver &&\r\n                                                                !isDragging\r\n                                                                    ? \"1px solid green\"\r\n                                                                    : \"1px solid #dadada\"\r\n                                                        }}\r\n                                                    >\r\n                                                        {item.title}({item.id})\r\n                                                    </div>\r\n                                                );\r\n                                            }}\r\n                                        </DropItem>\r\n                                    );\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport HTML5Backend from \"react-dnd-html5-backend\";\r\nimport { DndProvider } from \"react-dnd\";\r\n\r\nimport Model from \"./Model\";\r\n\r\nexport default class WebDesignDndProvider extends React.Component {\r\n    static defaultProps = {\r\n        backend: HTML5Backend\r\n    };\r\n\r\n    model = null;\r\n\r\n    getModel() {\r\n        return this.model;\r\n    }\r\n\r\n    saveModel = model => {\r\n        this.model = model;\r\n    };\r\n\r\n    render() {\r\n        const { children, backend, ...props } = this.props;\r\n\r\n        return (\r\n            <DndProvider backend={backend}>\r\n                <Model {...props} ref={this.saveModel}>\r\n                    {children}\r\n                </Model>\r\n            </DndProvider>\r\n        );\r\n    }\r\n}\r\n","import { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport WebDesignDndProvider from \"./WebDesignDndProvider\";\r\nimport { DropContainer, DropItem } from \"./DropContainer\";\r\nimport WidgetItem from \"./WidgetItem\";\r\nimport DragLayer from \"./DragLayer\";\r\nimport ModelContext from \"./ModelContext\";\r\n\r\nconst WebDesignContext = ModelContext;\r\n\r\nexport {\r\n    WebDesignContext,\r\n    WebDesignDndProvider,\r\n    WidgetItem,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n};\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport ModelContext from \"../ModelContext\";\r\n\r\nimport find from \"lodash/find\";\r\nimport findIndex from \"lodash/findIndex\";\r\n\r\nfunction randomStr(prefix = \"\") {\r\n    return (\r\n        prefix +\r\n        Math.random()\r\n            .toString(16)\r\n            .slice(2, 8)\r\n    );\r\n}\r\n\r\nfunction normalizeItem(item, props) {\r\n    const idField = props.idField;\r\n    const pidField = props.pidField;\r\n\r\n    item[idField] =\r\n        item[idField] === undefined ? randomStr(`item_`) : item[idField];\r\n\r\n    item[pidField] = item[pidField] === undefined ? null : item[pidField];\r\n\r\n    return item;\r\n}\r\n\r\nexport default class WebDesignModel extends React.Component {\r\n    static propTypes = {\r\n        value: propTypes.array,\r\n        defaultValue: propTypes.array,\r\n        align: propTypes.oneOf([\"all\", \"vertical\", \"horizontal\"]),\r\n        onChange: propTypes.func,\r\n        onDragStart: propTypes.func,\r\n        onDragEnd: propTypes.func,\r\n        onDrop: propTypes.func\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.value) {\r\n            props.value.forEach(item => normalizeItem(item, props));\r\n        }\r\n        return {\r\n            items: \"value\" in props ? props.value : state.items\r\n        };\r\n    }\r\n\r\n    static defaultProps = {\r\n        idField: \"id\",\r\n        pidField: \"pid\",\r\n        indexField: \"index\",\r\n        align: \"vertical\",\r\n        onChange: null\r\n    };\r\n\r\n    DropContainerContext = React.createContext({\r\n        isRootContainer: true\r\n        // canDrop: null\r\n    });\r\n\r\n    state = {\r\n        scope: randomStr(\"scope_\"),\r\n        items: this.props.defaultValue || []\r\n    };\r\n\r\n    onChange(items) {\r\n        const props = this.props;\r\n        const { onChange } = props;\r\n\r\n        if (!(\"value\" in props)) {\r\n            this.setState({\r\n                items\r\n            });\r\n        }\r\n\r\n        if (onChange) {\r\n            onChange(items);\r\n        }\r\n    }\r\n\r\n    getScope() {\r\n        return this.state.scope;\r\n    }\r\n\r\n    fireEvent(eventName, ev) {\r\n        const { onDragStart, onDragEnd, onDrop } = this.props;\r\n\r\n        const events = {\r\n            onDragStart,\r\n            onDragEnd,\r\n            onDrop\r\n        };\r\n\r\n        const handler = events[eventName];\r\n\r\n        if (handler) {\r\n            handler(ev);\r\n        }\r\n    }\r\n\r\n    getItems(pid = null) {\r\n        const { pidField } = this.props;\r\n        const items = this.getAllItems();\r\n\r\n        return items.filter(item => item && item[pidField] == pid);\r\n    }\r\n\r\n    getChildren(id = null, items = this.state.items) {\r\n        const { pidField } = this.props;\r\n        return items.filter(item => item[pidField] == id);\r\n    }\r\n\r\n    getAllItems() {\r\n        return [...this.state.items];\r\n    }\r\n\r\n    //获取组件的所有父级ID\r\n    getPids(id) {\r\n        const { idField, pidField } = this.props;\r\n        const pids = [];\r\n        let node = this.getItem(id);\r\n\r\n        if (!node) return pids;\r\n\r\n        if (!node[pidField]) return pids;\r\n\r\n        let currentFieldId = node[pidField];\r\n        let pNode;\r\n        while ((pNode = this.getItem(currentFieldId))) {\r\n            pids.push(pNode[idField]);\r\n            currentFieldId = pNode[pidField];\r\n            if (!currentFieldId) break;\r\n        }\r\n\r\n        return pids;\r\n    }\r\n\r\n    updateItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1) {\r\n            items[idx] = item;\r\n        }\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    isSameItem(s1, s2) {\r\n        const { idField } = this.props;\r\n\r\n        return s1[idField] === s2[idField];\r\n    }\r\n\r\n    addItem(item, pid = null) {\r\n        const { pidField, indexField } = this.props;\r\n        item = normalizeItem(item, this.props);\r\n\r\n        const items = this.getAllItems();\r\n\r\n        item[pidField] = pid;\r\n\r\n        items.push(item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    addTmpItem(item, pid) {\r\n        item.__tmp__ = true;\r\n        item.__dragging__ = true;\r\n        this.addItem(item, pid);\r\n    }\r\n\r\n    setItemDragging(item) {\r\n        item.__dragging__ = true;\r\n\r\n        this.onChange(this.getAllItems());\r\n    }\r\n\r\n    removeItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        //移除指定项目及子项目\r\n        const ret = items.filter(item => {\r\n            let shouldRemove = item[idField] === id;\r\n\r\n            if (!shouldRemove) {\r\n                const pids = this.getPids(item[idField]);\r\n                shouldRemove = pids.indexOf(id) > -1;\r\n            }\r\n\r\n            return !shouldRemove;\r\n        });\r\n\r\n        this.onChange(ret);\r\n    }\r\n\r\n    getItemIndex(id, items) {\r\n        const { idField } = this.props;\r\n        items = items || this.getAllItems();\r\n        return findIndex(items, item => item[idField] === id);\r\n    }\r\n\r\n    getItem(id) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        return find(items, item => item && item[idField] === id);\r\n    }\r\n\r\n    insertBefore(item, bItem) {\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = bItem[idField];\r\n        // const bItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== 0) {\r\n            const prevItem = items[_idx - 1];\r\n            if (\r\n                prevItem[idField] === item[idField] &&\r\n                prevItem[pidField] === bItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = bItem[pidField];\r\n\r\n        //插入操作\r\n        const idx = this.getItemIndex(id, items);\r\n        items.splice(idx, 0, item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    insertAfter(item, prevItem) {\r\n        const { idField, pidField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = prevItem[idField];\r\n        // const prevItem = this.getItem(id);\r\n\r\n        //判断是否需要移动\r\n        const _idx = this.getItemIndex(id);\r\n        if (_idx !== items.length - 1) {\r\n            const nextItem = items[_idx + 1];\r\n            if (\r\n                nextItem[idField] === item[idField] &&\r\n                nextItem[pidField] === prevItem[pidField]\r\n            ) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        //判断当前item是否已经存在, 如果存在则先删除\r\n        const oIdx = this.getItemIndex(item[idField]);\r\n        if (oIdx > -1) {\r\n            items.splice(oIdx, 1);\r\n        }\r\n\r\n        item[pidField] = prevItem[pidField];\r\n\r\n        //插入操作 之前有删除操作, 要重新查找index\r\n        const idx = findIndex(items, item => item[idField] === id);\r\n        items.splice(idx, 1, items[idx], item);\r\n\r\n        this.onChange(items);\r\n    }\r\n\r\n    clearTmpItems() {\r\n        const items = this.getAllItems();\r\n        const newItems = items\r\n            .map(item => {\r\n                if (item.__dragging__) {\r\n                    delete item.__dragging__;\r\n                }\r\n                return item;\r\n            })\r\n            .filter(item => !item.__tmp__);\r\n\r\n        this.onChange(newItems);\r\n    }\r\n\r\n    updateItemPid(item, pid = null) {\r\n        const { idField, pidField } = this.props;\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (item[pidField] === pid) return true;\r\n\r\n        /**\r\n         * 局部环路检测\r\n         * 如: {id: A, pid: null}  {id: B, pid: A}\r\n         * 这是如果updateItemPid(A, B) 结果为:\r\n         * {id: A, pid: B}  {id: B, pid: A}\r\n         *\r\n         */\r\n        const pids = pid == null ? [] : this.getPids(pid);\r\n        if (pids.length) {\r\n            if (pids.indexOf(id) !== -1) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // 同级节点转变为子节点时顺序处理\r\n        if (pid) {\r\n            const pidIndex = this.getItemIndex(pid);\r\n            const childs = this.getChildren(pid);\r\n\r\n            if (childs.length) {\r\n                const firstItem = childs[0];\r\n                const lastItem = childs[childs.length - 1];\r\n\r\n                if (idx > pidIndex) {\r\n                    this.insertAfter(item, lastItem);\r\n                } else {\r\n                    this.insertBefore(item, firstItem);\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n\r\n        if (idx !== -1) {\r\n            item[pidField] = pid;\r\n        }\r\n\r\n        this.onChange(this.getAllItems());\r\n\r\n        return true;\r\n    }\r\n\r\n    commitItem(item) {\r\n        const { idField } = this.props;\r\n        const items = this.getAllItems();\r\n        const id = item[idField];\r\n        const idx = this.getItemIndex(id);\r\n\r\n        if (idx !== -1 && item.__tmp__) {\r\n            item.__tmp__ = false;\r\n            delete item.__tmp__;\r\n            items[idx] = item;\r\n\r\n            this.onChange(items);\r\n        }\r\n    }\r\n\r\n    isTmpItem(item) {\r\n        return !!item.__tmp__;\r\n    }\r\n\r\n    isDragging(item) {\r\n        return !!item.__dragging__;\r\n    }\r\n\r\n    getModel() {\r\n        return Object.create(this);\r\n        // return {\r\n        //     DropContainerContext: this.DropContainerContext,\r\n        //     isSameItem: this.isSameItem.bind(this),\r\n        //     getScope: this.getScope.bind(this),\r\n        //     fireEvent: this.fireEvent.bind(this),\r\n        //     addItem: this.addItem.bind(this),\r\n        //     addTmpItem: this.addTmpItem.bind(this),\r\n        //     getPids: this.getPids.bind(this),\r\n        //     updateItem: this.updateItem.bind(this),\r\n        //     getItems: this.getItems.bind(this),\r\n        //     getAllItems: this.getAllItems.bind(this),\r\n        //     removeItem: this.removeItem.bind(this),\r\n        //     getItemIndex: this.getItemIndex.bind(this),\r\n        //     getItem: this.getItem.bind(this),\r\n        //     insertBefore: this.insertBefore.bind(this),\r\n        //     insertAfter: this.insertAfter.bind(this),\r\n        //     clearTmpItems: this.clearTmpItems.bind(this),\r\n        //     commitItem: this.commitItem.bind(this),\r\n        //     isTmpItem: this.isTmpItem.bind(this),\r\n        //     updateItemPid: this.updateItemPid.bind(this),\r\n        //     setItemDragging: this.setItemDragging.bind(this),\r\n        //     isDragging: this.isDragging.bind(this)\r\n        // };\r\n    }\r\n\r\n    render() {\r\n        const { children } = this.props;\r\n\r\n        return (\r\n            <ModelContext.Provider value={this.getModel()}>\r\n                {children}\r\n            </ModelContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import DropContainer from \"./DropContainer\";\r\nimport DropItem from \"./DropItem\";\r\n\r\nexport { DropContainer, DropItem };\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport invariant from \"invariant\";\r\nimport { ACTION_ADD, ACTION_SORT } from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\n\r\nclass DropContainer extends React.Component {\r\n    static propTypes = {\r\n        children: propTypes.func.isRequired,\r\n        pid: propTypes.any,\r\n        disabled: propTypes.bool,\r\n        collect: propTypes.func,\r\n        canDrop: propTypes.func,\r\n        hover: propTypes.func,\r\n        drop: propTypes.func\r\n    };\r\n\r\n    static defaultProps = {\r\n        pid: null\r\n    };\r\n\r\n    // _connectDropTarget = null;\r\n\r\n    // connectDrop() {\r\n    //     const { disabled } = this.props;\r\n\r\n    //     const dom = findDOMNode(this);\r\n    //     if (this._connectDropTarget) {\r\n    //         this._connectDropTarget(disabled ? null : dom);\r\n    //     }\r\n    // }\r\n\r\n    componentDidMount() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用 DropItem WidgetItem 同样提示\r\n        // this.connectDrop();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        //TODO: 后续提示_connectDropTarget是否被未被调用\r\n        // this.connectDrop();\r\n    }\r\n\r\n    render() {\r\n        const self = this;\r\n        const {\r\n            pid = null,\r\n            canDrop,\r\n            hover,\r\n            drop,\r\n            collect,\r\n            children\r\n        } = this.props;\r\n\r\n        const designer = React.useContext(ModelContext);\r\n        const DropContainerContext = designer.DropContainerContext;\r\n        const { isRootContainer } = React.useContext(DropContainerContext);\r\n\r\n        invariant(\r\n            isRootContainer ? true : pid != null,\r\n            \"sub DropContainer props.pid miss.\"\r\n        );\r\n\r\n        const [collectedProps, connectDropTarget] = useDrop({\r\n            accept: designer.getScope(),\r\n\r\n            canDrop({ item }, monitor) {\r\n                if (canDrop) {\r\n                    return canDrop(item, monitor);\r\n                }\r\n\r\n                return true;\r\n            },\r\n\r\n            hover(dragResult, monitor) {\r\n                const targetDOM = findDOMNode(self);\r\n\r\n                if (hover) {\r\n                    hover(dragResult, monitor);\r\n                }\r\n\r\n                designer.fireEvent(\"onDragHoverContainer\", {\r\n                    target: pid,\r\n                    targetDOM,\r\n                    monitor,\r\n                    ...dragResult\r\n                });\r\n\r\n                const isOver = monitor.isOver({ shallow: true });\r\n                if (!isOver) return;\r\n\r\n                if (!monitor.canDrop()) {\r\n                    return;\r\n                }\r\n\r\n                designer.updateItemPid(dragResult.item, pid);\r\n            },\r\n\r\n            drop(dragResult, monitor) {\r\n                const targetDOM = findDOMNode(self);\r\n\r\n                if (drop) {\r\n                    drop(dragResult, monitor);\r\n                }\r\n\r\n                //根节点统一commit\r\n                if (isRootContainer) {\r\n                    const isTmpItem = designer.isTmpItem(dragResult.item);\r\n\r\n                    designer.fireEvent(\"onDrop\", {\r\n                        target: pid,\r\n                        targetDOM,\r\n                        action: isTmpItem ? ACTION_ADD : ACTION_SORT,\r\n                        ...dragResult\r\n                    });\r\n\r\n                    designer.commitItem(dragResult.item);\r\n                }\r\n            },\r\n\r\n            collect: monitor => {\r\n                const ext = collect ? collect(monitor) : {};\r\n\r\n                return {\r\n                    monitor,\r\n                    canDrop: monitor.canDrop(),\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    ...ext\r\n                };\r\n            }\r\n        });\r\n\r\n        let items = designer.getItems(pid);\r\n        if (!collectedProps.isOver) {\r\n            items = items.filter(item => !designer.isTmpItem(item));\r\n        }\r\n\r\n        // this._connectDropTarget = connectDropTarget;\r\n\r\n        // const child =\r\n        //     typeof children === \"function\"\r\n        //         ? children(items, collectedProps)\r\n        //         : children;\r\n\r\n        // React.Children.only(child);\r\n\r\n        return (\r\n            <DropContainerContext.Provider\r\n                value={{\r\n                    isRootContainer: false\r\n                }}\r\n            >\r\n                {children({\r\n                    ...collectedProps,\r\n                    model: designer,\r\n                    connectDropTarget,\r\n                    items\r\n                })}\r\n            </DropContainerContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withHooks(DropContainer);\r\n","import React from \"react\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport propTypes from \"prop-types\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport { useDrop, useDrag } from \"react-dnd\";\r\nimport { ACTION_ADD, ACTION_SORT } from \"../constants\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport { isBeforeRect } from \"../utils\";\r\n\r\nclass DropItem extends React.Component {\r\n    static propTypes = {\r\n        children: propTypes.func.isRequired,\r\n        item: propTypes.object.isRequired,\r\n        align: propTypes.oneOf([\"all\", \"vertical\", \"horizontal\"]),\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    getDropOptions() {\r\n        const self = this;\r\n        let { item, align } = this.props;\r\n        const designer = React.useContext(ModelContext);\r\n        // const DropContainerContext = designer.DropContainerContext;\r\n        // const { canDrop } = React.useContext(DropContainerContext);\r\n\r\n        align = align || designer.props.align;\r\n\r\n        return {\r\n            accept: designer.getScope(),\r\n            canDrop({ item: dragItem }, monitor) {\r\n                return designer.isTmpItem(item)\r\n                    ? false\r\n                    : !designer.isSameItem(item, dragItem);\r\n            },\r\n\r\n            hover({ item: dragItem }, monitor) {\r\n                designer.fireEvent(\"onDragHoverItem\", {\r\n                    target: item,\r\n                    monitor,\r\n                    item: dragItem\r\n                });\r\n\r\n                const isOver = monitor.isOver({ shallow: true });\r\n                if (!isOver) return;\r\n\r\n                // const canDropRet = canDrop ? canDrop(dragItem, monitor) : true;\r\n                //|| !canDropRet\r\n                if (!monitor.canDrop()) {\r\n                    return;\r\n                }\r\n\r\n                const dragOffset = monitor.getClientOffset();\r\n                const targetDOM = findDOMNode(self);\r\n\r\n                //顺序调整\r\n                const targetOffset = targetDOM.getBoundingClientRect();\r\n\r\n                const middleX = ~~(targetOffset.right - targetOffset.width / 2);\r\n\r\n                const middleY = ~~(\r\n                    targetOffset.bottom -\r\n                    targetOffset.height / 2\r\n                );\r\n\r\n                let shouldInsertBefore = false;\r\n\r\n                switch (align) {\r\n                    case \"vertical\":\r\n                        shouldInsertBefore = dragOffset.y <= middleY;\r\n                        break;\r\n                    case \"horizontal\":\r\n                        shouldInsertBefore = dragOffset.x <= middleX;\r\n                        break;\r\n                    case \"all\":\r\n                        shouldInsertBefore = isBeforeRect(\r\n                            targetOffset.left,\r\n                            targetOffset.top,\r\n                            targetOffset.width,\r\n                            targetOffset.height,\r\n                            dragOffset.x,\r\n                            dragOffset.y\r\n                        );\r\n                        break;\r\n                    default:\r\n                        //vertical default\r\n                        shouldInsertBefore = dragOffset.y <= middleY;\r\n                }\r\n\r\n                if (shouldInsertBefore) {\r\n                    designer.insertBefore(dragItem, item);\r\n                } else {\r\n                    designer.insertAfter(dragItem, item);\r\n                }\r\n            },\r\n\r\n            collect(monitor) {\r\n                return {\r\n                    monitor,\r\n                    isOver: monitor.isOver(),\r\n                    isStrictlyOver: monitor.isOver({ shallow: true }),\r\n                    canDrop: designer.isTmpItem(item)\r\n                        ? false\r\n                        : monitor.canDrop()\r\n                };\r\n            }\r\n        };\r\n    }\r\n\r\n    getDragOptions() {\r\n        const self = this;\r\n        const { item, canDrag, beginDrag, endDrag } = this.props;\r\n        const designer = React.useContext(ModelContext);\r\n\r\n        return {\r\n            item: {\r\n                type: designer.getScope()\r\n            },\r\n\r\n            canDrag(monitor) {\r\n                if (canDrag) {\r\n                    return canDrag(monitor);\r\n                }\r\n                return true;\r\n            },\r\n\r\n            begin(monitor) {\r\n                const dom = findDOMNode(self);\r\n\r\n                if (beginDrag) {\r\n                    beginDrag(\r\n                        {\r\n                            item,\r\n                            dom\r\n                        },\r\n                        monitor\r\n                    );\r\n                }\r\n\r\n                designer.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    action: ACTION_SORT\r\n                });\r\n\r\n                designer.setItemDragging(item);\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end(dragResult, monitor) {\r\n                if (endDrag) {\r\n                    endDrag(dragResult, monitor);\r\n                }\r\n\r\n                designer.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    action: ACTION_SORT\r\n                });\r\n\r\n                //clearDraggingState\r\n                designer.clearTmpItems();\r\n            }\r\n\r\n            // collect(monitor) {\r\n            //     return {\r\n            //         // monitor,\r\n            //         // isDragging: monitor.isDragging()\r\n            //     };\r\n            // }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const { children, item } = this.props;\r\n        const designer = React.useContext(ModelContext);\r\n\r\n        const [collectedDropProps, connectDropTarget] = useDrop(\r\n            this.getDropOptions()\r\n        );\r\n\r\n        const [\r\n            collectedDragProps,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        ] = useDrag(this.getDragOptions());\r\n\r\n        const connectDragAndDrop = dom => {\r\n            connectDropTarget(dom);\r\n            connectDragTarget(dom);\r\n        };\r\n\r\n        return children({\r\n            ...collectedDropProps,\r\n            ...collectedDragProps,\r\n            item,\r\n            isTmp: designer.isTmpItem(item),\r\n            isDragging: designer.isDragging(item),\r\n            connectDropTarget,\r\n            connectDragTarget,\r\n            connectDragAndDrop,\r\n            connectDragPreview\r\n        });\r\n    }\r\n}\r\n\r\nexport default withHooks(DropItem);\r\n","/**\r\n * 判断指定坐标在指定矩形上的位置\r\n *\r\n * @param {number} x 矩形x坐标\r\n * @param {number} y 矩形y坐标\r\n * @param {number} width 矩形宽度\r\n * @param {number} height 矩形高度\r\n * @param {number} px 待检测坐标x(一般位鼠标x坐标)\r\n * @param {number} py 待检测坐标y(一般位鼠标y坐标)\r\n * @returns {number} 1:上 2:下 3:左 4:右 -1:对角线上(中心点)\r\n */\r\nexport function getRectDirection(x, y, width, height, px, py) {\r\n    const y_ac =\r\n        ((y + height) * px - y * px + y * (x + width) - (y + height) * x) /\r\n        (x + width - x);\r\n    const y_bd =\r\n        (y * px - (y + height) * px + (y + height) * (x + width) - y * x) /\r\n        (x + width - x);\r\n\r\n    if (py < y_ac && py < y_bd) {\r\n        return 1;\r\n    } else if (py > y_ac && py > y_bd) {\r\n        return 2;\r\n    } else if (py > y_ac && py < y_bd) {\r\n        return 3;\r\n    } else if (py < y_ac && py > y_bd) {\r\n        return 4;\r\n    } else {\r\n        //处在对角线上\r\n        const middle_x = x + width / 2;\r\n        const middle_y = y + height / 2;\r\n\r\n        if (px > middle_x && py < middle_y) {\r\n            //右上对角线\r\n            return 1;\r\n        } else if (px > middle_x && py > middle_y) {\r\n            //右下对角线\r\n            return 2;\r\n        } else if (px < middle_x && py < middle_y) {\r\n            //左上对角线\r\n            return 1;\r\n        } else if (px < middle_x && py > middle_y) {\r\n            //左下对角线\r\n            return 2;\r\n        } else {\r\n            //中心点\r\n            return -1;\r\n        }\r\n    }\r\n}\r\n\r\nexport function isBeforeRect(...a) {\r\n    const ret = getRectDirection(...a);\r\n\r\n    return ret === 1 || ret === 3;\r\n}\r\n","import React from \"react\";\r\nimport propTypes from \"prop-types\";\r\nimport { findDOMNode } from \"react-dom\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\r\nimport withHooks from \"with-component-hooks\";\r\nimport ModelContext from \"../ModelContext\";\r\nimport { ACTION_ADD, ACTION_SORT } from \"../constants\";\r\n\r\nclass WidgetItem extends React.Component {\r\n    static propTypes = {\r\n        children: propTypes.func.isRequired,\r\n        getInstance: propTypes.func.isRequired,\r\n        canDrag: propTypes.func,\r\n        beginDrag: propTypes.func,\r\n        endDrag: propTypes.func\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            children,\r\n            getInstance,\r\n            canDrag,\r\n            beginDrag,\r\n            endDrag\r\n        } = this.props;\r\n        const self = this;\r\n        const designer = React.useContext(ModelContext);\r\n\r\n        const [collectProps, connectDragTarget, connectDragPreview] = useDrag({\r\n            item: {\r\n                type: designer.getScope()\r\n            },\r\n\r\n            canDrag(monitor) {\r\n                if (canDrag) {\r\n                    return canDrag(monitor);\r\n                }\r\n                return true;\r\n            },\r\n\r\n            begin(monitor) {\r\n                const item = getInstance();\r\n                const dom = findDOMNode(self);\r\n\r\n                if (beginDrag) {\r\n                    beginDrag(\r\n                        {\r\n                            item,\r\n                            dom\r\n                        },\r\n                        monitor\r\n                    );\r\n                }\r\n\r\n                designer.fireEvent(\"onDragStart\", {\r\n                    item,\r\n                    dom,\r\n                    action: ACTION_ADD\r\n                });\r\n\r\n                designer.addTmpItem(item);\r\n\r\n                return {\r\n                    item,\r\n                    dom\r\n                };\r\n            },\r\n\r\n            end(dragResult, monitor) {\r\n                if (endDrag) {\r\n                    endDrag(dragResult, monitor);\r\n                }\r\n\r\n                designer.fireEvent(\"onDragEnd\", {\r\n                    ...dragResult,\r\n                    action: ACTION_ADD\r\n                });\r\n\r\n                designer.clearTmpItems();\r\n            },\r\n\r\n            collect(monitor) {\r\n                return {\r\n                    monitor,\r\n                    isDragging: monitor.isDragging()\r\n                };\r\n            }\r\n        });\r\n\r\n        return children({\r\n            ...collectProps,\r\n            connectDragTarget,\r\n            connectDragPreview\r\n        });\r\n    }\r\n}\r\n\r\nexport default withHooks(WidgetItem);\r\n","import React from \"react\";\r\nimport { useDragLayer } from \"react-dnd\";\r\n\r\nexport default ({ children }) => {\r\n    const props = useDragLayer(monitor => {\r\n        const dragResult = monitor.getItem();\r\n        return [\r\n            {\r\n                type: monitor.getItemType(),\r\n                isDragging: monitor.isDragging(),\r\n                initialClientOffset: monitor.getInitialClientOffset(),\r\n                initialSourceClientOffset: monitor.getInitialSourceClientOffset(),\r\n                clientOffset: monitor.getClientOffset(),\r\n                differenceFromInitialOffset: monitor.getDifferenceFromInitialOffset(),\r\n                sourceClientOffset: monitor.getSourceClientOffset(),\r\n                ...dragResult\r\n            },\r\n            monitor\r\n        ];\r\n    });\r\n\r\n    const child =\r\n        typeof children === \"function\"\r\n            ? children(props[0], props[1])\r\n            : children;\r\n\r\n    return child;\r\n};\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\n\r\nexport default function DropContainerDemo({ pid = null, title, canDrop }) {\r\n    return (\r\n        <DropContainer pid={pid} canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { DropContainer, DropItem } from \"@/src\";\r\nexport default function DropContainerWithChildDemo({ title, canDrop }) {\r\n    return (\r\n        <DropContainer pid=\"parent\" canDrop={canDrop}>\r\n            {({ items, monitor, canDrop, connectDropTarget }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: canDrop\r\n                                ? \"1px solid green\"\r\n                                : \"1px solid #ccc\",\r\n                            flex: 1\r\n                        }}\r\n                    >\r\n                        <h3>{title}</h3>\r\n                        <hr />\r\n                        {items.map(item => {\r\n                            return (\r\n                                <DropItem key={item.id} item={item}>\r\n                                    {({\r\n                                        connectDragAndDrop,\r\n                                        isDragging,\r\n                                        isHover,\r\n                                        isOver,\r\n                                        isTmp\r\n                                    }) => {\r\n                                        return (\r\n                                            <div\r\n                                                ref={connectDragAndDrop}\r\n                                                style={{\r\n                                                    opacity: isDragging\r\n                                                        ? 0.5\r\n                                                        : 1,\r\n                                                    padding: 10,\r\n                                                    margin: 5,\r\n                                                    background: \"#f2f2f2\",\r\n                                                    border: \"1px solid #dadada\"\r\n                                                }}\r\n                                            >\r\n                                                {item.title}({item.id})\r\n                                            </div>\r\n                                        );\r\n                                    }}\r\n                                </DropItem>\r\n                            );\r\n                        })}\r\n\r\n                        <DropContainer pid=\"child\">\r\n                            {({\r\n                                items,\r\n                                monitor,\r\n                                canDrop,\r\n                                connectDropTarget\r\n                            }) => {\r\n                                return (\r\n                                    <div\r\n                                        ref={connectDropTarget}\r\n                                        style={{\r\n                                            height: 300,\r\n                                            overflow: \"auto\",\r\n                                            border: canDrop\r\n                                                ? \"1px solid green\"\r\n                                                : \"1px solid #ccc\",\r\n                                            flex: 1\r\n                                        }}\r\n                                    >\r\n                                        <h3>child</h3>\r\n                                        <hr />\r\n                                        {items.map(item => {\r\n                                            return (\r\n                                                <DropItem\r\n                                                    key={item.id}\r\n                                                    item={item}\r\n                                                >\r\n                                                    {({\r\n                                                        connectDragAndDrop,\r\n                                                        isDragging,\r\n                                                        isHover,\r\n                                                        isOver,\r\n                                                        isTmp\r\n                                                    }) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                ref={\r\n                                                                    connectDragAndDrop\r\n                                                                }\r\n                                                                style={{\r\n                                                                    opacity: isDragging\r\n                                                                        ? 0.5\r\n                                                                        : 1,\r\n                                                                    padding: 10,\r\n                                                                    margin: 5,\r\n                                                                    background:\r\n                                                                        \"#f2f2f2\",\r\n                                                                    border:\r\n                                                                        \"1px solid #dadada\"\r\n                                                                }}\r\n                                                            >\r\n                                                                {item.title}(\r\n                                                                {item.id})\r\n                                                            </div>\r\n                                                        );\r\n                                                    }}\r\n                                                </DropItem>\r\n                                            );\r\n                                        })}\r\n                                    </div>\r\n                                );\r\n                            }}\r\n                        </DropContainer>\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropContainer>\r\n    );\r\n}\r\n","import TextField from \"./TextField\";\r\nimport TextareaField from \"./TextareaField\";\r\nimport SelectField from \"./SelectField\";\r\nimport CheckboxField from \"./CheckboxField\";\r\nimport RadioField from \"./RadioField\";\r\n\r\nexport default [\r\n    TextField,\r\n    TextareaField,\r\n    SelectField,\r\n    CheckboxField,\r\n    RadioField\r\n];\r\n","export default {\r\n    xtype: \"EX_TEXT_FIELD\",\r\n    title: \"文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_TEXTAREA_FIELD\",\r\n    title: \"多行文本\"\r\n};\r\n","export default {\r\n    xtype: \"EX_SELECT_FIELD\",\r\n    title: \"单选列表\"\r\n};\r\n","export default {\r\n    xtype: \"EX_CHECKBOX_FIELD\",\r\n    title: \"复选框\"\r\n};\r\n","export default {\r\n    xtype: \"EX_RADIO_FIELD\",\r\n    title: \"单选框\"\r\n};\r\n","import React from \"react\";\r\nimport { WebDesignDndProvider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <DropContainer>\r\n                {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                    <div\r\n                        ref={connectDropTarget}\r\n                        style={{\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: 4,\r\n                            padding: 5,\r\n                            width: 270,\r\n                            margin: \"30px auto\",\r\n                            height: \"80%\",\r\n                            overflow: \"auto\"\r\n                        }}\r\n                    >\r\n                        {items.map(item => (\r\n                            <ListItem key={item.id} item={item} />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </DropContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { WebDesignDndProvider, DropContainer, DropItem } from \"@/src\";\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 20; i++) {\r\n    dataset.push({\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item, index }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, isDragging }) => {\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            transition:\r\n                                \"transform .2s cubic-bezier(0.2, 0, 0, 1)\",\r\n                            position: \"absolute\",\r\n                            left: 5,\r\n                            right: 5,\r\n                            transform: `translate(0, ${(30 + 18) * index}px)`,\r\n                            zIndex: isDragging ? 2 : 1,\r\n                            opacity: isDragging ? 0.5 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction renderList({ items, monitor, canDrop, connectDropTarget }) {\r\n    const list = [...items];\r\n    list.sort((a, b) => a.id - b.id);\r\n\r\n    const getItemPosition = item => {\r\n        for (let i = 0; i < items.length; i++) {\r\n            const current = items[i];\r\n            if (current.id === item.id) return i;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            ref={{ items, monitor, canDrop, connectDropTarget }}\r\n            style={{\r\n                position: \"relative\",\r\n                border: \"1px solid #ccc\",\r\n                borderRadius: 4,\r\n                padding: 5,\r\n                width: 270,\r\n                margin: \"30px auto\",\r\n                height: \"80%\",\r\n                overflow: \"auto\"\r\n            }}\r\n        >\r\n            {list.map(item => (\r\n                <ListItem\r\n                    key={item.id}\r\n                    index={getItemPosition(item)}\r\n                    item={item}\r\n                />\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <DropContainer>{renderList}</DropContainer>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n    WebDesignDndProvider,\r\n    DropContainer,\r\n    DropItem,\r\n    DragLayer,\r\n    getEmptyImage\r\n} from \"@/src\";\r\n\r\n/**\r\n * 自定义拖拽层\r\n * 禁用系统自带的拖拽层，使用用户自定义拖拽层\r\n */\r\n\r\nconst dataset = [];\r\n\r\nfor (let i = 0; i < 5; i++) {\r\n    dataset.push({\r\n        pid: \"a\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfor (let i = 5; i < 20; i++) {\r\n    dataset.push({\r\n        pid: \"b\",\r\n        id: i + 1,\r\n        title: `${i + 1}. item`\r\n    });\r\n}\r\n\r\nfunction ListItem({ item }) {\r\n    return (\r\n        <DropItem item={item}>\r\n            {({ connectDragAndDrop, connectDragPreview, isDragging }) => {\r\n                //用空白图片覆盖默认推拽效果\r\n                connectDragPreview(getEmptyImage());\r\n\r\n                return (\r\n                    <div\r\n                        ref={connectDragAndDrop}\r\n                        style={{\r\n                            opacity: isDragging ? 0.4 : 1,\r\n                            padding: 10,\r\n                            margin: 5,\r\n                            background: \"#f2f2f2\",\r\n                            border: \"1px solid #dadada\"\r\n                        }}\r\n                    >\r\n                        {item.title}\r\n                    </div>\r\n                );\r\n            }}\r\n        </DropItem>\r\n    );\r\n}\r\n\r\nfunction ItemDragLayer({ dom, differenceFromInitialOffset }) {\r\n    const [ret, initData] = React.useState(null);\r\n\r\n    React.useEffect(() => {\r\n        const cloneNode = dom.cloneNode(true);\r\n        const rect = dom.getBoundingClientRect();\r\n\r\n        initData({\r\n            rect,\r\n            cloneNode\r\n        });\r\n\r\n        cloneNode.style.position = \"fixed\";\r\n        //重要\r\n        cloneNode.style.pointerEvents = \"none\";\r\n        cloneNode.style.opacity = 1;\r\n        cloneNode.style.left = rect.left + \"px\";\r\n        cloneNode.style.top = rect.top + \"px\";\r\n        cloneNode.style.boxSizing = \"border-box\";\r\n        cloneNode.style.width = rect.width + \"px\";\r\n        cloneNode.style.height = rect.height + \"px\";\r\n\r\n        document.body.appendChild(cloneNode);\r\n        return () => {\r\n            document.body.removeChild(cloneNode);\r\n        };\r\n    }, []);\r\n\r\n    if (ret) {\r\n        const { cloneNode, rect } = ret;\r\n        if (differenceFromInitialOffset) {\r\n            cloneNode.style.left =\r\n                rect.left + differenceFromInitialOffset.x + \"px\";\r\n            cloneNode.style.top =\r\n                rect.top + differenceFromInitialOffset.y + \"px\";\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport default () => {\r\n    const [value, onChange] = React.useState(dataset);\r\n\r\n    return (\r\n        <WebDesignDndProvider value={value} onChange={onChange}>\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    margin: \"30px auto\",\r\n                    height: \"80%\",\r\n                    width: 600\r\n                }}\r\n            >\r\n                <DropContainer pid=\"a\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <div\r\n                    style={{\r\n                        width: 20\r\n                    }}\r\n                ></div>\r\n                <DropContainer pid=\"b\">\r\n                    {({ items, monitor, canDrop, connectDropTarget }) => (\r\n                        <div\r\n                            ref={connectDropTarget}\r\n                            style={{\r\n                                flex: \"1\",\r\n                                border: \"1px solid #ccc\",\r\n                                borderRadius: 4,\r\n                                padding: 5,\r\n                                overflow: \"auto\"\r\n                            }}\r\n                        >\r\n                            {items.map(item => (\r\n                                <ListItem key={item.id} item={item} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </DropContainer>\r\n                <DragLayer>\r\n                    {({ isDragging, dom, ...props }) => {\r\n                        if (!isDragging || !dom) return null;\r\n                        return <ItemDragLayer dom={dom} {...props} />;\r\n                    }}\r\n                </DragLayer>\r\n            </div>\r\n        </WebDesignDndProvider>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nexport default React.createContext({});","const ACTION_ADD = \"ADD\";\r\nconst ACTION_SORT = \"SORT\";\r\n\r\nexport { ACTION_ADD, ACTION_SORT };\r\n"],"sourceRoot":""}